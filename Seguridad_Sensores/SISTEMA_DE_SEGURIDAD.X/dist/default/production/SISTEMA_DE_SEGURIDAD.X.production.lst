

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Oct 17 10:14:37 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,space=0,delta=2
    12                           	psect	clrtext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=3
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=3
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2,group=1
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0004                     fsr             equ	4
    84     0004                     fsr0            equ	4
    85     0000                     indf            equ	0
    86     0000                     indf0           equ	0
    87     0002                     pc              equ	2
    88     0002                     pcl             equ	2
    89     000A                     pclath          equ	10
    90     0003                     status          equ	3
    91     0000                     INDF            equ	0	;# 
    92     0001                     TMR0            equ	1	;# 
    93     0002                     PCL             equ	2	;# 
    94     0003                     STATUS          equ	3	;# 
    95     0004                     FSR             equ	4	;# 
    96     0005                     PORTA           equ	5	;# 
    97     0006                     PORTB           equ	6	;# 
    98     0007                     PORTC           equ	7	;# 
    99     0008                     PORTD           equ	8	;# 
   100     0009                     PORTE           equ	9	;# 
   101     000A                     PCLATH          equ	10	;# 
   102     000B                     INTCON          equ	11	;# 
   103     000C                     PIR1            equ	12	;# 
   104     000D                     PIR2            equ	13	;# 
   105     000E                     TMR1            equ	14	;# 
   106     000E                     TMR1L           equ	14	;# 
   107     000F                     TMR1H           equ	15	;# 
   108     0010                     T1CON           equ	16	;# 
   109     0011                     TMR2            equ	17	;# 
   110     0012                     T2CON           equ	18	;# 
   111     0013                     SSPBUF          equ	19	;# 
   112     0014                     SSPCON          equ	20	;# 
   113     0015                     CCPR1           equ	21	;# 
   114     0015                     CCPR1L          equ	21	;# 
   115     0016                     CCPR1H          equ	22	;# 
   116     0017                     CCP1CON         equ	23	;# 
   117     0018                     RCSTA           equ	24	;# 
   118     0019                     TXREG           equ	25	;# 
   119     001A                     RCREG           equ	26	;# 
   120     001B                     CCPR2           equ	27	;# 
   121     001B                     CCPR2L          equ	27	;# 
   122     001C                     CCPR2H          equ	28	;# 
   123     001D                     CCP2CON         equ	29	;# 
   124     001E                     ADRESH          equ	30	;# 
   125     001F                     ADCON0          equ	31	;# 
   126     0081                     OPTION_REG      equ	129	;# 
   127     0085                     TRISA           equ	133	;# 
   128     0086                     TRISB           equ	134	;# 
   129     0087                     TRISC           equ	135	;# 
   130     0088                     TRISD           equ	136	;# 
   131     0089                     TRISE           equ	137	;# 
   132     008C                     PIE1            equ	140	;# 
   133     008D                     PIE2            equ	141	;# 
   134     008E                     PCON            equ	142	;# 
   135     008F                     OSCCON          equ	143	;# 
   136     0090                     OSCTUNE         equ	144	;# 
   137     0091                     SSPCON2         equ	145	;# 
   138     0092                     PR2             equ	146	;# 
   139     0093                     SSPADD          equ	147	;# 
   140     0093                     SSPMSK          equ	147	;# 
   141     0093                     MSK             equ	147	;# 
   142     0094                     SSPSTAT         equ	148	;# 
   143     0095                     WPUB            equ	149	;# 
   144     0096                     IOCB            equ	150	;# 
   145     0097                     VRCON           equ	151	;# 
   146     0098                     TXSTA           equ	152	;# 
   147     0099                     SPBRG           equ	153	;# 
   148     009A                     SPBRGH          equ	154	;# 
   149     009B                     PWM1CON         equ	155	;# 
   150     009C                     ECCPAS          equ	156	;# 
   151     009D                     PSTRCON         equ	157	;# 
   152     009E                     ADRESL          equ	158	;# 
   153     009F                     ADCON1          equ	159	;# 
   154     0105                     WDTCON          equ	261	;# 
   155     0107                     CM1CON0         equ	263	;# 
   156     0108                     CM2CON0         equ	264	;# 
   157     0109                     CM2CON1         equ	265	;# 
   158     010C                     EEDATA          equ	268	;# 
   159     010C                     EEDAT           equ	268	;# 
   160     010D                     EEADR           equ	269	;# 
   161     010E                     EEDATH          equ	270	;# 
   162     010F                     EEADRH          equ	271	;# 
   163     0185                     SRCON           equ	389	;# 
   164     0187                     BAUDCTL         equ	391	;# 
   165     0188                     ANSEL           equ	392	;# 
   166     0189                     ANSELH          equ	393	;# 
   167     018C                     EECON1          equ	396	;# 
   168     018D                     EECON2          equ	397	;# 
   169     0000                     INDF            equ	0	;# 
   170     0001                     TMR0            equ	1	;# 
   171     0002                     PCL             equ	2	;# 
   172     0003                     STATUS          equ	3	;# 
   173     0004                     FSR             equ	4	;# 
   174     0005                     PORTA           equ	5	;# 
   175     0006                     PORTB           equ	6	;# 
   176     0007                     PORTC           equ	7	;# 
   177     0008                     PORTD           equ	8	;# 
   178     0009                     PORTE           equ	9	;# 
   179     000A                     PCLATH          equ	10	;# 
   180     000B                     INTCON          equ	11	;# 
   181     000C                     PIR1            equ	12	;# 
   182     000D                     PIR2            equ	13	;# 
   183     000E                     TMR1            equ	14	;# 
   184     000E                     TMR1L           equ	14	;# 
   185     000F                     TMR1H           equ	15	;# 
   186     0010                     T1CON           equ	16	;# 
   187     0011                     TMR2            equ	17	;# 
   188     0012                     T2CON           equ	18	;# 
   189     0013                     SSPBUF          equ	19	;# 
   190     0014                     SSPCON          equ	20	;# 
   191     0015                     CCPR1           equ	21	;# 
   192     0015                     CCPR1L          equ	21	;# 
   193     0016                     CCPR1H          equ	22	;# 
   194     0017                     CCP1CON         equ	23	;# 
   195     0018                     RCSTA           equ	24	;# 
   196     0019                     TXREG           equ	25	;# 
   197     001A                     RCREG           equ	26	;# 
   198     001B                     CCPR2           equ	27	;# 
   199     001B                     CCPR2L          equ	27	;# 
   200     001C                     CCPR2H          equ	28	;# 
   201     001D                     CCP2CON         equ	29	;# 
   202     001E                     ADRESH          equ	30	;# 
   203     001F                     ADCON0          equ	31	;# 
   204     0081                     OPTION_REG      equ	129	;# 
   205     0085                     TRISA           equ	133	;# 
   206     0086                     TRISB           equ	134	;# 
   207     0087                     TRISC           equ	135	;# 
   208     0088                     TRISD           equ	136	;# 
   209     0089                     TRISE           equ	137	;# 
   210     008C                     PIE1            equ	140	;# 
   211     008D                     PIE2            equ	141	;# 
   212     008E                     PCON            equ	142	;# 
   213     008F                     OSCCON          equ	143	;# 
   214     0090                     OSCTUNE         equ	144	;# 
   215     0091                     SSPCON2         equ	145	;# 
   216     0092                     PR2             equ	146	;# 
   217     0093                     SSPADD          equ	147	;# 
   218     0093                     SSPMSK          equ	147	;# 
   219     0093                     MSK             equ	147	;# 
   220     0094                     SSPSTAT         equ	148	;# 
   221     0095                     WPUB            equ	149	;# 
   222     0096                     IOCB            equ	150	;# 
   223     0097                     VRCON           equ	151	;# 
   224     0098                     TXSTA           equ	152	;# 
   225     0099                     SPBRG           equ	153	;# 
   226     009A                     SPBRGH          equ	154	;# 
   227     009B                     PWM1CON         equ	155	;# 
   228     009C                     ECCPAS          equ	156	;# 
   229     009D                     PSTRCON         equ	157	;# 
   230     009E                     ADRESL          equ	158	;# 
   231     009F                     ADCON1          equ	159	;# 
   232     0105                     WDTCON          equ	261	;# 
   233     0107                     CM1CON0         equ	263	;# 
   234     0108                     CM2CON0         equ	264	;# 
   235     0109                     CM2CON1         equ	265	;# 
   236     010C                     EEDATA          equ	268	;# 
   237     010C                     EEDAT           equ	268	;# 
   238     010D                     EEADR           equ	269	;# 
   239     010E                     EEDATH          equ	270	;# 
   240     010F                     EEADRH          equ	271	;# 
   241     0185                     SRCON           equ	389	;# 
   242     0187                     BAUDCTL         equ	391	;# 
   243     0188                     ANSEL           equ	392	;# 
   244     0189                     ANSELH          equ	393	;# 
   245     018C                     EECON1          equ	396	;# 
   246     018D                     EECON2          equ	397	;# 
   247     0000                     INDF            equ	0	;# 
   248     0001                     TMR0            equ	1	;# 
   249     0002                     PCL             equ	2	;# 
   250     0003                     STATUS          equ	3	;# 
   251     0004                     FSR             equ	4	;# 
   252     0005                     PORTA           equ	5	;# 
   253     0006                     PORTB           equ	6	;# 
   254     0007                     PORTC           equ	7	;# 
   255     0008                     PORTD           equ	8	;# 
   256     0009                     PORTE           equ	9	;# 
   257     000A                     PCLATH          equ	10	;# 
   258     000B                     INTCON          equ	11	;# 
   259     000C                     PIR1            equ	12	;# 
   260     000D                     PIR2            equ	13	;# 
   261     000E                     TMR1            equ	14	;# 
   262     000E                     TMR1L           equ	14	;# 
   263     000F                     TMR1H           equ	15	;# 
   264     0010                     T1CON           equ	16	;# 
   265     0011                     TMR2            equ	17	;# 
   266     0012                     T2CON           equ	18	;# 
   267     0013                     SSPBUF          equ	19	;# 
   268     0014                     SSPCON          equ	20	;# 
   269     0015                     CCPR1           equ	21	;# 
   270     0015                     CCPR1L          equ	21	;# 
   271     0016                     CCPR1H          equ	22	;# 
   272     0017                     CCP1CON         equ	23	;# 
   273     0018                     RCSTA           equ	24	;# 
   274     0019                     TXREG           equ	25	;# 
   275     001A                     RCREG           equ	26	;# 
   276     001B                     CCPR2           equ	27	;# 
   277     001B                     CCPR2L          equ	27	;# 
   278     001C                     CCPR2H          equ	28	;# 
   279     001D                     CCP2CON         equ	29	;# 
   280     001E                     ADRESH          equ	30	;# 
   281     001F                     ADCON0          equ	31	;# 
   282     0081                     OPTION_REG      equ	129	;# 
   283     0085                     TRISA           equ	133	;# 
   284     0086                     TRISB           equ	134	;# 
   285     0087                     TRISC           equ	135	;# 
   286     0088                     TRISD           equ	136	;# 
   287     0089                     TRISE           equ	137	;# 
   288     008C                     PIE1            equ	140	;# 
   289     008D                     PIE2            equ	141	;# 
   290     008E                     PCON            equ	142	;# 
   291     008F                     OSCCON          equ	143	;# 
   292     0090                     OSCTUNE         equ	144	;# 
   293     0091                     SSPCON2         equ	145	;# 
   294     0092                     PR2             equ	146	;# 
   295     0093                     SSPADD          equ	147	;# 
   296     0093                     SSPMSK          equ	147	;# 
   297     0093                     MSK             equ	147	;# 
   298     0094                     SSPSTAT         equ	148	;# 
   299     0095                     WPUB            equ	149	;# 
   300     0096                     IOCB            equ	150	;# 
   301     0097                     VRCON           equ	151	;# 
   302     0098                     TXSTA           equ	152	;# 
   303     0099                     SPBRG           equ	153	;# 
   304     009A                     SPBRGH          equ	154	;# 
   305     009B                     PWM1CON         equ	155	;# 
   306     009C                     ECCPAS          equ	156	;# 
   307     009D                     PSTRCON         equ	157	;# 
   308     009E                     ADRESL          equ	158	;# 
   309     009F                     ADCON1          equ	159	;# 
   310     0105                     WDTCON          equ	261	;# 
   311     0107                     CM1CON0         equ	263	;# 
   312     0108                     CM2CON0         equ	264	;# 
   313     0109                     CM2CON1         equ	265	;# 
   314     010C                     EEDATA          equ	268	;# 
   315     010C                     EEDAT           equ	268	;# 
   316     010D                     EEADR           equ	269	;# 
   317     010E                     EEDATH          equ	270	;# 
   318     010F                     EEADRH          equ	271	;# 
   319     0185                     SRCON           equ	389	;# 
   320     0187                     BAUDCTL         equ	391	;# 
   321     0188                     ANSEL           equ	392	;# 
   322     0189                     ANSELH          equ	393	;# 
   323     018C                     EECON1          equ	396	;# 
   324     018D                     EECON2          equ	397	;# 
   325     0000                     INDF            equ	0	;# 
   326     0001                     TMR0            equ	1	;# 
   327     0002                     PCL             equ	2	;# 
   328     0003                     STATUS          equ	3	;# 
   329     0004                     FSR             equ	4	;# 
   330     0005                     PORTA           equ	5	;# 
   331     0006                     PORTB           equ	6	;# 
   332     0007                     PORTC           equ	7	;# 
   333     0008                     PORTD           equ	8	;# 
   334     0009                     PORTE           equ	9	;# 
   335     000A                     PCLATH          equ	10	;# 
   336     000B                     INTCON          equ	11	;# 
   337     000C                     PIR1            equ	12	;# 
   338     000D                     PIR2            equ	13	;# 
   339     000E                     TMR1            equ	14	;# 
   340     000E                     TMR1L           equ	14	;# 
   341     000F                     TMR1H           equ	15	;# 
   342     0010                     T1CON           equ	16	;# 
   343     0011                     TMR2            equ	17	;# 
   344     0012                     T2CON           equ	18	;# 
   345     0013                     SSPBUF          equ	19	;# 
   346     0014                     SSPCON          equ	20	;# 
   347     0015                     CCPR1           equ	21	;# 
   348     0015                     CCPR1L          equ	21	;# 
   349     0016                     CCPR1H          equ	22	;# 
   350     0017                     CCP1CON         equ	23	;# 
   351     0018                     RCSTA           equ	24	;# 
   352     0019                     TXREG           equ	25	;# 
   353     001A                     RCREG           equ	26	;# 
   354     001B                     CCPR2           equ	27	;# 
   355     001B                     CCPR2L          equ	27	;# 
   356     001C                     CCPR2H          equ	28	;# 
   357     001D                     CCP2CON         equ	29	;# 
   358     001E                     ADRESH          equ	30	;# 
   359     001F                     ADCON0          equ	31	;# 
   360     0081                     OPTION_REG      equ	129	;# 
   361     0085                     TRISA           equ	133	;# 
   362     0086                     TRISB           equ	134	;# 
   363     0087                     TRISC           equ	135	;# 
   364     0088                     TRISD           equ	136	;# 
   365     0089                     TRISE           equ	137	;# 
   366     008C                     PIE1            equ	140	;# 
   367     008D                     PIE2            equ	141	;# 
   368     008E                     PCON            equ	142	;# 
   369     008F                     OSCCON          equ	143	;# 
   370     0090                     OSCTUNE         equ	144	;# 
   371     0091                     SSPCON2         equ	145	;# 
   372     0092                     PR2             equ	146	;# 
   373     0093                     SSPADD          equ	147	;# 
   374     0093                     SSPMSK          equ	147	;# 
   375     0093                     MSK             equ	147	;# 
   376     0094                     SSPSTAT         equ	148	;# 
   377     0095                     WPUB            equ	149	;# 
   378     0096                     IOCB            equ	150	;# 
   379     0097                     VRCON           equ	151	;# 
   380     0098                     TXSTA           equ	152	;# 
   381     0099                     SPBRG           equ	153	;# 
   382     009A                     SPBRGH          equ	154	;# 
   383     009B                     PWM1CON         equ	155	;# 
   384     009C                     ECCPAS          equ	156	;# 
   385     009D                     PSTRCON         equ	157	;# 
   386     009E                     ADRESL          equ	158	;# 
   387     009F                     ADCON1          equ	159	;# 
   388     0105                     WDTCON          equ	261	;# 
   389     0107                     CM1CON0         equ	263	;# 
   390     0108                     CM2CON0         equ	264	;# 
   391     0109                     CM2CON1         equ	265	;# 
   392     010C                     EEDATA          equ	268	;# 
   393     010C                     EEDAT           equ	268	;# 
   394     010D                     EEADR           equ	269	;# 
   395     010E                     EEDATH          equ	270	;# 
   396     010F                     EEADRH          equ	271	;# 
   397     0185                     SRCON           equ	389	;# 
   398     0187                     BAUDCTL         equ	391	;# 
   399     0188                     ANSEL           equ	392	;# 
   400     0189                     ANSELH          equ	393	;# 
   401     018C                     EECON1          equ	396	;# 
   402     018D                     EECON2          equ	397	;# 
   403     0000                     INDF            equ	0	;# 
   404     0001                     TMR0            equ	1	;# 
   405     0002                     PCL             equ	2	;# 
   406     0003                     STATUS          equ	3	;# 
   407     0004                     FSR             equ	4	;# 
   408     0005                     PORTA           equ	5	;# 
   409     0006                     PORTB           equ	6	;# 
   410     0007                     PORTC           equ	7	;# 
   411     0008                     PORTD           equ	8	;# 
   412     0009                     PORTE           equ	9	;# 
   413     000A                     PCLATH          equ	10	;# 
   414     000B                     INTCON          equ	11	;# 
   415     000C                     PIR1            equ	12	;# 
   416     000D                     PIR2            equ	13	;# 
   417     000E                     TMR1            equ	14	;# 
   418     000E                     TMR1L           equ	14	;# 
   419     000F                     TMR1H           equ	15	;# 
   420     0010                     T1CON           equ	16	;# 
   421     0011                     TMR2            equ	17	;# 
   422     0012                     T2CON           equ	18	;# 
   423     0013                     SSPBUF          equ	19	;# 
   424     0014                     SSPCON          equ	20	;# 
   425     0015                     CCPR1           equ	21	;# 
   426     0015                     CCPR1L          equ	21	;# 
   427     0016                     CCPR1H          equ	22	;# 
   428     0017                     CCP1CON         equ	23	;# 
   429     0018                     RCSTA           equ	24	;# 
   430     0019                     TXREG           equ	25	;# 
   431     001A                     RCREG           equ	26	;# 
   432     001B                     CCPR2           equ	27	;# 
   433     001B                     CCPR2L          equ	27	;# 
   434     001C                     CCPR2H          equ	28	;# 
   435     001D                     CCP2CON         equ	29	;# 
   436     001E                     ADRESH          equ	30	;# 
   437     001F                     ADCON0          equ	31	;# 
   438     0081                     OPTION_REG      equ	129	;# 
   439     0085                     TRISA           equ	133	;# 
   440     0086                     TRISB           equ	134	;# 
   441     0087                     TRISC           equ	135	;# 
   442     0088                     TRISD           equ	136	;# 
   443     0089                     TRISE           equ	137	;# 
   444     008C                     PIE1            equ	140	;# 
   445     008D                     PIE2            equ	141	;# 
   446     008E                     PCON            equ	142	;# 
   447     008F                     OSCCON          equ	143	;# 
   448     0090                     OSCTUNE         equ	144	;# 
   449     0091                     SSPCON2         equ	145	;# 
   450     0092                     PR2             equ	146	;# 
   451     0093                     SSPADD          equ	147	;# 
   452     0093                     SSPMSK          equ	147	;# 
   453     0093                     MSK             equ	147	;# 
   454     0094                     SSPSTAT         equ	148	;# 
   455     0095                     WPUB            equ	149	;# 
   456     0096                     IOCB            equ	150	;# 
   457     0097                     VRCON           equ	151	;# 
   458     0098                     TXSTA           equ	152	;# 
   459     0099                     SPBRG           equ	153	;# 
   460     009A                     SPBRGH          equ	154	;# 
   461     009B                     PWM1CON         equ	155	;# 
   462     009C                     ECCPAS          equ	156	;# 
   463     009D                     PSTRCON         equ	157	;# 
   464     009E                     ADRESL          equ	158	;# 
   465     009F                     ADCON1          equ	159	;# 
   466     0105                     WDTCON          equ	261	;# 
   467     0107                     CM1CON0         equ	263	;# 
   468     0108                     CM2CON0         equ	264	;# 
   469     0109                     CM2CON1         equ	265	;# 
   470     010C                     EEDATA          equ	268	;# 
   471     010C                     EEDAT           equ	268	;# 
   472     010D                     EEADR           equ	269	;# 
   473     010E                     EEDATH          equ	270	;# 
   474     010F                     EEADRH          equ	271	;# 
   475     0185                     SRCON           equ	389	;# 
   476     0187                     BAUDCTL         equ	391	;# 
   477     0188                     ANSEL           equ	392	;# 
   478     0189                     ANSELH          equ	393	;# 
   479     018C                     EECON1          equ	396	;# 
   480     018D                     EECON2          equ	397	;# 
   481                           
   482                           	psect	idataBANK1
   483     0BA3                     __pidataBANK1:
   484                           
   485                           ;initializer for keypad_getkey@F1398
   486     0BA3  3431               	retlw	49
   487     0BA4  3432               	retlw	50
   488     0BA5  3433               	retlw	51
   489     0BA6  3441               	retlw	65
   490     0BA7  3434               	retlw	52
   491     0BA8  3435               	retlw	53
   492     0BA9  3436               	retlw	54
   493     0BAA  3442               	retlw	66
   494     0BAB  3437               	retlw	55
   495     0BAC  3438               	retlw	56
   496     0BAD  3439               	retlw	57
   497     0BAE  3443               	retlw	67
   498     0BAF  342A               	retlw	42
   499     0BB0  3430               	retlw	48
   500     0BB1  3423               	retlw	35
   501     0BB2  3444               	retlw	68
   502                           
   503                           ;initializer for _character5
   504     0BB3  3400               	retlw	0
   505     0BB4  340E               	retlw	14
   506     0BB5  3411               	retlw	17
   507     0BB6  3411               	retlw	17
   508     0BB7  3411               	retlw	17
   509     0BB8  340A               	retlw	10
   510     0BB9  341B               	retlw	27
   511     0BBA  3400               	retlw	0
   512                           
   513                           ;initializer for _character4
   514     0BBB  340A               	retlw	10
   515     0BBC  340A               	retlw	10
   516     0BBD  340A               	retlw	10
   517     0BBE  341B               	retlw	27
   518     0BBF  340A               	retlw	10
   519     0BC0  340A               	retlw	10
   520     0BC1  340A               	retlw	10
   521     0BC2  3400               	retlw	0
   522                           
   523                           ;initializer for _character3
   524     0BC3  3412               	retlw	18
   525     0BC4  3414               	retlw	20
   526     0BC5  3418               	retlw	24
   527     0BC6  3410               	retlw	16
   528     0BC7  3418               	retlw	24
   529     0BC8  3415               	retlw	21
   530     0BC9  3413               	retlw	19
   531     0BCA  3417               	retlw	23
   532                           
   533                           ;initializer for _character2
   534     0BCB  3411               	retlw	17
   535     0BCC  3419               	retlw	25
   536     0BCD  341D               	retlw	29
   537     0BCE  341F               	retlw	31
   538     0BCF  341D               	retlw	29
   539     0BD0  3419               	retlw	25
   540     0BD1  3411               	retlw	17
   541     0BD2  3400               	retlw	0
   542                           
   543                           ;initializer for _character1
   544     0BD3  3400               	retlw	0
   545     0BD4  341F               	retlw	31
   546     0BD5  340A               	retlw	10
   547     0BD6  340A               	retlw	10
   548     0BD7  340A               	retlw	10
   549     0BD8  340A               	retlw	10
   550     0BD9  3409               	retlw	9
   551     0BDA  3400               	retlw	0
   552                           
   553                           	psect	strings
   554     0800                     __pstrings:
   555     0800                     stringtab:
   556     0800                     __stringtab:
   557                           
   558                           ;	String table - string pointers are 1 byte each
   559     0800  1BFF               	btfsc	btemp+1,7
   560     0801  280A               	ljmp	stringcode
   561     0802  1383               	bcf	3,7
   562     0803  187F               	btfsc	btemp+1,0
   563     0804  1783               	bsf	3,7
   564     0805  0800               	movf	0,w
   565     0806  0A84               	incf	4,f
   566     0807  1903               	skipnz
   567     0808  0AFF               	incf	btemp+1,f
   568     0809  0008               	return
   569     080A                     stringcode:
   570     080A                     stringdir:
   571     080A  3008               	movlw	high stringdir
   572     080B  008A               	movwf	10
   573     080C  0804               	movf	4,w
   574     080D  0A84               	incf	4,f
   575     080E  0782               	addwf	2,f
   576     080F                     __stringbase:
   577     080F  3400               	retlw	0
   578     0810                     __end_of__stringtab:
   579     0810                     _password:
   580     0810  3430               	retlw	48
   581     0811  3439               	retlw	57
   582     0812  3432               	retlw	50
   583     0813  3436               	retlw	54
   584     0814  3400               	retlw	0
   585     0815                     __end_of_password:
   586     0009                     _PORTE          set	9
   587     0008                     _PORTD          set	8
   588     0009                     _PORTEbits      set	9
   589     001E                     _ADRESH         set	30
   590     001F                     _ADCON0bits     set	31
   591     0006                     _PORTB          set	6
   592     0007                     _PORTCbits      set	7
   593     0007                     _PORTC          set	7
   594     0088                     _TRISD          set	136
   595     0089                     _TRISE          set	137
   596     008F                     _OSCCON         set	143
   597     009E                     _ADRESL         set	158
   598     009F                     _ADCON1bits     set	159
   599     0081                     _OPTION_REGbits set	129
   600     0086                     _TRISB          set	134
   601     0087                     _TRISC          set	135
   602     0189                     _ANSELH         set	393
   603     0188                     _ANSEL          set	392
   604     0815                     STR_9:
   605     0815  3473               	retlw	115	;'s'
   606     0816  3469               	retlw	105	;'i'
   607     0817  3473               	retlw	115	;'s'
   608     0818  3474               	retlw	116	;'t'
   609     0819  3465               	retlw	101	;'e'
   610     081A  346D               	retlw	109	;'m'
   611     081B  3461               	retlw	97	;'a'
   612     081C  3420               	retlw	32	;' '
   613     081D  3462               	retlw	98	;'b'
   614     081E  346C               	retlw	108	;'l'
   615     081F  346F               	retlw	111	;'o'
   616     0820  3471               	retlw	113	;'q'
   617     0821  3475               	retlw	117	;'u'
   618     0822  3465               	retlw	101	;'e'
   619     0823  3461               	retlw	97	;'a'
   620     0824  3464               	retlw	100	;'d'
   621     0825  346F               	retlw	111	;'o'
   622     0826  3400               	retlw	0
   623     0827                     STR_3:
   624     0827  3450               	retlw	80	;'P'
   625     0828  3472               	retlw	114	;'r'
   626     0829  3465               	retlw	101	;'e'
   627     082A  3473               	retlw	115	;'s'
   628     082B  3473               	retlw	115	;'s'
   629     082C  3420               	retlw	32	;' '
   630     082D  3461               	retlw	97	;'a'
   631     082E  3420               	retlw	32	;' '
   632     082F  344B               	retlw	75	;'K'
   633     0830  3465               	retlw	101	;'e'
   634     0831  3479               	retlw	121	;'y'
   635     0832  3420               	retlw	32	;' '
   636     0833  3420               	retlw	32	;' '
   637     0834  3420               	retlw	32	;' '
   638     0835  3420               	retlw	32	;' '
   639     0836  3420               	retlw	32	;' '
   640     0837  3400               	retlw	0
   641     0838                     STR_8:
   642     0838  3443               	retlw	67	;'C'
   643     0839  346C               	retlw	108	;'l'
   644     083A  3461               	retlw	97	;'a'
   645     083B  3476               	retlw	118	;'v'
   646     083C  3465               	retlw	101	;'e'
   647     083D  3420               	retlw	32	;' '
   648     083E  3449               	retlw	73	;'I'
   649     083F  346E               	retlw	110	;'n'
   650     0840  3463               	retlw	99	;'c'
   651     0841  346F               	retlw	111	;'o'
   652     0842  3472               	retlw	114	;'r'
   653     0843  3472               	retlw	114	;'r'
   654     0844  3465               	retlw	101	;'e'
   655     0845  3463               	retlw	99	;'c'
   656     0846  3474               	retlw	116	;'t'
   657     0847  3461               	retlw	97	;'a'
   658     0848  3400               	retlw	0
   659     0849                     STR_7:
   660     0849  3454               	retlw	84	;'T'
   661     084A  3445               	retlw	69	;'E'
   662     084B  344D               	retlw	77	;'M'
   663     084C  3450               	retlw	80	;'P'
   664     084D  343A               	retlw	58	;':'
   665     084E  3420               	retlw	32	;' '
   666     084F  3425               	retlw	37	;'%'
   667     0850  3464               	retlw	100	;'d'
   668     0851  3420               	retlw	32	;' '
   669     0852  3420               	retlw	32	;' '
   670     0853  344C               	retlw	76	;'L'
   671     0854  343A               	retlw	58	;':'
   672     0855  3420               	retlw	32	;' '
   673     0856  3425               	retlw	37	;'%'
   674     0857  3464               	retlw	100	;'d'
   675     0858  3400               	retlw	0
   676     0859                     STR_5:
   677     0859  3443               	retlw	67	;'C'
   678     085A  346C               	retlw	108	;'l'
   679     085B  3461               	retlw	97	;'a'
   680     085C  3476               	retlw	118	;'v'
   681     085D  3465               	retlw	101	;'e'
   682     085E  3420               	retlw	32	;' '
   683     085F  3443               	retlw	67	;'C'
   684     0860  346F               	retlw	111	;'o'
   685     0861  3472               	retlw	114	;'r'
   686     0862  3472               	retlw	114	;'r'
   687     0863  3465               	retlw	101	;'e'
   688     0864  3463               	retlw	99	;'c'
   689     0865  3474               	retlw	116	;'t'
   690     0866  3461               	retlw	97	;'a'
   691     0867  3400               	retlw	0
   692     0868                     STR_2:
   693     0868  3442               	retlw	66	;'B'
   694     0869  3449               	retlw	73	;'I'
   695     086A  3445               	retlw	69	;'E'
   696     086B  344E               	retlw	78	;'N'
   697     086C  3456               	retlw	86	;'V'
   698     086D  3445               	retlw	69	;'E'
   699     086E  344E               	retlw	78	;'N'
   700     086F  3449               	retlw	73	;'I'
   701     0870  3444               	retlw	68	;'D'
   702     0871  344F               	retlw	79	;'O'
   703     0872  3400               	retlw	0
   704     0873                     STR_6:
   705     0873  3441               	retlw	65	;'A'
   706     0874  344D               	retlw	77	;'M'
   707     0875  3442               	retlw	66	;'B'
   708     0876  3449               	retlw	73	;'I'
   709     0877  3445               	retlw	69	;'E'
   710     0878  344E               	retlw	78	;'N'
   711     0879  3454               	retlw	84	;'T'
   712     087A  3441               	retlw	65	;'A'
   713     087B  344C               	retlw	76	;'L'
   714     087C  3400               	retlw	0
   715     087D                     STR_4:
   716     087D  342A               	retlw	42	;'*'
   717     087E  3400               	retlw	0
   718     0837                     STR_1           equ	STR_3+16
   719                           
   720                           	psect	cinit
   721     07DA                     start_initialization:	
   722                           ; #config settings
   723                           
   724     07DA                     __initialization:
   725                           
   726                           ; Initialize objects allocated to BANK1
   727     07DA  1383               	bcf	3,7	;select IRP bank0
   728     07DB  30D8               	movlw	low (__pdataBANK1+56)
   729     07DC  00FD               	movwf	btemp+-1
   730     07DD  300B               	movlw	high __pidataBANK1
   731     07DE  00FE               	movwf	btemp
   732     07DF  30A3               	movlw	low __pidataBANK1
   733     07E0  00FF               	movwf	btemp+1
   734     07E1  30A0               	movlw	low __pdataBANK1
   735     07E2  0084               	movwf	4
   736     07E3  120A  158A  21C5  120A  118A  	fcall	init_ram0
   737                           
   738                           ; Clear objects allocated to BANK3
   739     07E8  1783               	bsf	3,7	;select IRP bank2
   740     07E9  3090               	movlw	low __pbssBANK3
   741     07EA  0084               	movwf	4
   742     07EB  30B0               	movlw	low (__pbssBANK3+32)
   743     07EC  120A  158A  2175  120A  118A  	fcall	clear_ram0
   744                           
   745                           ; Clear objects allocated to BANK1
   746     07F1  1383               	bcf	3,7	;select IRP bank0
   747     07F2  30D8               	movlw	low __pbssBANK1
   748     07F3  0084               	movwf	4
   749     07F4  30E5               	movlw	low (__pbssBANK1+13)
   750     07F5  120A  158A  2175  120A  118A  	fcall	clear_ram0
   751                           
   752                           ; Clear objects allocated to BANK0
   753     07FA  01EE               	clrf	__pbssBANK0& (0+127)
   754     07FB  01EF               	clrf	(__pbssBANK0+1)& (0+127)
   755     07FC                     end_of_initialization:	
   756                           ;End of C runtime variable initialization code
   757                           
   758     07FC                     __end_of__initialization:
   759     07FC  0183               	clrf	3
   760     07FD  120A  118A  2A9B   	ljmp	_main	;jump to C main() function
   761                           
   762                           	psect	bssBANK0
   763     006E                     __pbssBANK0:
   764     006E                     _flags:
   765     006E                     	ds	1
   766     006F                     _idx:
   767     006F                     	ds	1
   768                           
   769                           	psect	bssBANK1
   770     00D8                     __pbssBANK1:
   771     00D8                     _width:
   772     00D8                     	ds	2
   773     00DA                     _prec:
   774     00DA                     	ds	2
   775     00DC                     _celsius:
   776     00DC                     	ds	2
   777     00DE                     _intentos:
   778     00DE                     	ds	2
   779     00E0                     _pass_user:
   780     00E0                     	ds	5
   781                           
   782                           	psect	dataBANK1
   783     00A0                     __pdataBANK1:
   784     00A0                     keypad_getkey@F1398:
   785     00A0                     	ds	16
   786     00B0                     _character5:
   787     00B0                     	ds	8
   788     00B8                     _character4:
   789     00B8                     	ds	8
   790     00C0                     _character3:
   791     00C0                     	ds	8
   792     00C8                     _character2:
   793     00C8                     	ds	8
   794     00D0                     _character1:
   795     00D0                     	ds	8
   796                           
   797                           	psect	bssBANK3
   798     0190                     __pbssBANK3:
   799     0190                     _dbuf:
   800     0190                     	ds	32
   801                           
   802                           	psect	inittext
   803     09C1                     init_fetch0:	
   804                           ;	Called with low address in FSR and high address in W
   805                           
   806     09C1  087E               	movf	btemp,w
   807     09C2  008A               	movwf	10
   808     09C3  087F               	movf	btemp+1,w
   809     09C4  0082               	movwf	2
   810     09C5                     init_ram0:	
   811                           ;Called with:
   812                           ;	high address of idata address in btemp 
   813                           ;	low address of idata address in btemp+1 
   814                           ;	low address of data in FSR
   815                           ;	high address + 1 of data in btemp-1
   816                           
   817     09C5  120A  158A  21C1  120A  158A  	fcall	init_fetch0
   818     09CA  0080               	movwf	0
   819     09CB  0A84               	incf	4,f
   820     09CC  0804               	movf	4,w
   821     09CD  067D               	xorwf	btemp+-1,w
   822     09CE  1903               	btfsc	3,2
   823     09CF  3400               	retlw	0
   824     09D0  0AFF               	incf	btemp+1,f
   825     09D1  1903               	btfsc	3,2
   826     09D2  0AFE               	incf	btemp,f
   827     09D3  29C5               	goto	init_ram0
   828                           
   829                           	psect	clrtext
   830     0975                     clear_ram0:	
   831                           ;	Called with FSR containing the base address, and
   832                           ;	W with the last address+1
   833                           
   834     0975  0064               	clrwdt	;clear the watchdog before getting into this loop
   835     0976                     clrloop0:
   836     0976  0180               	clrf	0	;clear RAM location pointed to by FSR
   837     0977  0A84               	incf	4,f	;increment pointer
   838     0978  0604               	xorwf	4,w	;XOR with final address
   839     0979  1903               	btfsc	3,2	;have we reached the end yet?
   840     097A  3400               	retlw	0	;all done for this memory range, return
   841     097B  0604               	xorwf	4,w	;XOR again to restore value
   842     097C  2976               	goto	clrloop0	;do the next byte
   843                           
   844                           	psect	cstackCOMMON
   845     0070                     __pcstackCOMMON:
   846     0070                     ?_LCD_Command:
   847     0070                     ?_putch:	
   848                           ; 1 bytes @ 0x0
   849                           
   850     0070                     ?_LCD_Init:	
   851                           ; 1 bytes @ 0x0
   852                           
   853     0070                     ?_LCD_Char:	
   854                           ; 1 bytes @ 0x0
   855                           
   856     0070                     ?_LCD_Clear:	
   857                           ; 1 bytes @ 0x0
   858                           
   859     0070                     ?_Lmain:	
   860                           ; 1 bytes @ 0x0
   861                           
   862     0070                     ?_keypad_init:	
   863                           ; 1 bytes @ 0x0
   864                           
   865     0070                     ?_keypad_getkey:	
   866                           ; 1 bytes @ 0x0
   867                           
   868     0070                     ?_adc_init:	
   869                           ; 1 bytes @ 0x0
   870                           
   871     0070                     ?_delay_ms_variable:	
   872                           ; 1 bytes @ 0x0
   873                           
   874     0070                     ?_secuencia1:	
   875                           ; 1 bytes @ 0x0
   876                           
   877     0070                     ?_secuencia5:	
   878                           ; 1 bytes @ 0x0
   879                           
   880     0070                     ?_main:	
   881                           ; 1 bytes @ 0x0
   882                           
   883     0070                     ?___bmul:	
   884                           ; 1 bytes @ 0x0
   885                           
   886     0070                     ?_strncmp:	
   887                           ; 1 bytes @ 0x0
   888                           
   889     0070                     ?__Umul8_16:	
   890                           ; 2 bytes @ 0x0
   891                           
   892     0070                     ?_fputc:	
   893                           ; 2 bytes @ 0x0
   894                           
   895     0070                     ?_adc_read:	
   896                           ; 2 bytes @ 0x0
   897                           
   898     0070                     ?___awdiv:	
   899                           ; 2 bytes @ 0x0
   900                           
   901     0070                     ?___awmod:	
   902                           ; 2 bytes @ 0x0
   903                           
   904     0070                     ?___xxtofl:	
   905                           ; 2 bytes @ 0x0
   906                           
   907     0070                     ___bmul@multiplicand:	
   908                           ; 4 bytes @ 0x0
   909                           
   910     0070                     __Umul8_16@multiplicand:	
   911                           ; 1 bytes @ 0x0
   912                           
   913     0070                     putch@c:	
   914                           ; 1 bytes @ 0x0
   915                           
   916     0070                     strncmp@l:	
   917                           ; 1 bytes @ 0x0
   918                           
   919     0070                     adc_read@channel:	
   920                           ; 1 bytes @ 0x0
   921                           
   922     0070                     delay_ms_variable@ms:	
   923                           ; 2 bytes @ 0x0
   924                           
   925     0070                     ___awdiv@divisor:	
   926                           ; 2 bytes @ 0x0
   927                           
   928     0070                     ___awmod@divisor:	
   929                           ; 2 bytes @ 0x0
   930                           
   931     0070                     fputc@c:	
   932                           ; 2 bytes @ 0x0
   933                           
   934     0070                     ___xxtofl@val:	
   935                           ; 2 bytes @ 0x0
   936                           
   937     0070                     ??_LCD_Command:	
   938                           ; 4 bytes @ 0x0
   939                           
   940     0070                     ??_putch:	
   941                           ; 1 bytes @ 0x0
   942                           
   943     0070                     ??_LCD_Char:	
   944                           ; 1 bytes @ 0x0
   945                           
   946     0070                     ??_keypad_init:	
   947                           ; 1 bytes @ 0x0
   948                           
   949     0070                     ??_keypad_getkey:	
   950                           ; 1 bytes @ 0x0
   951                           
   952     0070                     ??_adc_init:	
   953                           ; 1 bytes @ 0x0
   954                           
   955     0070                     ??_secuencia1:	
   956                           ; 1 bytes @ 0x0
   957                           
   958     0070                     ??_secuencia5:	
   959                           ; 1 bytes @ 0x0
   960                           
   961                           
   962                           ; 1 bytes @ 0x0
   963     0070                     	ds	1
   964     0071                     ___bmul@product:
   965     0071                     strncmp@r:	
   966                           ; 1 bytes @ 0x1
   967                           
   968     0071                     ??___bmul:	
   969                           ; 1 bytes @ 0x1
   970                           
   971                           
   972                           ; 1 bytes @ 0x1
   973     0071                     	ds	1
   974     0072                     LCD_Command@cmd:
   975     0072                     LCD_Char@dat:	
   976                           ; 1 bytes @ 0x2
   977                           
   978     0072                     ___bmul@multiplier:	
   979                           ; 1 bytes @ 0x2
   980                           
   981     0072                     ___awdiv@dividend:	
   982                           ; 1 bytes @ 0x2
   983                           
   984     0072                     ___awmod@dividend:	
   985                           ; 2 bytes @ 0x2
   986                           
   987     0072                     fputc@fp:	
   988                           ; 2 bytes @ 0x2
   989                           
   990     0072                     strncmp@n:	
   991                           ; 2 bytes @ 0x2
   992                           
   993     0072                     ??__Umul8_16:	
   994                           ; 2 bytes @ 0x2
   995                           
   996     0072                     ??_adc_read:	
   997                           ; 1 bytes @ 0x2
   998                           
   999     0072                     ??_delay_ms_variable:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0x2
  1004     0072                     	ds	1
  1005     0073                     ?_LCD_String:
  1006     0073                     ?_LCD_Custom_Char:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009     0073                     LCD_Custom_Char@msg:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012     0073                     LCD_String@msg:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015     0073                     secuencia1@i:	
  1016                           ; 2 bytes @ 0x3
  1017                           
  1018     0073                     ??_LCD_Init:	
  1019                           ; 2 bytes @ 0x3
  1020                           
  1021     0073                     ??_LCD_Clear:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024                           
  1025                           ; 1 bytes @ 0x3
  1026     0073                     	ds	1
  1027     0074                     ?_blink_led:
  1028     0074                     ___awdiv@counter:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031     0074                     ___awmod@counter:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034     0074                     blink_led@on_time:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037     0074                     __Umul8_16@product:	
  1038                           ; 2 bytes @ 0x4
  1039                           
  1040     0074                     ??_strncmp:	
  1041                           ; 2 bytes @ 0x4
  1042                           
  1043     0074                     ??_fputc:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046     0074                     ??_LCD_Custom_Char:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049     0074                     ??___awdiv:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052     0074                     ??___awmod:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055     0074                     ??___xxtofl:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x4
  1060     0074                     	ds	1
  1061     0075                     ?_LCD_String_xy:
  1062     0075                     LCD_String_xy@pos:	
  1063                           ; 1 bytes @ 0x5
  1064                           
  1065     0075                     LCD_Custom_Char@loc:	
  1066                           ; 1 bytes @ 0x5
  1067                           
  1068     0075                     ___awdiv@sign:	
  1069                           ; 1 bytes @ 0x5
  1070                           
  1071     0075                     ___awmod@sign:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074     0075                     secuencia1@var5:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077     0075                     ??_LCD_String:	
  1078                           ; 2 bytes @ 0x5
  1079                           
  1080                           
  1081                           ; 1 bytes @ 0x5
  1082     0075                     	ds	1
  1083     0076                     ?_abs:
  1084     0076                     LCD_String_xy@msg:	
  1085                           ; 2 bytes @ 0x6
  1086                           
  1087     0076                     LCD_Custom_Char@i:	
  1088                           ; 1 bytes @ 0x6
  1089                           
  1090     0076                     adc_read@value_adc:	
  1091                           ; 1 bytes @ 0x6
  1092                           
  1093     0076                     blink_led@off_time:	
  1094                           ; 2 bytes @ 0x6
  1095                           
  1096     0076                     ___awdiv@quotient:	
  1097                           ; 2 bytes @ 0x6
  1098                           
  1099     0076                     __Umul8_16@word_mpld:	
  1100                           ; 2 bytes @ 0x6
  1101                           
  1102     0076                     abs@a:	
  1103                           ; 2 bytes @ 0x6
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x6
  1107     0076                     	ds	1
  1108     0077                     LCD_String_xy@row:
  1109     0077                     secuencia1@var3:	
  1110                           ; 1 bytes @ 0x7
  1111                           
  1112     0077                     ??_LCD_String_xy:	
  1113                           ; 2 bytes @ 0x7
  1114                           
  1115                           
  1116                           ; 1 bytes @ 0x7
  1117     0077                     	ds	1
  1118     0078                     LCD_String_xy@location:
  1119     0078                     __Umul8_16@multiplier:	
  1120                           ; 1 bytes @ 0x8
  1121                           
  1122     0078                     ___xxtofl@sign:	
  1123                           ; 1 bytes @ 0x8
  1124                           
  1125     0078                     blink_led@duration:	
  1126                           ; 1 bytes @ 0x8
  1127                           
  1128     0078                     ??_abs:	
  1129                           ; 2 bytes @ 0x8
  1130                           
  1131                           
  1132                           ; 1 bytes @ 0x8
  1133     0078                     	ds	1
  1134     0079                     Lmain@i:
  1135     0079                     ___xxtofl@exp:	
  1136                           ; 1 bytes @ 0x9
  1137                           
  1138     0079                     secuencia1@var4:	
  1139                           ; 1 bytes @ 0x9
  1140                           
  1141     0079                     ??_Lmain:	
  1142                           ; 2 bytes @ 0x9
  1143                           
  1144                           
  1145                           ; 1 bytes @ 0x9
  1146     0079                     	ds	1
  1147     007A                     ___xxtofl@arg:
  1148     007A                     ??_blink_led:	
  1149                           ; 4 bytes @ 0xA
  1150                           
  1151                           
  1152                           ; 1 bytes @ 0xA
  1153     007A                     	ds	3
  1154     007D                     vfprintf@cfmt:
  1155     007D                     ??_vfprintf:	
  1156                           ; 1 bytes @ 0xD
  1157                           
  1158                           
  1159                           ; 1 bytes @ 0xD
  1160     007D                     	ds	1
  1161                           
  1162                           	psect	cstackBANK0
  1163     0020                     __pcstackBANK0:
  1164     0020                     ?_vfpfcnvrt:
  1165     0020                     ?___flmul:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168     0020                     blink_led@elapsed_time:	
  1169                           ; 4 bytes @ 0x0
  1170                           
  1171     0020                     secuencia5@i:	
  1172                           ; 2 bytes @ 0x0
  1173                           
  1174     0020                     vfpfcnvrt@fp:	
  1175                           ; 2 bytes @ 0x0
  1176                           
  1177     0020                     ___flmul@b:	
  1178                           ; 2 bytes @ 0x0
  1179                           
  1180     0020                     keypad_getkey@letras:	
  1181                           ; 4 bytes @ 0x0
  1182                           
  1183                           
  1184                           ; 16 bytes @ 0x0
  1185     0020                     	ds	2
  1186     0022                     blink_led@led:
  1187     0022                     vfpfcnvrt@fmt:	
  1188                           ; 1 bytes @ 0x2
  1189                           
  1190     0022                     secuencia5@i_297:	
  1191                           ; 1 bytes @ 0x2
  1192                           
  1193                           
  1194                           ; 2 bytes @ 0x2
  1195     0022                     	ds	1
  1196     0023                     vfpfcnvrt@ap:
  1197                           
  1198                           ; 1 bytes @ 0x3
  1199     0023                     	ds	1
  1200     0024                     secuencia5@var12:
  1201     0024                     ___flmul@a:	
  1202                           ; 2 bytes @ 0x4
  1203                           
  1204     0024                     ??_vfpfcnvrt:	
  1205                           ; 4 bytes @ 0x4
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x4
  1209     0024                     	ds	2
  1210     0026                     vfpfcnvrt@done:
  1211     0026                     secuencia5@var8:	
  1212                           ; 1 bytes @ 0x6
  1213                           
  1214                           
  1215                           ; 2 bytes @ 0x6
  1216     0026                     	ds	1
  1217     0027                     vfpfcnvrt@cp:
  1218                           
  1219                           ; 1 bytes @ 0x7
  1220     0027                     	ds	1
  1221     0028                     secuencia5@var7:
  1222     0028                     vfpfcnvrt@convarg:	
  1223                           ; 2 bytes @ 0x8
  1224                           
  1225     0028                     ??___flmul:	
  1226                           ; 4 bytes @ 0x8
  1227                           
  1228                           
  1229                           ; 1 bytes @ 0x8
  1230     0028                     	ds	2
  1231     002A                     secuencia5@var1:
  1232                           
  1233                           ; 2 bytes @ 0xA
  1234     002A                     	ds	2
  1235     002C                     vfpfcnvrt@c:
  1236     002C                     secuencia5@var2:	
  1237                           ; 1 bytes @ 0xC
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0xC
  1241     002C                     	ds	1
  1242     002D                     ?_vfprintf:
  1243     002D                     ___flmul@sign:	
  1244                           ; 2 bytes @ 0xD
  1245                           
  1246     002D                     vfprintf@fp:	
  1247                           ; 1 bytes @ 0xD
  1248                           
  1249                           
  1250                           ; 2 bytes @ 0xD
  1251     002D                     	ds	1
  1252     002E                     secuencia5@var6:
  1253     002E                     ___flmul@grs:	
  1254                           ; 2 bytes @ 0xE
  1255                           
  1256                           
  1257                           ; 4 bytes @ 0xE
  1258     002E                     	ds	1
  1259     002F                     vfprintf@fmt:
  1260                           
  1261                           ; 1 bytes @ 0xF
  1262     002F                     	ds	1
  1263     0030                     keypad_getkey@valor:
  1264     0030                     vfprintf@ap:	
  1265                           ; 1 bytes @ 0x10
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x10
  1269     0030                     	ds	1
  1270     0031                     ?_sprintf:
  1271     0031                     sprintf@s:	
  1272                           ; 2 bytes @ 0x11
  1273                           
  1274     0031                     keypad_getkey@i:	
  1275                           ; 1 bytes @ 0x11
  1276                           
  1277                           
  1278                           ; 2 bytes @ 0x11
  1279     0031                     	ds	1
  1280     0032                     ___flmul@aexp:
  1281     0032                     sprintf@fmt:	
  1282                           ; 1 bytes @ 0x12
  1283                           
  1284                           
  1285                           ; 1 bytes @ 0x12
  1286     0032                     	ds	1
  1287     0033                     ___flmul@bexp:
  1288                           
  1289                           ; 1 bytes @ 0x13
  1290     0033                     	ds	1
  1291     0034                     ___flmul@prod:
  1292                           
  1293                           ; 4 bytes @ 0x14
  1294     0034                     	ds	3
  1295     0037                     ??_sprintf:
  1296                           
  1297                           ; 1 bytes @ 0x17
  1298     0037                     	ds	1
  1299     0038                     sprintf@ap:
  1300     0038                     ___flmul@temp:	
  1301                           ; 1 bytes @ 0x18
  1302                           
  1303                           
  1304                           ; 2 bytes @ 0x18
  1305     0038                     	ds	1
  1306     0039                     sprintf@f:
  1307                           
  1308                           ; 11 bytes @ 0x19
  1309     0039                     	ds	1
  1310     003A                     ?___fltol:
  1311     003A                     ___fltol@f1:	
  1312                           ; 4 bytes @ 0x1A
  1313                           
  1314                           
  1315                           ; 4 bytes @ 0x1A
  1316     003A                     	ds	4
  1317     003E                     ??___fltol:
  1318                           
  1319                           ; 1 bytes @ 0x1E
  1320     003E                     	ds	4
  1321     0042                     ___fltol@sign1:
  1322                           
  1323                           ; 1 bytes @ 0x22
  1324     0042                     	ds	1
  1325     0043                     ___fltol@exp1:
  1326                           
  1327                           ; 1 bytes @ 0x23
  1328     0043                     	ds	1
  1329     0044                     ??_main:
  1330                           
  1331                           ; 1 bytes @ 0x24
  1332     0044                     	ds	3
  1333     0047                     main@StringTemperature:
  1334                           
  1335                           ; 32 bytes @ 0x27
  1336     0047                     	ds	32
  1337     0067                     main@temperatura:
  1338                           
  1339                           ; 2 bytes @ 0x47
  1340     0067                     	ds	2
  1341     0069                     main@luz:
  1342                           
  1343                           ; 2 bytes @ 0x49
  1344     0069                     	ds	2
  1345     006B                     main@value_adc:
  1346                           
  1347                           ; 2 bytes @ 0x4B
  1348     006B                     	ds	2
  1349     006D                     main@key:
  1350                           
  1351                           ; 1 bytes @ 0x4D
  1352     006D                     	ds	1
  1353                           
  1354                           	psect	maintext
  1355     029B                     __pmaintext:	
  1356 ;;
  1357 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1358 ;;
  1359 ;; *************** function _main *****************
  1360 ;; Defined at:
  1361 ;;		line 112 in file "MAIN.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  value_adc       2   75[BANK0 ] int 
  1366 ;;  luz             2   73[BANK0 ] unsigned int 
  1367 ;;  temperatura     2   71[BANK0 ] unsigned int 
  1368 ;;  StringTemper   32   39[BANK0 ] unsigned char [32]
  1369 ;;  key             1   77[BANK0 ] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : B00/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       0       0       0       0
  1380 ;;      Locals:         0      39       0       0       0
  1381 ;;      Temps:          0       3       0       0       0
  1382 ;;      Totals:         0      42       0       0       0
  1383 ;;Total ram usage:       42 bytes
  1384 ;; Hardware stack levels required when called: 5
  1385 ;; This function calls:
  1386 ;;		_LCD_Clear
  1387 ;;		_LCD_Command
  1388 ;;		_LCD_Init
  1389 ;;		_LCD_String
  1390 ;;		_LCD_String_xy
  1391 ;;		_Lmain
  1392 ;;		___flmul
  1393 ;;		___fltol
  1394 ;;		___xxtofl
  1395 ;;		_adc_init
  1396 ;;		_adc_read
  1397 ;;		_blink_led
  1398 ;;		_keypad_getkey
  1399 ;;		_keypad_init
  1400 ;;		_secuencia1
  1401 ;;		_secuencia5
  1402 ;;		_sprintf
  1403 ;;		_strncmp
  1404 ;; This function is called by:
  1405 ;;		Startup code after reset
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409     029B                     _main:	
  1410                           ;psect for function _main
  1411                           
  1412     029B                     l2648:	
  1413                           ;incstack = 0
  1414                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1415                           
  1416                           
  1417                           ;MAIN.c: 116:     OSCCON = 0x71;
  1418     029B  3071               	movlw	113
  1419     029C  1683               	bsf	3,5	;RP0=1, select bank1
  1420     029D  1303               	bcf	3,6	;RP1=0, select bank1
  1421     029E  008F               	movwf	15	;volatile
  1422     029F                     l2650:
  1423                           
  1424                           ;MAIN.c: 118:     LCD_Init();
  1425     029F  120A  158A  22AA  120A  118A  	fcall	_LCD_Init
  1426     02A4                     l2652:
  1427                           
  1428                           ;MAIN.c: 119:     LCD_String_xy(0,0,"BIENVENIDO");
  1429     02A4  01F5               	clrf	LCD_String_xy@pos
  1430     02A5  3059               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1431     02A6  00F6               	movwf	LCD_String_xy@msg
  1432     02A7  3000               	movlw	0
  1433     02A8  120A  158A  2282  120A  118A  	fcall	_LCD_String_xy
  1434     02AD                     l2654:
  1435                           
  1436                           ;MAIN.c: 120:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1437     02AD  3015               	movlw	21
  1438     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1439     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1440     02B0  00C6               	movwf	??_main+2
  1441     02B1  304B               	movlw	75
  1442     02B2  00C5               	movwf	??_main+1
  1443     02B3  30BD               	movlw	189
  1444     02B4  00C4               	movwf	??_main
  1445     02B5                     u3077:
  1446     02B5  0BC4               	decfsz	??_main,f
  1447     02B6  2AB5               	goto	u3077
  1448     02B7  0BC5               	decfsz	??_main+1,f
  1449     02B8  2AB5               	goto	u3077
  1450     02B9  0BC6               	decfsz	??_main+2,f
  1451     02BA  2AB5               	goto	u3077
  1452     02BB  2ABC               	nop2
  1453     02BC                     l2656:
  1454                           
  1455                           ;MAIN.c: 121:     LCD_Clear();
  1456     02BC  120A  158A  217D  120A  118A  	fcall	_LCD_Clear
  1457     02C1                     l2658:
  1458                           
  1459                           ;MAIN.c: 123:     keypad_init();
  1460     02C1  120A  158A  216D  120A  118A  	fcall	_keypad_init
  1461     02C6                     l2660:
  1462                           
  1463                           ;MAIN.c: 125:     adc_init();
  1464     02C6  120A  158A  218D  120A  118A  	fcall	_adc_init
  1465     02CB                     l2662:
  1466                           
  1467                           ;MAIN.c: 127:     TRISE = 0b00000000;
  1468     02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1469     02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1470     02CD  0189               	clrf	9	;volatile
  1471     02CE                     l2664:
  1472                           
  1473                           ;MAIN.c: 128:     ANSEL = 0x00;
  1474     02CE  1683               	bsf	3,5	;RP0=1, select bank3
  1475     02CF  1703               	bsf	3,6	;RP1=1, select bank3
  1476     02D0  0188               	clrf	8	;volatile
  1477     02D1                     l2666:
  1478                           
  1479                           ;MAIN.c: 129:     PORTE= 0x00;
  1480     02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1481     02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1482     02D3  0189               	clrf	9	;volatile
  1483     02D4                     l2668:
  1484                           
  1485                           ;MAIN.c: 130:     ANSELH = 0x00;
  1486     02D4  1683               	bsf	3,5	;RP0=1, select bank3
  1487     02D5  1703               	bsf	3,6	;RP1=1, select bank3
  1488     02D6  0189               	clrf	9	;volatile
  1489     02D7                     l2670:
  1490                           
  1491                           ;MAIN.c: 131:     TRISD = 0b00000000;
  1492     02D7  1683               	bsf	3,5	;RP0=1, select bank1
  1493     02D8  1303               	bcf	3,6	;RP1=0, select bank1
  1494     02D9  0188               	clrf	8	;volatile
  1495     02DA                     l2672:
  1496                           
  1497                           ;MAIN.c: 132:     secuencia1();
  1498     02DA  120A  158A  25A1  120A  118A  	fcall	_secuencia1
  1499     02DF                     l2674:
  1500                           
  1501                           ;MAIN.c: 133:     secuencia5();
  1502     02DF  120A  118A  21AC  120A  118A  	fcall	_secuencia5
  1503     02E4                     l2676:
  1504                           
  1505                           ;MAIN.c: 136:         LCD_String_xy(0,0,"Press a Key     ");
  1506     02E4  01F5               	clrf	LCD_String_xy@pos
  1507     02E5  3018               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1508     02E6  00F6               	movwf	LCD_String_xy@msg
  1509     02E7  3000               	movlw	0
  1510     02E8  120A  158A  2282  120A  118A  	fcall	_LCD_String_xy
  1511     02ED                     l2678:
  1512                           
  1513                           ;MAIN.c: 137:         LCD_Command(0xc0);
  1514     02ED  30C0               	movlw	192
  1515     02EE  120A  158A  2301  120A  118A  	fcall	_LCD_Command
  1516     02F3                     l2680:
  1517                           
  1518                           ;MAIN.c: 139:             key = keypad_getkey();
  1519     02F3  120A  158A  271F  120A  118A  	fcall	_keypad_getkey
  1520     02F8  1283               	bcf	3,5	;RP0=0, select bank0
  1521     02F9  1303               	bcf	3,6	;RP1=0, select bank0
  1522     02FA  00ED               	movwf	main@key
  1523     02FB                     l2682:
  1524                           
  1525                           ;MAIN.c: 140:             if(key != 0){
  1526     02FB  086D               	movf	main@key,w
  1527     02FC  1903               	btfsc	3,2
  1528     02FD  2AFF               	goto	u3031
  1529     02FE  2B00               	goto	u3030
  1530     02FF                     u3031:
  1531     02FF  2B14               	goto	l2690
  1532     0300                     u3030:
  1533     0300                     l2684:
  1534                           
  1535                           ;MAIN.c: 141:                 LCD_String_xy(2,idx,"*");
  1536     0300  086F               	movf	_idx,w
  1537     0301  00F5               	movwf	LCD_String_xy@pos
  1538     0302  306E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1539     0303  00F6               	movwf	LCD_String_xy@msg
  1540     0304  3002               	movlw	2
  1541     0305  120A  158A  2282  120A  118A  	fcall	_LCD_String_xy
  1542     030A                     l2686:
  1543                           
  1544                           ;MAIN.c: 142:                 pass_user[idx++] = key;
  1545     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1546     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1547     030C  086F               	movf	_idx,w
  1548     030D  3EE0               	addlw	(low (_pass_user| 0))& (0+255)
  1549     030E  0084               	movwf	4
  1550     030F  086D               	movf	main@key,w
  1551     0310  1383               	bcf	3,7	;select IRP bank1
  1552     0311  0080               	movwf	0
  1553     0312                     l2688:
  1554     0312  3001               	movlw	1
  1555     0313  07EF               	addwf	_idx,f
  1556     0314                     l2690:
  1557                           
  1558                           ;MAIN.c: 145:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1559     0314  3002               	movlw	2
  1560     0315  1283               	bcf	3,5	;RP0=0, select bank0
  1561     0316  1303               	bcf	3,6	;RP1=0, select bank0
  1562     0317  00C6               	movwf	??_main+2
  1563     0318  3004               	movlw	4
  1564     0319  00C5               	movwf	??_main+1
  1565     031A  30B9               	movlw	185
  1566     031B  00C4               	movwf	??_main
  1567     031C                     u3087:
  1568     031C  0BC4               	decfsz	??_main,f
  1569     031D  2B1C               	goto	u3087
  1570     031E  0BC5               	decfsz	??_main+1,f
  1571     031F  2B1C               	goto	u3087
  1572     0320  0BC6               	decfsz	??_main+2,f
  1573     0321  2B1C               	goto	u3087
  1574     0322  2B23               	nop2
  1575     0323                     l2692:
  1576                           
  1577                           ;MAIN.c: 146:         }while(idx < 5);
  1578     0323  3005               	movlw	5
  1579     0324  1283               	bcf	3,5	;RP0=0, select bank0
  1580     0325  1303               	bcf	3,6	;RP1=0, select bank0
  1581     0326  026F               	subwf	_idx,w
  1582     0327  1C03               	skipc
  1583     0328  2B2A               	goto	u3041
  1584     0329  2B2B               	goto	u3040
  1585     032A                     u3041:
  1586     032A  2AF3               	goto	l2680
  1587     032B                     u3040:
  1588     032B                     l2694:
  1589                           
  1590                           ;MAIN.c: 150:         if(strncmp(pass_user,password,4)==0){
  1591     032B  30E0               	movlw	(low (_pass_user| 0))& (0+255)
  1592     032C  00F0               	movwf	strncmp@l
  1593     032D  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  1594     032E  00F1               	movwf	strncmp@r
  1595     032F  3004               	movlw	4
  1596     0330  00F2               	movwf	strncmp@n
  1597     0331  3000               	movlw	0
  1598     0332  00F3               	movwf	strncmp@n+1
  1599     0333  120A  158A  2483  120A  118A  	fcall	_strncmp
  1600     0338  0870               	movf	?_strncmp,w
  1601     0339  0471               	iorwf	?_strncmp+1,w
  1602     033A  1D03               	btfss	3,2
  1603     033B  2B3D               	goto	u3051
  1604     033C  2B3E               	goto	u3050
  1605     033D                     u3051:
  1606     033D  2C28               	goto	l2726
  1607     033E                     u3050:
  1608     033E                     l2696:
  1609                           
  1610                           ;MAIN.c: 151:             LCD_Clear();
  1611     033E  120A  158A  217D  120A  118A  	fcall	_LCD_Clear
  1612     0343                     l2698:
  1613                           
  1614                           ;MAIN.c: 152:             LCD_String_xy(0,0,"Clave Correcta");
  1615     0343  01F5               	clrf	LCD_String_xy@pos
  1616     0344  304A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1617     0345  00F6               	movwf	LCD_String_xy@msg
  1618     0346  3000               	movlw	0
  1619     0347  120A  158A  2282  120A  118A  	fcall	_LCD_String_xy
  1620     034C                     l2700:
  1621                           
  1622                           ;MAIN.c: 153:             Lmain();
  1623     034C  120A  158A  23DB  120A  118A  	fcall	_Lmain
  1624                           
  1625                           ;MAIN.c: 154:             blink_led('V', 500, 500, 3000);
  1626     0351  30F4               	movlw	244
  1627     0352  00F4               	movwf	blink_led@on_time
  1628     0353  3001               	movlw	1
  1629     0354  00F5               	movwf	blink_led@on_time+1
  1630     0355  30F4               	movlw	244
  1631     0356  00F6               	movwf	blink_led@off_time
  1632     0357  3001               	movlw	1
  1633     0358  00F7               	movwf	blink_led@off_time+1
  1634     0359  30B8               	movlw	184
  1635     035A  00F8               	movwf	blink_led@duration
  1636     035B  300B               	movlw	11
  1637     035C  00F9               	movwf	blink_led@duration+1
  1638     035D  3056               	movlw	86
  1639     035E  120A  158A  24DB  120A  118A  	fcall	_blink_led
  1640     0363                     l2702:
  1641                           
  1642                           ;MAIN.c: 155:             intentos = 0;
  1643     0363  1683               	bsf	3,5	;RP0=1, select bank1
  1644     0364  1303               	bcf	3,6	;RP1=0, select bank1
  1645     0365  01DE               	clrf	_intentos^(0+128)
  1646     0366  01DF               	clrf	(_intentos+1)^(0+128)
  1647     0367                     l2704:
  1648                           
  1649                           ;MAIN.c: 156:             _delay((unsigned long)((700)*(8000000/4000.0)));
  1650     0367  3008               	movlw	8
  1651     0368  1283               	bcf	3,5	;RP0=0, select bank0
  1652     0369  1303               	bcf	3,6	;RP1=0, select bank0
  1653     036A  00C6               	movwf	??_main+2
  1654     036B  301B               	movlw	27
  1655     036C  00C5               	movwf	??_main+1
  1656     036D  3026               	movlw	38
  1657     036E  00C4               	movwf	??_main
  1658     036F                     u3097:
  1659     036F  0BC4               	decfsz	??_main,f
  1660     0370  2B6F               	goto	u3097
  1661     0371  0BC5               	decfsz	??_main+1,f
  1662     0372  2B6F               	goto	u3097
  1663     0373  0BC6               	decfsz	??_main+2,f
  1664     0374  2B6F               	goto	u3097
  1665     0375  0000               	nop
  1666     0376                     l2706:
  1667                           
  1668                           ;MAIN.c: 158:                 LCD_String_xy(0,0,"AMBIENTAL");
  1669     0376  01F5               	clrf	LCD_String_xy@pos
  1670     0377  3064               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1671     0378  00F6               	movwf	LCD_String_xy@msg
  1672     0379  3000               	movlw	0
  1673     037A  120A  158A  2282  120A  118A  	fcall	_LCD_String_xy
  1674     037F                     l2708:
  1675                           
  1676                           ;MAIN.c: 159:                 LCD_Command(0xC0);
  1677     037F  30C0               	movlw	192
  1678     0380  120A  158A  2301  120A  118A  	fcall	_LCD_Command
  1679     0385                     l2710:
  1680                           
  1681                           ;MAIN.c: 160:                 unsigned int temperatura = adc_read(0);
  1682     0385  3000               	movlw	0
  1683     0386  00F0               	movwf	adc_read@channel
  1684     0387  00F1               	movwf	adc_read@channel+1
  1685     0388  120A  158A  236D  120A  118A  	fcall	_adc_read
  1686     038D  0871               	movf	?_adc_read+1,w
  1687     038E  1283               	bcf	3,5	;RP0=0, select bank0
  1688     038F  1303               	bcf	3,6	;RP1=0, select bank0
  1689     0390  00E8               	movwf	main@temperatura+1
  1690     0391  0870               	movf	?_adc_read,w
  1691     0392  00E7               	movwf	main@temperatura
  1692     0393                     l2712:
  1693                           
  1694                           ;MAIN.c: 161:                 unsigned int luz = adc_read(1);
  1695     0393  3001               	movlw	1
  1696     0394  00F0               	movwf	adc_read@channel
  1697     0395  3000               	movlw	0
  1698     0396  00F1               	movwf	adc_read@channel+1
  1699     0397  120A  158A  236D  120A  118A  	fcall	_adc_read
  1700     039C  0871               	movf	?_adc_read+1,w
  1701     039D  1283               	bcf	3,5	;RP0=0, select bank0
  1702     039E  1303               	bcf	3,6	;RP1=0, select bank0
  1703     039F  00EA               	movwf	main@luz+1
  1704     03A0  0870               	movf	?_adc_read,w
  1705     03A1  00E9               	movwf	main@luz
  1706     03A2                     l2714:
  1707                           
  1708                           ;MAIN.c: 167:                 int value_adc = 1023 - (int)temperatura;
  1709     03A2  30FF               	movlw	255
  1710     03A3  00C4               	movwf	??_main
  1711     03A4  3003               	movlw	3
  1712     03A5  00C5               	movwf	??_main+1
  1713     03A6  0867               	movf	main@temperatura,w
  1714     03A7  0244               	subwf	??_main,w
  1715     03A8  00EB               	movwf	main@value_adc
  1716     03A9  0868               	movf	main@temperatura+1,w
  1717     03AA  1C03               	skipc
  1718     03AB  0A68               	incf	main@temperatura+1,w
  1719     03AC  0245               	subwf	??_main+1,w
  1720     03AD  00EC               	movwf	main@value_adc+1
  1721     03AE                     l2716:
  1722                           
  1723                           ;MAIN.c: 168:                 celsius = (int)(value_adc * 0.04058);
  1724     03AE  086B               	movf	main@value_adc,w
  1725     03AF  00F0               	movwf	___xxtofl@val
  1726     03B0  086C               	movf	main@value_adc+1,w
  1727     03B1  00F1               	movwf	___xxtofl@val+1
  1728     03B2  3000               	movlw	0
  1729     03B3  1BF1               	btfsc	___xxtofl@val+1,7
  1730     03B4  30FF               	movlw	255
  1731     03B5  00F2               	movwf	___xxtofl@val+2
  1732     03B6  00F3               	movwf	___xxtofl@val+3
  1733     03B7  3001               	movlw	1
  1734     03B8  120A  118A  200A  120A  118A  	fcall	___xxtofl
  1735     03BD  0873               	movf	?___xxtofl+3,w
  1736     03BE  1283               	bcf	3,5	;RP0=0, select bank0
  1737     03BF  1303               	bcf	3,6	;RP1=0, select bank0
  1738     03C0  00A7               	movwf	___flmul@a+3
  1739     03C1  0872               	movf	?___xxtofl+2,w
  1740     03C2  00A6               	movwf	___flmul@a+2
  1741     03C3  0871               	movf	?___xxtofl+1,w
  1742     03C4  00A5               	movwf	___flmul@a+1
  1743     03C5  0870               	movf	?___xxtofl,w
  1744     03C6  00A4               	movwf	___flmul@a
  1745     03C7  303D               	movlw	61
  1746     03C8  00A3               	movwf	___flmul@b+3
  1747     03C9  3026               	movlw	38
  1748     03CA  00A2               	movwf	___flmul@b+2
  1749     03CB  3037               	movlw	55
  1750     03CC  00A1               	movwf	___flmul@b+1
  1751     03CD  3037               	movlw	55
  1752     03CE  00A0               	movwf	___flmul@b
  1753     03CF  120A  118A  2498  120A  118A  	fcall	___flmul
  1754     03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1755     03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1756     03D6  0823               	movf	?___flmul+3,w
  1757     03D7  00BD               	movwf	___fltol@f1+3
  1758     03D8  0822               	movf	?___flmul+2,w
  1759     03D9  00BC               	movwf	___fltol@f1+2
  1760     03DA  0821               	movf	?___flmul+1,w
  1761     03DB  00BB               	movwf	___fltol@f1+1
  1762     03DC  0820               	movf	?___flmul,w
  1763     03DD  00BA               	movwf	___fltol@f1
  1764     03DE  120A  158A  260F  120A  118A  	fcall	___fltol
  1765     03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1766     03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1767     03E5  083B               	movf	?___fltol+1,w
  1768     03E6  1683               	bsf	3,5	;RP0=1, select bank1
  1769     03E7  1303               	bcf	3,6	;RP1=0, select bank1
  1770     03E8  00DD               	movwf	(_celsius+1)^(0+128)
  1771     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1772     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1773     03EB  083A               	movf	?___fltol,w
  1774     03EC  1683               	bsf	3,5	;RP0=1, select bank1
  1775     03ED  1303               	bcf	3,6	;RP1=0, select bank1
  1776     03EE  00DC               	movwf	_celsius^(0+128)
  1777     03EF                     l2718:
  1778                           
  1779                           ;MAIN.c: 169:                 sprintf(StringTemperature, "TEMP: %d  L: %d", celsius, luz
      +                          );
  1780     03EF  3047               	movlw	(low (main@StringTemperature| 0))& (0+255)
  1781     03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1782     03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1783     03F2  00B1               	movwf	sprintf@s
  1784     03F3  303A               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1785     03F4  00B2               	movwf	sprintf@fmt
  1786     03F5  1683               	bsf	3,5	;RP0=1, select bank1
  1787     03F6  1303               	bcf	3,6	;RP1=0, select bank1
  1788     03F7  085D               	movf	(_celsius+1)^(0+128),w
  1789     03F8  1283               	bcf	3,5	;RP0=0, select bank0
  1790     03F9  1303               	bcf	3,6	;RP1=0, select bank0
  1791     03FA  00B4               	movwf	?_sprintf+3
  1792     03FB  1683               	bsf	3,5	;RP0=1, select bank1
  1793     03FC  1303               	bcf	3,6	;RP1=0, select bank1
  1794     03FD  085C               	movf	_celsius^(0+128),w
  1795     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1796     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1797     0400  00B3               	movwf	?_sprintf+2
  1798     0401  086A               	movf	main@luz+1,w
  1799     0402  00B6               	movwf	?_sprintf+5
  1800     0403  0869               	movf	main@luz,w
  1801     0404  00B5               	movwf	?_sprintf+4
  1802     0405  120A  158A  21ED  120A  118A  	fcall	_sprintf
  1803     040A                     l2720:
  1804                           
  1805                           ;MAIN.c: 171:                 LCD_String(StringTemperature);
  1806     040A  3047               	movlw	(low (main@StringTemperature| 0))& (0+255)
  1807     040B  00F3               	movwf	LCD_String@msg
  1808     040C  3000               	movlw	0
  1809     040D  00F4               	movwf	LCD_String@msg+1
  1810     040E  120A  158A  2235  120A  118A  	fcall	_LCD_String
  1811     0413                     l2722:
  1812                           
  1813                           ;MAIN.c: 172:                 _delay((unsigned long)((2000)*(8000000/4000.0)));
  1814     0413  3015               	movlw	21
  1815     0414  1283               	bcf	3,5	;RP0=0, select bank0
  1816     0415  1303               	bcf	3,6	;RP1=0, select bank0
  1817     0416  00C6               	movwf	??_main+2
  1818     0417  304B               	movlw	75
  1819     0418  00C5               	movwf	??_main+1
  1820     0419  30BD               	movlw	189
  1821     041A  00C4               	movwf	??_main
  1822     041B                     u3107:
  1823     041B  0BC4               	decfsz	??_main,f
  1824     041C  2C1B               	goto	u3107
  1825     041D  0BC5               	decfsz	??_main+1,f
  1826     041E  2C1B               	goto	u3107
  1827     041F  0BC6               	decfsz	??_main+2,f
  1828     0420  2C1B               	goto	u3107
  1829     0421  2C22               	nop2
  1830     0422                     l2724:
  1831                           
  1832                           ;MAIN.c: 173:                 LCD_Clear();
  1833     0422  120A  158A  217D  120A  118A  	fcall	_LCD_Clear
  1834     0427  2B76               	goto	l2706
  1835     0428                     l2726:
  1836                           
  1837                           ;MAIN.c: 177:             LCD_Clear();
  1838     0428  120A  158A  217D  120A  118A  	fcall	_LCD_Clear
  1839     042D                     l2728:
  1840                           
  1841                           ;MAIN.c: 178:             LCD_String_xy(0,0,"Clave Incorrecta");
  1842     042D  01F5               	clrf	LCD_String_xy@pos
  1843     042E  3029               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1844     042F  00F6               	movwf	LCD_String_xy@msg
  1845     0430  3000               	movlw	0
  1846     0431  120A  158A  2282  120A  118A  	fcall	_LCD_String_xy
  1847     0436                     l2730:
  1848                           
  1849                           ;MAIN.c: 179:             blink_led('A', 300, 700, 2000);
  1850     0436  302C               	movlw	44
  1851     0437  00F4               	movwf	blink_led@on_time
  1852     0438  3001               	movlw	1
  1853     0439  00F5               	movwf	blink_led@on_time+1
  1854     043A  30BC               	movlw	188
  1855     043B  00F6               	movwf	blink_led@off_time
  1856     043C  3002               	movlw	2
  1857     043D  00F7               	movwf	blink_led@off_time+1
  1858     043E  30D0               	movlw	208
  1859     043F  00F8               	movwf	blink_led@duration
  1860     0440  3007               	movlw	7
  1861     0441  00F9               	movwf	blink_led@duration+1
  1862     0442  3041               	movlw	65
  1863     0443  120A  158A  24DB  120A  118A  	fcall	_blink_led
  1864     0448                     l2732:
  1865                           
  1866                           ;MAIN.c: 180:             intentos = intentos + 1;
  1867     0448  1683               	bsf	3,5	;RP0=1, select bank1
  1868     0449  1303               	bcf	3,6	;RP1=0, select bank1
  1869     044A  085E               	movf	_intentos^(0+128),w
  1870     044B  3E01               	addlw	1
  1871     044C  00DE               	movwf	_intentos^(0+128)
  1872     044D  085F               	movf	(_intentos+1)^(0+128),w
  1873     044E  1803               	skipnc
  1874     044F  3E01               	addlw	1
  1875     0450  3E00               	addlw	0
  1876     0451  00DF               	movwf	(_intentos+1)^(0+128)
  1877     0452                     l2734:
  1878                           
  1879                           ;MAIN.c: 181:             if(intentos ==3){
  1880     0452  3003               	movlw	3
  1881     0453  065E               	xorwf	_intentos^(0+128),w
  1882     0454  045F               	iorwf	(_intentos+1)^(0+128),w
  1883     0455  1D03               	btfss	3,2
  1884     0456  2C58               	goto	u3061
  1885     0457  2C59               	goto	u3060
  1886     0458                     u3061:
  1887     0458  2C7D               	goto	l2744
  1888     0459                     u3060:
  1889     0459                     l2736:
  1890                           
  1891                           ;MAIN.c: 182:                 LCD_Clear();
  1892     0459  120A  158A  217D  120A  118A  	fcall	_LCD_Clear
  1893     045E                     l2738:
  1894                           
  1895                           ;MAIN.c: 183:                 LCD_String_xy(0,0,"sistema bloqueado");
  1896     045E  01F5               	clrf	LCD_String_xy@pos
  1897     045F  3006               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1898     0460  00F6               	movwf	LCD_String_xy@msg
  1899     0461  3000               	movlw	0
  1900     0462  120A  158A  2282  120A  118A  	fcall	_LCD_String_xy
  1901     0467                     l2740:
  1902                           
  1903                           ;MAIN.c: 184:                 blink_led('R', 300, 500, 8000);
  1904     0467  302C               	movlw	44
  1905     0468  00F4               	movwf	blink_led@on_time
  1906     0469  3001               	movlw	1
  1907     046A  00F5               	movwf	blink_led@on_time+1
  1908     046B  30F4               	movlw	244
  1909     046C  00F6               	movwf	blink_led@off_time
  1910     046D  3001               	movlw	1
  1911     046E  00F7               	movwf	blink_led@off_time+1
  1912     046F  3040               	movlw	64
  1913     0470  00F8               	movwf	blink_led@duration
  1914     0471  301F               	movlw	31
  1915     0472  00F9               	movwf	blink_led@duration+1
  1916     0473  3052               	movlw	82
  1917     0474  120A  158A  24DB  120A  118A  	fcall	_blink_led
  1918     0479                     l2742:
  1919                           
  1920                           ;MAIN.c: 185:                 intentos = 0;
  1921     0479  1683               	bsf	3,5	;RP0=1, select bank1
  1922     047A  1303               	bcf	3,6	;RP1=0, select bank1
  1923     047B  01DE               	clrf	_intentos^(0+128)
  1924     047C  01DF               	clrf	(_intentos+1)^(0+128)
  1925     047D                     l2744:
  1926                           
  1927                           ;MAIN.c: 189:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1928     047D  3015               	movlw	21
  1929     047E  1283               	bcf	3,5	;RP0=0, select bank0
  1930     047F  1303               	bcf	3,6	;RP1=0, select bank0
  1931     0480  00C6               	movwf	??_main+2
  1932     0481  304B               	movlw	75
  1933     0482  00C5               	movwf	??_main+1
  1934     0483  30BD               	movlw	189
  1935     0484  00C4               	movwf	??_main
  1936     0485                     u3117:
  1937     0485  0BC4               	decfsz	??_main,f
  1938     0486  2C85               	goto	u3117
  1939     0487  0BC5               	decfsz	??_main+1,f
  1940     0488  2C85               	goto	u3117
  1941     0489  0BC6               	decfsz	??_main+2,f
  1942     048A  2C85               	goto	u3117
  1943     048B  2C8C               	nop2
  1944     048C                     l2746:
  1945                           
  1946                           ;MAIN.c: 190:         LCD_Clear();
  1947     048C  120A  158A  217D  120A  118A  	fcall	_LCD_Clear
  1948     0491                     l2748:
  1949                           
  1950                           ;MAIN.c: 191:         idx = 0;
  1951     0491  1283               	bcf	3,5	;RP0=0, select bank0
  1952     0492  1303               	bcf	3,6	;RP1=0, select bank0
  1953     0493  01EF               	clrf	_idx
  1954     0494  2AE4               	goto	l2676
  1955     0495  120A  118A  2800   	ljmp	start
  1956     0498                     __end_of_main:
  1957                           
  1958                           	psect	text1
  1959     0C83                     __ptext1:	
  1960 ;; *************** function _strncmp *****************
  1961 ;; Defined at:
  1962 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  l               1    0[COMMON] PTR const unsigned char 
  1965 ;;		 -> pass_user(5), 
  1966 ;;  r               1    1[COMMON] PTR const unsigned char 
  1967 ;;		 -> password(5), 
  1968 ;;  n               2    2[COMMON] unsigned int 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  2    0[COMMON] int 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         4       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0
  1982 ;;      Temps:          2       0       0       0       0
  1983 ;;      Totals:         6       0       0       0       0
  1984 ;;Total ram usage:        6 bytes
  1985 ;; Hardware stack levels used: 2
  1986 ;; This function calls:
  1987 ;;		Nothing
  1988 ;; This function is called by:
  1989 ;;		_main
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993     0C83                     _strncmp:	
  1994                           ;psect for function _strncmp
  1995                           
  1996     0C83                     l2392:	
  1997                           ;incstack = 0
  1998                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1999                           
  2000     0C83  3001               	movlw	1
  2001     0C84  02F2               	subwf	strncmp@n,f
  2002     0C85  3000               	movlw	0
  2003     0C86  1C03               	skipc
  2004     0C87  03F3               	decf	strncmp@n+1,f
  2005     0C88  02F3               	subwf	strncmp@n+1,f
  2006     0C89  0A72               	incf	strncmp@n,w
  2007     0C8A  1D03               	skipz
  2008     0C8B  2C90               	goto	u2371
  2009     0C8C  0A73               	incf	strncmp@n+1,w
  2010     0C8D  1D03               	btfss	3,2
  2011     0C8E  2C90               	goto	u2371
  2012     0C8F  2C91               	goto	u2370
  2013     0C90                     u2371:
  2014     0C90  2C9E               	goto	l2402
  2015     0C91                     u2370:
  2016     0C91                     l2394:
  2017     0C91  01F0               	clrf	?_strncmp
  2018     0C92  01F1               	clrf	?_strncmp+1
  2019     0C93  2CDA               	goto	l875
  2020     0C94                     l2398:
  2021     0C94  3001               	movlw	1
  2022     0C95  07F0               	addwf	strncmp@l,f
  2023     0C96  3001               	movlw	1
  2024     0C97  07F1               	addwf	strncmp@r,f
  2025     0C98                     l2400:
  2026     0C98  3001               	movlw	1
  2027     0C99  02F2               	subwf	strncmp@n,f
  2028     0C9A  3000               	movlw	0
  2029     0C9B  1C03               	skipc
  2030     0C9C  03F3               	decf	strncmp@n+1,f
  2031     0C9D  02F3               	subwf	strncmp@n+1,f
  2032     0C9E                     l2402:
  2033     0C9E  0870               	movf	strncmp@l,w
  2034     0C9F  0084               	movwf	4
  2035     0CA0  1383               	bcf	3,7	;select IRP bank0
  2036     0CA1  0800               	movf	0,w
  2037     0CA2  1903               	btfsc	3,2
  2038     0CA3  2CA5               	goto	u2381
  2039     0CA4  2CA6               	goto	u2380
  2040     0CA5                     u2381:
  2041     0CA5  2CC8               	goto	l2410
  2042     0CA6                     u2380:
  2043     0CA6                     l2404:
  2044     0CA6  0871               	movf	strncmp@r,w
  2045     0CA7  0084               	movwf	4
  2046     0CA8  120A  158A  200A  120A  158A  	fcall	stringdir
  2047     0CAD  3A00               	xorlw	0
  2048     0CAE  1903               	skipnz
  2049     0CAF  2CB1               	goto	u2391
  2050     0CB0  2CB2               	goto	u2390
  2051     0CB1                     u2391:
  2052     0CB1  2CC8               	goto	l2410
  2053     0CB2                     u2390:
  2054     0CB2                     l2406:
  2055     0CB2  0872               	movf	strncmp@n,w
  2056     0CB3  0473               	iorwf	strncmp@n+1,w
  2057     0CB4  1903               	btfsc	3,2
  2058     0CB5  2CB7               	goto	u2401
  2059     0CB6  2CB8               	goto	u2400
  2060     0CB7                     u2401:
  2061     0CB7  2CC8               	goto	l2410
  2062     0CB8                     u2400:
  2063     0CB8                     l2408:
  2064     0CB8  0871               	movf	strncmp@r,w
  2065     0CB9  0084               	movwf	4
  2066     0CBA  120A  158A  200A  120A  158A  	fcall	stringdir
  2067     0CBF  00F4               	movwf	??_strncmp
  2068     0CC0  0870               	movf	strncmp@l,w
  2069     0CC1  0084               	movwf	4
  2070     0CC2  0800               	movf	0,w
  2071     0CC3  0674               	xorwf	??_strncmp,w
  2072     0CC4  1903               	skipnz
  2073     0CC5  2CC7               	goto	u2411
  2074     0CC6  2CC8               	goto	u2410
  2075     0CC7                     u2411:
  2076     0CC7  2C94               	goto	l2398
  2077     0CC8                     u2410:
  2078     0CC8                     l2410:
  2079     0CC8  0871               	movf	strncmp@r,w
  2080     0CC9  0084               	movwf	4
  2081     0CCA  120A  158A  200A  120A  158A  	fcall	stringdir
  2082     0CCF  00F4               	movwf	??_strncmp
  2083     0CD0  0870               	movf	strncmp@l,w
  2084     0CD1  0084               	movwf	4
  2085     0CD2  0800               	movf	0,w
  2086     0CD3  00F5               	movwf	??_strncmp+1
  2087     0CD4  0874               	movf	??_strncmp,w
  2088     0CD5  0275               	subwf	??_strncmp+1,w
  2089     0CD6  00F0               	movwf	?_strncmp
  2090     0CD7  01F1               	clrf	?_strncmp+1
  2091     0CD8  1C03               	skipc
  2092     0CD9  03F1               	decf	?_strncmp+1,f
  2093     0CDA                     l875:
  2094     0CDA  0008               	return
  2095     0CDB                     __end_of_strncmp:
  2096                           
  2097                           	psect	text2
  2098     09ED                     __ptext2:	
  2099 ;; *************** function _sprintf *****************
  2100 ;; Defined at:
  2101 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  s               1   17[BANK0 ] PTR unsigned char 
  2104 ;;		 -> main@StringTemperature(32), 
  2105 ;;  fmt             1   18[BANK0 ] PTR const unsigned char 
  2106 ;;		 -> STR_7(16), 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  f              11   25[BANK0 ] struct _IO_FILE
  2109 ;;  ret             2    0        int 
  2110 ;;  ap              1   24[BANK0 ] PTR void [1]
  2111 ;;		 -> ?_sprintf(2), 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  2   17[BANK0 ] int 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       6       0       0       0
  2122 ;;      Locals:         0      12       0       0       0
  2123 ;;      Temps:          0       1       0       0       0
  2124 ;;      Totals:         0      19       0       0       0
  2125 ;;Total ram usage:       19 bytes
  2126 ;; Hardware stack levels used: 1
  2127 ;; Hardware stack levels required when called: 4
  2128 ;; This function calls:
  2129 ;;		_vfprintf
  2130 ;; This function is called by:
  2131 ;;		_main
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135     09ED                     _sprintf:	
  2136                           ;psect for function _sprintf
  2137                           
  2138     09ED                     l2414:	
  2139                           ;incstack = 0
  2140                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2141                           
  2142     09ED  3033               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  2143     09EE  1283               	bcf	3,5	;RP0=0, select bank0
  2144     09EF  1303               	bcf	3,6	;RP1=0, select bank0
  2145     09F0  00B8               	movwf	sprintf@ap
  2146     09F1                     l2416:
  2147     09F1  0831               	movf	sprintf@s,w
  2148     09F2  00B9               	movwf	sprintf@f
  2149     09F3  3000               	movlw	0
  2150     09F4  00BA               	movwf	sprintf@f+1
  2151     09F5                     l2418:
  2152     09F5  01BB               	clrf	sprintf@f+2
  2153     09F6  01BC               	clrf	sprintf@f+3
  2154     09F7                     l2420:
  2155     09F7  01C2               	clrf	sprintf@f+9
  2156     09F8  01C3               	clrf	sprintf@f+10
  2157     09F9                     l2422:
  2158     09F9  3039               	movlw	low sprintf@f
  2159     09FA  00AD               	movwf	vfprintf@fp
  2160     09FB  3000               	movlw	high sprintf@f
  2161     09FC  00AE               	movwf	vfprintf@fp+1
  2162     09FD  0832               	movf	sprintf@fmt,w
  2163     09FE  00AF               	movwf	vfprintf@fmt
  2164     09FF  3038               	movlw	(low (sprintf@ap| 0))& (0+255)
  2165     0A00  00B0               	movwf	vfprintf@ap
  2166     0A01  120A  158A  2210  120A  158A  	fcall	_vfprintf
  2167     0A06                     l2424:
  2168     0A06  1283               	bcf	3,5	;RP0=0, select bank0
  2169     0A07  1303               	bcf	3,6	;RP1=0, select bank0
  2170     0A08  083B               	movf	sprintf@f+2,w
  2171     0A09  0731               	addwf	sprintf@s,w
  2172     0A0A  00B7               	movwf	??_sprintf
  2173     0A0B  0837               	movf	??_sprintf,w
  2174     0A0C  0084               	movwf	4
  2175     0A0D  1383               	bcf	3,7	;select IRP bank0
  2176     0A0E  0180               	clrf	0
  2177     0A0F                     l797:
  2178     0A0F  0008               	return
  2179     0A10                     __end_of_sprintf:
  2180                           
  2181                           	psect	text3
  2182     0A10                     __ptext3:	
  2183 ;; *************** function _vfprintf *****************
  2184 ;; Defined at:
  2185 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2186 ;; Parameters:    Size  Location     Type
  2187 ;;  fp              2   13[BANK0 ] PTR struct _IO_FILE
  2188 ;;		 -> sprintf@f(11), 
  2189 ;;  fmt             1   15[BANK0 ] PTR const unsigned char 
  2190 ;;		 -> STR_7(16), 
  2191 ;;  ap              1   16[BANK0 ] PTR PTR void 
  2192 ;;		 -> sprintf@ap(1), 
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  cfmt            1   13[COMMON] PTR unsigned char 
  2195 ;;		 -> STR_7(16), 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2   13[BANK0 ] int 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       4       0       0       0
  2206 ;;      Locals:         1       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0
  2208 ;;      Totals:         1       4       0       0       0
  2209 ;;Total ram usage:        5 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 3
  2212 ;; This function calls:
  2213 ;;		_vfpfcnvrt
  2214 ;; This function is called by:
  2215 ;;		_sprintf
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219     0A10                     _vfprintf:	
  2220                           ;psect for function _vfprintf
  2221                           
  2222     0A10                     l2084:	
  2223                           ;incstack = 0
  2224                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2225                           
  2226                           
  2227                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2228     0A10  1283               	bcf	3,5	;RP0=0, select bank0
  2229     0A11  1303               	bcf	3,6	;RP1=0, select bank0
  2230     0A12  082F               	movf	vfprintf@fmt,w
  2231     0A13  00FD               	movwf	vfprintf@cfmt
  2232                           
  2233                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2234     0A14  2A24               	goto	l2088
  2235     0A15                     l2086:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2238     0A15  1283               	bcf	3,5	;RP0=0, select bank0
  2239     0A16  1303               	bcf	3,6	;RP1=0, select bank0
  2240     0A17  082D               	movf	vfprintf@fp,w
  2241     0A18  00A0               	movwf	vfpfcnvrt@fp
  2242     0A19  082E               	movf	vfprintf@fp+1,w
  2243     0A1A  00A1               	movwf	vfpfcnvrt@fp+1
  2244     0A1B  307D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  2245     0A1C  00A2               	movwf	vfpfcnvrt@fmt
  2246     0A1D  0830               	movf	vfprintf@ap,w
  2247     0A1E  00A3               	movwf	vfpfcnvrt@ap
  2248     0A1F  120A  118A  20BE  120A  158A  	fcall	_vfpfcnvrt
  2249     0A24                     l2088:
  2250                           
  2251                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2252     0A24  087D               	movf	vfprintf@cfmt,w
  2253     0A25  0084               	movwf	4
  2254     0A26  120A  158A  200A  120A  158A  	fcall	stringdir
  2255     0A2B  3A00               	xorlw	0
  2256     0A2C  1D03               	skipz
  2257     0A2D  2A2F               	goto	u2021
  2258     0A2E  2A30               	goto	u2020
  2259     0A2F                     u2021:
  2260     0A2F  2A15               	goto	l2086
  2261     0A30                     u2020:
  2262     0A30                     l2090:
  2263                           
  2264                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2265     0A30  1283               	bcf	3,5	;RP0=0, select bank0
  2266     0A31  1303               	bcf	3,6	;RP1=0, select bank0
  2267     0A32  01AD               	clrf	?_vfprintf
  2268     0A33  01AE               	clrf	?_vfprintf+1
  2269     0A34                     l841:
  2270     0A34  0008               	return
  2271     0A35                     __end_of_vfprintf:
  2272                           
  2273                           	psect	text4
  2274     00BE                     __ptext4:	
  2275 ;; *************** function _vfpfcnvrt *****************
  2276 ;; Defined at:
  2277 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2280 ;;		 -> sprintf@f(11), 
  2281 ;;  fmt             1    2[BANK0 ] PTR PTR unsigned char 
  2282 ;;		 -> vfprintf@cfmt(1), 
  2283 ;;  ap              1    3[BANK0 ] PTR PTR void 
  2284 ;;		 -> sprintf@ap(1), 
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;  convarg         4    8[BANK0 ] struct .
  2287 ;;  c               1   12[BANK0 ] unsigned char 
  2288 ;;  cp              1    7[BANK0 ] PTR unsigned char 
  2289 ;;		 -> STR_7(16), 
  2290 ;;  done            1    6[BANK0 ] _Bool 
  2291 ;; Return value:  Size  Location     Type
  2292 ;;                  1    wreg      void 
  2293 ;; Registers used:
  2294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2295 ;; Tracked objects:
  2296 ;;		On entry : 0/0
  2297 ;;		On exit  : 0/0
  2298 ;;		Unchanged: 0/0
  2299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2300 ;;      Params:         0       4       0       0       0
  2301 ;;      Locals:         0       7       0       0       0
  2302 ;;      Temps:          0       2       0       0       0
  2303 ;;      Totals:         0      13       0       0       0
  2304 ;;Total ram usage:       13 bytes
  2305 ;; Hardware stack levels used: 1
  2306 ;; Hardware stack levels required when called: 2
  2307 ;; This function calls:
  2308 ;;		___awdiv
  2309 ;;		___awmod
  2310 ;;		_abs
  2311 ;;		_fputc
  2312 ;; This function is called by:
  2313 ;;		_vfprintf
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317     00BE                     _vfpfcnvrt:	
  2318                           ;psect for function _vfpfcnvrt
  2319                           
  2320     00BE                     l1968:	
  2321                           ;incstack = 0
  2322                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2323                           
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2326     00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2327     00BF  1303               	bcf	3,6	;RP1=0, select bank0
  2328     00C0  0822               	movf	vfpfcnvrt@fmt,w
  2329     00C1  0084               	movwf	4
  2330     00C2  0800               	movf	0,w
  2331     00C3  0084               	movwf	4
  2332     00C4  120A  158A  200A  120A  118A  	fcall	stringdir
  2333     00C9  3A25               	xorlw	37
  2334     00CA  1D03               	skipz
  2335     00CB  28CD               	goto	u1821
  2336     00CC  28CE               	goto	u1820
  2337     00CD                     u1821:
  2338     00CD  2992               	goto	l2014
  2339     00CE                     u1820:
  2340     00CE                     l1970:
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2343     00CE  0822               	movf	vfpfcnvrt@fmt,w
  2344     00CF  0084               	movwf	4
  2345     00D0  3001               	movlw	1
  2346     00D1  0780               	addwf	0,f
  2347     00D2                     l1972:
  2348                           
  2349                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2350     00D2  1683               	bsf	3,5	;RP0=1, select bank1
  2351     00D3  1303               	bcf	3,6	;RP1=0, select bank1
  2352     00D4  01D8               	clrf	_width^(0+128)
  2353     00D5  01D9               	clrf	(_width+1)^(0+128)
  2354     00D6  3000               	movlw	0
  2355     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  2356     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  2357     00D9  00EE               	movwf	_flags
  2358     00DA                     l1974:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2361     00DA  30FF               	movlw	255
  2362     00DB  1683               	bsf	3,5	;RP0=1, select bank1
  2363     00DC  1303               	bcf	3,6	;RP1=0, select bank1
  2364     00DD  00DA               	movwf	_prec^(0+128)
  2365     00DE  30FF               	movlw	255
  2366     00DF  00DB               	movwf	(_prec^(0+128)+1)
  2367     00E0                     l1976:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2370     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2371     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2372     00E2  0822               	movf	vfpfcnvrt@fmt,w
  2373     00E3  0084               	movwf	4
  2374     00E4  0800               	movf	0,w
  2375     00E5  00A7               	movwf	vfpfcnvrt@cp
  2376     00E6                     l1978:
  2377                           
  2378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2379     00E6  0827               	movf	vfpfcnvrt@cp,w
  2380     00E7  0084               	movwf	4
  2381     00E8  120A  158A  200A  120A  118A  	fcall	stringdir
  2382     00ED  3A64               	xorlw	100
  2383     00EE  1903               	skipnz
  2384     00EF  28F1               	goto	u1831
  2385     00F0  28F2               	goto	u1830
  2386     00F1                     u1831:
  2387     00F1  28FE               	goto	l1982
  2388     00F2                     u1830:
  2389     00F2                     l1980:
  2390     00F2  0827               	movf	vfpfcnvrt@cp,w
  2391     00F3  0084               	movwf	4
  2392     00F4  120A  158A  200A  120A  118A  	fcall	stringdir
  2393     00F9  3A69               	xorlw	105
  2394     00FA  1D03               	skipz
  2395     00FB  28FD               	goto	u1841
  2396     00FC  28FE               	goto	u1840
  2397     00FD                     u1841:
  2398     00FD  298B               	goto	l2010
  2399     00FE                     u1840:
  2400     00FE                     l1982:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2403     00FE  0823               	movf	vfpfcnvrt@ap,w
  2404     00FF  0084               	movwf	4
  2405     0100  1383               	bcf	3,7	;select IRP bank0
  2406     0101  0800               	movf	0,w
  2407     0102  00FF               	movwf	btemp+1
  2408     0103  3002               	movlw	2
  2409     0104  0780               	addwf	0,f
  2410     0105  087F               	movf	btemp+1,w
  2411     0106  0084               	movwf	4
  2412     0107  0800               	movf	0,w
  2413     0108  00A8               	movwf	vfpfcnvrt@convarg
  2414     0109  0A84               	incf	4,f
  2415     010A  0800               	movf	0,w
  2416     010B  00A9               	movwf	vfpfcnvrt@convarg+1
  2417     010C                     l1984:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2420     010C  0822               	movf	vfpfcnvrt@fmt,w
  2421     010D  0084               	movwf	4
  2422     010E  0827               	movf	vfpfcnvrt@cp,w
  2423     010F  3E01               	addlw	1
  2424     0110  0080               	movwf	0
  2425     0111                     l1986:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2428     0111  3020               	movlw	32
  2429     0112  00AC               	movwf	vfpfcnvrt@c
  2430     0113                     l1988:
  2431                           
  2432                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2433     0113  1BA9               	btfsc	vfpfcnvrt@convarg+1,7
  2434     0114  2916               	goto	u1851
  2435     0115  2918               	goto	u1850
  2436     0116                     u1851:
  2437     0116  3001               	movlw	1
  2438     0117  2919               	goto	u1860
  2439     0118                     u1850:
  2440     0118  3000               	movlw	0
  2441     0119                     u1860:
  2442     0119  00A6               	movwf	vfpfcnvrt@done
  2443     011A                     l1990:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2446     011A  3001               	movlw	1
  2447     011B  02AC               	subwf	vfpfcnvrt@c,f
  2448     011C  082C               	movf	vfpfcnvrt@c,w
  2449     011D  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2450     011E  0084               	movwf	4
  2451     011F  300A               	movlw	10
  2452     0120  00F0               	movwf	___awmod@divisor
  2453     0121  3000               	movlw	0
  2454     0122  00F1               	movwf	___awmod@divisor+1
  2455     0123  0829               	movf	vfpfcnvrt@convarg+1,w
  2456     0124  00F3               	movwf	___awmod@dividend+1
  2457     0125  0828               	movf	vfpfcnvrt@convarg,w
  2458     0126  00F2               	movwf	___awmod@dividend
  2459     0127  120A  158A  242C  120A  118A  	fcall	___awmod
  2460     012C  0871               	movf	?___awmod+1,w
  2461     012D  00F7               	movwf	abs@a+1
  2462     012E  0870               	movf	?___awmod,w
  2463     012F  00F6               	movwf	abs@a
  2464     0130  120A  158A  219D  120A  118A  	fcall	_abs
  2465     0135  0876               	movf	?_abs,w
  2466     0136  3E30               	addlw	48
  2467     0137  1783               	bsf	3,7	;select IRP bank3
  2468     0138  0080               	movwf	0
  2469     0139                     l1992:
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2472     0139  300A               	movlw	10
  2473     013A  00F0               	movwf	___awdiv@divisor
  2474     013B  3000               	movlw	0
  2475     013C  00F1               	movwf	___awdiv@divisor+1
  2476     013D  1283               	bcf	3,5	;RP0=0, select bank0
  2477     013E  1303               	bcf	3,6	;RP1=0, select bank0
  2478     013F  0829               	movf	vfpfcnvrt@convarg+1,w
  2479     0140  00F3               	movwf	___awdiv@dividend+1
  2480     0141  0828               	movf	vfpfcnvrt@convarg,w
  2481     0142  00F2               	movwf	___awdiv@dividend
  2482     0143  120A  158A  253E  120A  118A  	fcall	___awdiv
  2483     0148  0871               	movf	?___awdiv+1,w
  2484     0149  1283               	bcf	3,5	;RP0=0, select bank0
  2485     014A  1303               	bcf	3,6	;RP1=0, select bank0
  2486     014B  00A9               	movwf	vfpfcnvrt@convarg+1
  2487     014C  0870               	movf	?___awdiv,w
  2488     014D  00A8               	movwf	vfpfcnvrt@convarg
  2489     014E                     l1994:
  2490                           
  2491                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2492     014E  0828               	movf	vfpfcnvrt@convarg,w
  2493     014F  0429               	iorwf	vfpfcnvrt@convarg+1,w
  2494     0150  1903               	btfsc	3,2
  2495     0151  2953               	goto	u1871
  2496     0152  2954               	goto	u1870
  2497     0153                     u1871:
  2498     0153  2959               	goto	l1998
  2499     0154                     u1870:
  2500     0154                     l1996:
  2501     0154  082C               	movf	vfpfcnvrt@c,w
  2502     0155  1D03               	btfss	3,2
  2503     0156  2958               	goto	u1881
  2504     0157  2959               	goto	u1880
  2505     0158                     u1881:
  2506     0158  291A               	goto	l1990
  2507     0159                     u1880:
  2508     0159                     l1998:
  2509                           
  2510                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2511     0159  082C               	movf	vfpfcnvrt@c,w
  2512     015A  1903               	btfsc	3,2
  2513     015B  295D               	goto	u1891
  2514     015C  295E               	goto	u1890
  2515     015D                     u1891:
  2516     015D  2984               	goto	l2008
  2517     015E                     u1890:
  2518     015E                     l2000:
  2519     015E  0826               	movf	vfpfcnvrt@done,w
  2520     015F  1903               	btfsc	3,2
  2521     0160  2962               	goto	u1901
  2522     0161  2963               	goto	u1900
  2523     0162                     u1901:
  2524     0162  2984               	goto	l2008
  2525     0163                     u1900:
  2526     0163                     l2002:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2529     0163  3001               	movlw	1
  2530     0164  02AC               	subwf	vfpfcnvrt@c,f
  2531     0165  082C               	movf	vfpfcnvrt@c,w
  2532     0166  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2533     0167  0084               	movwf	4
  2534     0168  302D               	movlw	45
  2535     0169  1783               	bsf	3,7	;select IRP bank3
  2536     016A  0080               	movwf	0
  2537     016B  2984               	goto	l2008
  2538     016C                     l2004:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2541     016C  082C               	movf	vfpfcnvrt@c,w
  2542     016D  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2543     016E  0084               	movwf	4
  2544     016F  1783               	bsf	3,7	;select IRP bank3
  2545     0170  0800               	movf	0,w
  2546     0171  00A4               	movwf	??_vfpfcnvrt
  2547     0172  01A5               	clrf	??_vfpfcnvrt+1
  2548     0173  0824               	movf	??_vfpfcnvrt,w
  2549     0174  00F0               	movwf	fputc@c
  2550     0175  0825               	movf	??_vfpfcnvrt+1,w
  2551     0176  00F1               	movwf	fputc@c+1
  2552     0177  0820               	movf	vfpfcnvrt@fp,w
  2553     0178  00F2               	movwf	fputc@fp
  2554     0179  0821               	movf	vfpfcnvrt@fp+1,w
  2555     017A  00F3               	movwf	fputc@fp+1
  2556     017B  120A  158A  2685  120A  118A  	fcall	_fputc
  2557     0180                     l2006:
  2558     0180  3001               	movlw	1
  2559     0181  1283               	bcf	3,5	;RP0=0, select bank0
  2560     0182  1303               	bcf	3,6	;RP1=0, select bank0
  2561     0183  07AC               	addwf	vfpfcnvrt@c,f
  2562     0184                     l2008:
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2565     0184  3020               	movlw	32
  2566     0185  062C               	xorwf	vfpfcnvrt@c,w
  2567     0186  1D03               	btfss	3,2
  2568     0187  2989               	goto	u1911
  2569     0188  298A               	goto	u1910
  2570     0189                     u1911:
  2571     0189  296C               	goto	l2004
  2572     018A                     u1910:
  2573     018A  29AB               	goto	l835
  2574     018B                     l2010:
  2575                           
  2576                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2577     018B  1283               	bcf	3,5	;RP0=0, select bank0
  2578     018C  1303               	bcf	3,6	;RP1=0, select bank0
  2579     018D  0822               	movf	vfpfcnvrt@fmt,w
  2580     018E  0084               	movwf	4
  2581     018F  3001               	movlw	1
  2582     0190  0780               	addwf	0,f
  2583     0191  29AB               	goto	l835
  2584     0192                     l2014:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2587     0192  0822               	movf	vfpfcnvrt@fmt,w
  2588     0193  0084               	movwf	4
  2589     0194  0800               	movf	0,w
  2590     0195  0084               	movwf	4
  2591     0196  120A  158A  200A  120A  118A  	fcall	stringdir
  2592     019B  00A4               	movwf	??_vfpfcnvrt
  2593     019C  01A5               	clrf	??_vfpfcnvrt+1
  2594     019D  0824               	movf	??_vfpfcnvrt,w
  2595     019E  00F0               	movwf	fputc@c
  2596     019F  0825               	movf	??_vfpfcnvrt+1,w
  2597     01A0  00F1               	movwf	fputc@c+1
  2598     01A1  0820               	movf	vfpfcnvrt@fp,w
  2599     01A2  00F2               	movwf	fputc@fp
  2600     01A3  0821               	movf	vfpfcnvrt@fp+1,w
  2601     01A4  00F3               	movwf	fputc@fp+1
  2602     01A5  120A  158A  2685  120A  118A  	fcall	_fputc
  2603     01AA  298B               	goto	l2010
  2604     01AB                     l835:
  2605     01AB  0008               	return
  2606     01AC                     __end_of_vfpfcnvrt:
  2607                           
  2608                           	psect	text5
  2609     0E85                     __ptext5:	
  2610 ;; *************** function _fputc *****************
  2611 ;; Defined at:
  2612 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;  c               2    0[COMMON] int 
  2615 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  2616 ;;		 -> sprintf@f(11), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;		None
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  2    0[COMMON] int 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2628 ;;      Params:         4       0       0       0       0
  2629 ;;      Locals:         0       0       0       0       0
  2630 ;;      Temps:          9       0       0       0       0
  2631 ;;      Totals:        13       0       0       0       0
  2632 ;;Total ram usage:       13 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 1
  2635 ;; This function calls:
  2636 ;;		_putch
  2637 ;; This function is called by:
  2638 ;;		_vfpfcnvrt
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642     0E85                     _fputc:	
  2643                           ;psect for function _fputc
  2644                           
  2645     0E85                     l1918:	
  2646                           ;incstack = 0
  2647                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2648                           
  2649     0E85  0872               	movf	fputc@fp,w
  2650     0E86  0473               	iorwf	fputc@fp+1,w
  2651     0E87  1903               	btfsc	3,2
  2652     0E88  2E8A               	goto	u1741
  2653     0E89  2E8B               	goto	u1740
  2654     0E8A                     u1741:
  2655     0E8A  2E91               	goto	l1922
  2656     0E8B                     u1740:
  2657     0E8B                     l1920:
  2658     0E8B  0872               	movf	fputc@fp,w
  2659     0E8C  0473               	iorwf	fputc@fp+1,w
  2660     0E8D  1D03               	btfss	3,2
  2661     0E8E  2E90               	goto	u1751
  2662     0E8F  2E91               	goto	u1750
  2663     0E90                     u1751:
  2664     0E90  2E98               	goto	l1924
  2665     0E91                     u1750:
  2666     0E91                     l1922:
  2667     0E91  0870               	movf	fputc@c,w
  2668     0E92  120A  118A  2009  120A  158A  	fcall	_putch
  2669     0E97  2F1E               	goto	l860
  2670     0E98                     l1924:
  2671     0E98  0872               	movf	fputc@fp,w
  2672     0E99  3E09               	addlw	9
  2673     0E9A  00F4               	movwf	??_fputc
  2674     0E9B  0873               	movf	fputc@fp+1,w
  2675     0E9C  1803               	skipnc
  2676     0E9D  3E01               	addlw	1
  2677     0E9E  3E00               	addlw	0
  2678     0E9F  00F5               	movwf	??_fputc+1
  2679     0EA0  0874               	movf	??_fputc,w
  2680     0EA1  0084               	movwf	4
  2681     0EA2  1783               	bsf	3,7
  2682     0EA3  1C75               	btfss	??_fputc+1,0
  2683     0EA4  1383               	bcf	3,7
  2684     0EA5  0800               	movf	0,w
  2685     0EA6  00F6               	movwf	??_fputc+2
  2686     0EA7  0A84               	incf	4,f
  2687     0EA8  0800               	movf	0,w
  2688     0EA9  00F7               	movwf	??_fputc+3
  2689     0EAA  0876               	movf	??_fputc+2,w
  2690     0EAB  0477               	iorwf	??_fputc+3,w
  2691     0EAC  1903               	btfsc	3,2
  2692     0EAD  2EAF               	goto	u1761
  2693     0EAE  2EB0               	goto	u1760
  2694     0EAF                     u1761:
  2695     0EAF  2EE2               	goto	l1928
  2696     0EB0                     u1760:
  2697     0EB0                     l1926:
  2698     0EB0  0872               	movf	fputc@fp,w
  2699     0EB1  3E09               	addlw	9
  2700     0EB2  00F4               	movwf	??_fputc
  2701     0EB3  0873               	movf	fputc@fp+1,w
  2702     0EB4  1803               	skipnc
  2703     0EB5  3E01               	addlw	1
  2704     0EB6  3E00               	addlw	0
  2705     0EB7  00F5               	movwf	??_fputc+1
  2706     0EB8  0874               	movf	??_fputc,w
  2707     0EB9  0084               	movwf	4
  2708     0EBA  1783               	bsf	3,7
  2709     0EBB  1C75               	btfss	??_fputc+1,0
  2710     0EBC  1383               	bcf	3,7
  2711     0EBD  0800               	movf	0,w
  2712     0EBE  00F6               	movwf	??_fputc+2
  2713     0EBF  0A84               	incf	4,f
  2714     0EC0  0800               	movf	0,w
  2715     0EC1  00F7               	movwf	??_fputc+3
  2716     0EC2  0872               	movf	fputc@fp,w
  2717     0EC3  3E02               	addlw	2
  2718     0EC4  00F8               	movwf	??_fputc+4
  2719     0EC5  0873               	movf	fputc@fp+1,w
  2720     0EC6  1803               	skipnc
  2721     0EC7  3E01               	addlw	1
  2722     0EC8  3E00               	addlw	0
  2723     0EC9  00F9               	movwf	??_fputc+5
  2724     0ECA  0878               	movf	??_fputc+4,w
  2725     0ECB  0084               	movwf	4
  2726     0ECC  1783               	bsf	3,7
  2727     0ECD  1C79               	btfss	??_fputc+5,0
  2728     0ECE  1383               	bcf	3,7
  2729     0ECF  0800               	movf	0,w
  2730     0ED0  00FA               	movwf	??_fputc+6
  2731     0ED1  0A84               	incf	4,f
  2732     0ED2  0800               	movf	0,w
  2733     0ED3  00FB               	movwf	??_fputc+7
  2734     0ED4  087B               	movf	??_fputc+7,w
  2735     0ED5  3A80               	xorlw	128
  2736     0ED6  00FC               	movwf	??_fputc+8
  2737     0ED7  0877               	movf	??_fputc+3,w
  2738     0ED8  3A80               	xorlw	128
  2739     0ED9  027C               	subwf	??_fputc+8,w
  2740     0EDA  1D03               	skipz
  2741     0EDB  2EDE               	goto	u1775
  2742     0EDC  0876               	movf	??_fputc+2,w
  2743     0EDD  027A               	subwf	??_fputc+6,w
  2744     0EDE                     u1775:
  2745     0EDE  1803               	skipnc
  2746     0EDF  2EE1               	goto	u1771
  2747     0EE0  2EE2               	goto	u1770
  2748     0EE1                     u1771:
  2749     0EE1  2F1E               	goto	l860
  2750     0EE2                     u1770:
  2751     0EE2                     l1928:
  2752     0EE2  0872               	movf	fputc@fp,w
  2753     0EE3  0084               	movwf	4
  2754     0EE4  1783               	bsf	3,7
  2755     0EE5  1C73               	btfss	fputc@fp+1,0
  2756     0EE6  1383               	bcf	3,7
  2757     0EE7  0800               	movf	0,w
  2758     0EE8  00F4               	movwf	??_fputc
  2759     0EE9  0A84               	incf	4,f
  2760     0EEA  0800               	movf	0,w
  2761     0EEB  00F5               	movwf	??_fputc+1
  2762     0EEC  0872               	movf	fputc@fp,w
  2763     0EED  3E02               	addlw	2
  2764     0EEE  00F6               	movwf	??_fputc+2
  2765     0EEF  0873               	movf	fputc@fp+1,w
  2766     0EF0  1803               	skipnc
  2767     0EF1  3E01               	addlw	1
  2768     0EF2  3E00               	addlw	0
  2769     0EF3  00F7               	movwf	??_fputc+3
  2770     0EF4  0876               	movf	??_fputc+2,w
  2771     0EF5  0084               	movwf	4
  2772     0EF6  1783               	bsf	3,7
  2773     0EF7  1C77               	btfss	??_fputc+3,0
  2774     0EF8  1383               	bcf	3,7
  2775     0EF9  0800               	movf	0,w
  2776     0EFA  0774               	addwf	??_fputc,w
  2777     0EFB  00F9               	movwf	??_fputc+5
  2778     0EFC  0875               	movf	??_fputc+1,w
  2779     0EFD  00F8               	movwf	??_fputc+4
  2780     0EFE  1803               	skipnc
  2781     0EFF  0AF8               	incf	??_fputc+4,f
  2782     0F00  1F80               	btfss	0,7
  2783     0F01  2F03               	goto	u1780
  2784     0F02  03F8               	decf	??_fputc+4,f
  2785     0F03                     u1780:
  2786     0F03  0878               	movf	??_fputc+4,w
  2787     0F04  00FA               	movwf	??_fputc+6
  2788     0F05  0879               	movf	??_fputc+5,w
  2789     0F06  0084               	movwf	4
  2790     0F07  1783               	bsf	3,7
  2791     0F08  1C7A               	btfss	??_fputc+6,0
  2792     0F09  1383               	bcf	3,7
  2793     0F0A  0870               	movf	fputc@c,w
  2794     0F0B  0080               	movwf	0
  2795     0F0C  0872               	movf	fputc@fp,w
  2796     0F0D  3E02               	addlw	2
  2797     0F0E  00F4               	movwf	??_fputc
  2798     0F0F  0873               	movf	fputc@fp+1,w
  2799     0F10  1803               	skipnc
  2800     0F11  3E01               	addlw	1
  2801     0F12  3E00               	addlw	0
  2802     0F13  00F5               	movwf	??_fputc+1
  2803     0F14  0874               	movf	??_fputc,w
  2804     0F15  0084               	movwf	4
  2805     0F16  1783               	bsf	3,7
  2806     0F17  1C75               	btfss	??_fputc+1,0
  2807     0F18  1383               	bcf	3,7
  2808     0F19  3001               	movlw	1
  2809     0F1A  0780               	addwf	0,f
  2810     0F1B  0A84               	incf	4,f
  2811     0F1C  1803               	skipnc
  2812     0F1D  0A80               	incf	0,f
  2813     0F1E                     l860:
  2814     0F1E  0008               	return
  2815     0F1F                     __end_of_fputc:
  2816                           
  2817                           	psect	text6
  2818     0009                     __ptext6:	
  2819 ;; *************** function _putch *****************
  2820 ;; Defined at:
  2821 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  c               1    wreg     unsigned char 
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;  c               1    0[COMMON] unsigned char 
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2835 ;;      Params:         0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0
  2837 ;;      Temps:          0       0       0       0       0
  2838 ;;      Totals:         0       0       0       0       0
  2839 ;;Total ram usage:        0 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; This function calls:
  2842 ;;		Nothing
  2843 ;; This function is called by:
  2844 ;;		_fputc
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848     0009                     _putch:	
  2849                           ;psect for function _putch
  2850                           
  2851     0009                     l871:	
  2852                           ;incstack = 0
  2853                           ; Regs used in _putch: [wreg]
  2854                           
  2855     0009  0008               	return
  2856     000A                     __end_of_putch:
  2857                           
  2858                           	psect	text7
  2859     099D                     __ptext7:	
  2860 ;; *************** function _abs *****************
  2861 ;; Defined at:
  2862 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  a               2    6[COMMON] int 
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  2    6[COMMON] int 
  2869 ;; Registers used:
  2870 ;;		wreg, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2876 ;;      Params:         2       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0
  2878 ;;      Temps:          2       0       0       0       0
  2879 ;;      Totals:         4       0       0       0       0
  2880 ;;Total ram usage:        4 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_vfpfcnvrt
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889     099D                     _abs:	
  2890                           ;psect for function _abs
  2891                           
  2892     099D                     l1932:	
  2893                           ;incstack = 0
  2894                           ; Regs used in _abs: [wreg+status,2+status,0]
  2895                           
  2896     099D  1BF7               	btfsc	abs@a+1,7
  2897     099E  29A0               	goto	u1791
  2898     099F  29A1               	goto	u1790
  2899     09A0                     u1791:
  2900     09A0  29A2               	goto	l1936
  2901     09A1                     u1790:
  2902     09A1                     l1934:
  2903     09A1  29AD               	goto	l848
  2904     09A2                     l1936:
  2905     09A2  0976               	comf	abs@a,w
  2906     09A3  00F8               	movwf	??_abs
  2907     09A4  0977               	comf	abs@a+1,w
  2908     09A5  00F9               	movwf	??_abs+1
  2909     09A6  0AF8               	incf	??_abs,f
  2910     09A7  1903               	skipnz
  2911     09A8  0AF9               	incf	??_abs+1,f
  2912     09A9  0878               	movf	??_abs,w
  2913     09AA  00F6               	movwf	?_abs
  2914     09AB  0879               	movf	??_abs+1,w
  2915     09AC  00F7               	movwf	?_abs+1
  2916     09AD                     l848:
  2917     09AD  0008               	return
  2918     09AE                     __end_of_abs:
  2919                           
  2920                           	psect	text8
  2921     0C2C                     __ptext8:	
  2922 ;; *************** function ___awmod *****************
  2923 ;; Defined at:
  2924 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;  divisor         2    0[COMMON] int 
  2927 ;;  dividend        2    2[COMMON] int 
  2928 ;; Auto vars:     Size  Location     Type
  2929 ;;  sign            1    5[COMMON] unsigned char 
  2930 ;;  counter         1    4[COMMON] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  2    0[COMMON] int 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         4       0       0       0       0
  2941 ;;      Locals:         2       0       0       0       0
  2942 ;;      Temps:          0       0       0       0       0
  2943 ;;      Totals:         6       0       0       0       0
  2944 ;;Total ram usage:        6 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; This function calls:
  2947 ;;		Nothing
  2948 ;; This function is called by:
  2949 ;;		_vfpfcnvrt
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953     0C2C                     ___awmod:	
  2954                           ;psect for function ___awmod
  2955                           
  2956     0C2C                     l1880:	
  2957                           ;incstack = 0
  2958                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2959                           
  2960     0C2C  01F5               	clrf	___awmod@sign
  2961     0C2D                     l1882:
  2962     0C2D  1FF3               	btfss	___awmod@dividend+1,7
  2963     0C2E  2C30               	goto	u1651
  2964     0C2F  2C31               	goto	u1650
  2965     0C30                     u1651:
  2966     0C30  2C38               	goto	l1888
  2967     0C31                     u1650:
  2968     0C31                     l1884:
  2969     0C31  09F2               	comf	___awmod@dividend,f
  2970     0C32  09F3               	comf	___awmod@dividend+1,f
  2971     0C33  0AF2               	incf	___awmod@dividend,f
  2972     0C34  1903               	skipnz
  2973     0C35  0AF3               	incf	___awmod@dividend+1,f
  2974     0C36                     l1886:
  2975     0C36  3001               	movlw	1
  2976     0C37  00F5               	movwf	___awmod@sign
  2977     0C38                     l1888:
  2978     0C38  1FF1               	btfss	___awmod@divisor+1,7
  2979     0C39  2C3B               	goto	u1661
  2980     0C3A  2C3C               	goto	u1660
  2981     0C3B                     u1661:
  2982     0C3B  2C41               	goto	l1892
  2983     0C3C                     u1660:
  2984     0C3C                     l1890:
  2985     0C3C  09F0               	comf	___awmod@divisor,f
  2986     0C3D  09F1               	comf	___awmod@divisor+1,f
  2987     0C3E  0AF0               	incf	___awmod@divisor,f
  2988     0C3F  1903               	skipnz
  2989     0C40  0AF1               	incf	___awmod@divisor+1,f
  2990     0C41                     l1892:
  2991     0C41  0870               	movf	___awmod@divisor,w
  2992     0C42  0471               	iorwf	___awmod@divisor+1,w
  2993     0C43  1903               	btfsc	3,2
  2994     0C44  2C46               	goto	u1671
  2995     0C45  2C47               	goto	u1670
  2996     0C46                     u1671:
  2997     0C46  2C74               	goto	l1910
  2998     0C47                     u1670:
  2999     0C47                     l1894:
  3000     0C47  3001               	movlw	1
  3001     0C48  00F4               	movwf	___awmod@counter
  3002     0C49  2C53               	goto	l1900
  3003     0C4A                     l1896:
  3004     0C4A  3001               	movlw	1
  3005     0C4B                     u1685:
  3006     0C4B  1003               	clrc
  3007     0C4C  0DF0               	rlf	___awmod@divisor,f
  3008     0C4D  0DF1               	rlf	___awmod@divisor+1,f
  3009     0C4E  3EFF               	addlw	-1
  3010     0C4F  1D03               	skipz
  3011     0C50  2C4B               	goto	u1685
  3012     0C51                     l1898:
  3013     0C51  3001               	movlw	1
  3014     0C52  07F4               	addwf	___awmod@counter,f
  3015     0C53                     l1900:
  3016     0C53  1FF1               	btfss	___awmod@divisor+1,7
  3017     0C54  2C56               	goto	u1691
  3018     0C55  2C57               	goto	u1690
  3019     0C56                     u1691:
  3020     0C56  2C4A               	goto	l1896
  3021     0C57                     u1690:
  3022     0C57                     l1902:
  3023     0C57  0871               	movf	___awmod@divisor+1,w
  3024     0C58  0273               	subwf	___awmod@dividend+1,w
  3025     0C59  1D03               	skipz
  3026     0C5A  2C5D               	goto	u1705
  3027     0C5B  0870               	movf	___awmod@divisor,w
  3028     0C5C  0272               	subwf	___awmod@dividend,w
  3029     0C5D                     u1705:
  3030     0C5D  1C03               	skipc
  3031     0C5E  2C60               	goto	u1701
  3032     0C5F  2C61               	goto	u1700
  3033     0C60                     u1701:
  3034     0C60  2C67               	goto	l1906
  3035     0C61                     u1700:
  3036     0C61                     l1904:
  3037     0C61  0870               	movf	___awmod@divisor,w
  3038     0C62  02F2               	subwf	___awmod@dividend,f
  3039     0C63  0871               	movf	___awmod@divisor+1,w
  3040     0C64  1C03               	skipc
  3041     0C65  03F3               	decf	___awmod@dividend+1,f
  3042     0C66  02F3               	subwf	___awmod@dividend+1,f
  3043     0C67                     l1906:
  3044     0C67  3001               	movlw	1
  3045     0C68                     u1715:
  3046     0C68  1003               	clrc
  3047     0C69  0CF1               	rrf	___awmod@divisor+1,f
  3048     0C6A  0CF0               	rrf	___awmod@divisor,f
  3049     0C6B  3EFF               	addlw	-1
  3050     0C6C  1D03               	skipz
  3051     0C6D  2C68               	goto	u1715
  3052     0C6E                     l1908:
  3053     0C6E  3001               	movlw	1
  3054     0C6F  02F4               	subwf	___awmod@counter,f
  3055     0C70  1D03               	btfss	3,2
  3056     0C71  2C73               	goto	u1721
  3057     0C72  2C74               	goto	u1720
  3058     0C73                     u1721:
  3059     0C73  2C57               	goto	l1902
  3060     0C74                     u1720:
  3061     0C74                     l1910:
  3062     0C74  0875               	movf	___awmod@sign,w
  3063     0C75  1903               	btfsc	3,2
  3064     0C76  2C78               	goto	u1731
  3065     0C77  2C79               	goto	u1730
  3066     0C78                     u1731:
  3067     0C78  2C7E               	goto	l1914
  3068     0C79                     u1730:
  3069     0C79                     l1912:
  3070     0C79  09F2               	comf	___awmod@dividend,f
  3071     0C7A  09F3               	comf	___awmod@dividend+1,f
  3072     0C7B  0AF2               	incf	___awmod@dividend,f
  3073     0C7C  1903               	skipnz
  3074     0C7D  0AF3               	incf	___awmod@dividend+1,f
  3075     0C7E                     l1914:
  3076     0C7E  0873               	movf	___awmod@dividend+1,w
  3077     0C7F  00F1               	movwf	?___awmod+1
  3078     0C80  0872               	movf	___awmod@dividend,w
  3079     0C81  00F0               	movwf	?___awmod
  3080     0C82                     l500:
  3081     0C82  0008               	return
  3082     0C83                     __end_of___awmod:
  3083                           
  3084                           	psect	text9
  3085     0D3E                     __ptext9:	
  3086 ;; *************** function ___awdiv *****************
  3087 ;; Defined at:
  3088 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  divisor         2    0[COMMON] int 
  3091 ;;  dividend        2    2[COMMON] int 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  quotient        2    6[COMMON] int 
  3094 ;;  sign            1    5[COMMON] unsigned char 
  3095 ;;  counter         1    4[COMMON] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  2    0[COMMON] int 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3105 ;;      Params:         4       0       0       0       0
  3106 ;;      Locals:         4       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0
  3108 ;;      Totals:         8       0       0       0       0
  3109 ;;Total ram usage:        8 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_vfpfcnvrt
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     0D3E                     ___awdiv:	
  3119                           ;psect for function ___awdiv
  3120                           
  3121     0D3E                     l1836:	
  3122                           ;incstack = 0
  3123                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3124                           
  3125     0D3E  01F5               	clrf	___awdiv@sign
  3126     0D3F                     l1838:
  3127     0D3F  1FF1               	btfss	___awdiv@divisor+1,7
  3128     0D40  2D42               	goto	u1551
  3129     0D41  2D43               	goto	u1550
  3130     0D42                     u1551:
  3131     0D42  2D4A               	goto	l1844
  3132     0D43                     u1550:
  3133     0D43                     l1840:
  3134     0D43  09F0               	comf	___awdiv@divisor,f
  3135     0D44  09F1               	comf	___awdiv@divisor+1,f
  3136     0D45  0AF0               	incf	___awdiv@divisor,f
  3137     0D46  1903               	skipnz
  3138     0D47  0AF1               	incf	___awdiv@divisor+1,f
  3139     0D48                     l1842:
  3140     0D48  3001               	movlw	1
  3141     0D49  00F5               	movwf	___awdiv@sign
  3142     0D4A                     l1844:
  3143     0D4A  1FF3               	btfss	___awdiv@dividend+1,7
  3144     0D4B  2D4D               	goto	u1561
  3145     0D4C  2D4E               	goto	u1560
  3146     0D4D                     u1561:
  3147     0D4D  2D55               	goto	l1850
  3148     0D4E                     u1560:
  3149     0D4E                     l1846:
  3150     0D4E  09F2               	comf	___awdiv@dividend,f
  3151     0D4F  09F3               	comf	___awdiv@dividend+1,f
  3152     0D50  0AF2               	incf	___awdiv@dividend,f
  3153     0D51  1903               	skipnz
  3154     0D52  0AF3               	incf	___awdiv@dividend+1,f
  3155     0D53                     l1848:
  3156     0D53  3001               	movlw	1
  3157     0D54  06F5               	xorwf	___awdiv@sign,f
  3158     0D55                     l1850:
  3159     0D55  01F6               	clrf	___awdiv@quotient
  3160     0D56  01F7               	clrf	___awdiv@quotient+1
  3161     0D57                     l1852:
  3162     0D57  0870               	movf	___awdiv@divisor,w
  3163     0D58  0471               	iorwf	___awdiv@divisor+1,w
  3164     0D59  1903               	btfsc	3,2
  3165     0D5A  2D5C               	goto	u1571
  3166     0D5B  2D5D               	goto	u1570
  3167     0D5C                     u1571:
  3168     0D5C  2D92               	goto	l1872
  3169     0D5D                     u1570:
  3170     0D5D                     l1854:
  3171     0D5D  3001               	movlw	1
  3172     0D5E  00F4               	movwf	___awdiv@counter
  3173     0D5F  2D69               	goto	l1860
  3174     0D60                     l1856:
  3175     0D60  3001               	movlw	1
  3176     0D61                     u1585:
  3177     0D61  1003               	clrc
  3178     0D62  0DF0               	rlf	___awdiv@divisor,f
  3179     0D63  0DF1               	rlf	___awdiv@divisor+1,f
  3180     0D64  3EFF               	addlw	-1
  3181     0D65  1D03               	skipz
  3182     0D66  2D61               	goto	u1585
  3183     0D67                     l1858:
  3184     0D67  3001               	movlw	1
  3185     0D68  07F4               	addwf	___awdiv@counter,f
  3186     0D69                     l1860:
  3187     0D69  1FF1               	btfss	___awdiv@divisor+1,7
  3188     0D6A  2D6C               	goto	u1591
  3189     0D6B  2D6D               	goto	u1590
  3190     0D6C                     u1591:
  3191     0D6C  2D60               	goto	l1856
  3192     0D6D                     u1590:
  3193     0D6D                     l1862:
  3194     0D6D  3001               	movlw	1
  3195     0D6E                     u1605:
  3196     0D6E  1003               	clrc
  3197     0D6F  0DF6               	rlf	___awdiv@quotient,f
  3198     0D70  0DF7               	rlf	___awdiv@quotient+1,f
  3199     0D71  3EFF               	addlw	-1
  3200     0D72  1D03               	skipz
  3201     0D73  2D6E               	goto	u1605
  3202     0D74  0871               	movf	___awdiv@divisor+1,w
  3203     0D75  0273               	subwf	___awdiv@dividend+1,w
  3204     0D76  1D03               	skipz
  3205     0D77  2D7A               	goto	u1615
  3206     0D78  0870               	movf	___awdiv@divisor,w
  3207     0D79  0272               	subwf	___awdiv@dividend,w
  3208     0D7A                     u1615:
  3209     0D7A  1C03               	skipc
  3210     0D7B  2D7D               	goto	u1611
  3211     0D7C  2D7E               	goto	u1610
  3212     0D7D                     u1611:
  3213     0D7D  2D85               	goto	l1868
  3214     0D7E                     u1610:
  3215     0D7E                     l1864:
  3216     0D7E  0870               	movf	___awdiv@divisor,w
  3217     0D7F  02F2               	subwf	___awdiv@dividend,f
  3218     0D80  0871               	movf	___awdiv@divisor+1,w
  3219     0D81  1C03               	skipc
  3220     0D82  03F3               	decf	___awdiv@dividend+1,f
  3221     0D83  02F3               	subwf	___awdiv@dividend+1,f
  3222     0D84                     l1866:
  3223     0D84  1476               	bsf	___awdiv@quotient,0
  3224     0D85                     l1868:
  3225     0D85  3001               	movlw	1
  3226     0D86                     u1625:
  3227     0D86  1003               	clrc
  3228     0D87  0CF1               	rrf	___awdiv@divisor+1,f
  3229     0D88  0CF0               	rrf	___awdiv@divisor,f
  3230     0D89  3EFF               	addlw	-1
  3231     0D8A  1D03               	skipz
  3232     0D8B  2D86               	goto	u1625
  3233     0D8C                     l1870:
  3234     0D8C  3001               	movlw	1
  3235     0D8D  02F4               	subwf	___awdiv@counter,f
  3236     0D8E  1D03               	btfss	3,2
  3237     0D8F  2D91               	goto	u1631
  3238     0D90  2D92               	goto	u1630
  3239     0D91                     u1631:
  3240     0D91  2D6D               	goto	l1862
  3241     0D92                     u1630:
  3242     0D92                     l1872:
  3243     0D92  0875               	movf	___awdiv@sign,w
  3244     0D93  1903               	btfsc	3,2
  3245     0D94  2D96               	goto	u1641
  3246     0D95  2D97               	goto	u1640
  3247     0D96                     u1641:
  3248     0D96  2D9C               	goto	l1876
  3249     0D97                     u1640:
  3250     0D97                     l1874:
  3251     0D97  09F6               	comf	___awdiv@quotient,f
  3252     0D98  09F7               	comf	___awdiv@quotient+1,f
  3253     0D99  0AF6               	incf	___awdiv@quotient,f
  3254     0D9A  1903               	skipnz
  3255     0D9B  0AF7               	incf	___awdiv@quotient+1,f
  3256     0D9C                     l1876:
  3257     0D9C  0877               	movf	___awdiv@quotient+1,w
  3258     0D9D  00F1               	movwf	?___awdiv+1
  3259     0D9E  0876               	movf	___awdiv@quotient,w
  3260     0D9F  00F0               	movwf	?___awdiv
  3261     0DA0                     l487:
  3262     0DA0  0008               	return
  3263     0DA1                     __end_of___awdiv:
  3264                           
  3265                           	psect	text10
  3266     01AC                     __ptext10:	
  3267 ;; *************** function _secuencia5 *****************
  3268 ;; Defined at:
  3269 ;;		line 78 in file "MAIN.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;  i               2    2[BANK0 ] int 
  3274 ;;  i               2    0[BANK0 ] int 
  3275 ;;  var6            2   14[BANK0 ] volatile unsigned int 
  3276 ;;  var2            2   12[BANK0 ] volatile unsigned int 
  3277 ;;  var1            2   10[BANK0 ] volatile unsigned int 
  3278 ;;  var7            2    8[BANK0 ] volatile unsigned int 
  3279 ;;  var8            2    6[BANK0 ] volatile unsigned int 
  3280 ;;  var12           2    4[BANK0 ] volatile unsigned int 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  1    wreg      void 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0, btemp+1
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3290 ;;      Params:         0       0       0       0       0
  3291 ;;      Locals:         0      16       0       0       0
  3292 ;;      Temps:          3       0       0       0       0
  3293 ;;      Totals:         3      16       0       0       0
  3294 ;;Total ram usage:       19 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; This function calls:
  3297 ;;		Nothing
  3298 ;; This function is called by:
  3299 ;;		_main
  3300 ;; This function uses a non-reentrant model
  3301 ;;
  3302                           
  3303     01AC                     _secuencia5:	
  3304                           ;psect for function _secuencia5
  3305                           
  3306     01AC                     l2338:	
  3307                           ;incstack = 0
  3308                           ; Regs used in _secuencia5: [wreg+status,2+status,0+btemp+1]
  3309                           
  3310                           
  3311                           ;MAIN.c: 79: volatile unsigned int var1=0xA0,var2=0x01,var12 = 0;
  3312     01AC  30A0               	movlw	160
  3313     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  3314     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  3315     01AF  00AA               	movwf	secuencia5@var1	;volatile
  3316     01B0  3000               	movlw	0
  3317     01B1  00AB               	movwf	secuencia5@var1+1	;volatile
  3318     01B2  3001               	movlw	1
  3319     01B3  00AC               	movwf	secuencia5@var2	;volatile
  3320     01B4  3000               	movlw	0
  3321     01B5  00AD               	movwf	secuencia5@var2+1	;volatile
  3322     01B6                     l2340:
  3323     01B6  01A4               	clrf	secuencia5@var12	;volatile
  3324     01B7  01A5               	clrf	secuencia5@var12+1	;volatile
  3325     01B8                     l2342:
  3326                           
  3327                           ;MAIN.c: 80:     for (int i = 0; i < 2; i++) {
  3328     01B8  01A0               	clrf	secuencia5@i
  3329     01B9  01A1               	clrf	secuencia5@i+1
  3330     01BA                     l2348:
  3331                           
  3332                           ;MAIN.c: 81:         var12 = var1 | var2;
  3333     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  3334     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  3335     01BC  082C               	movf	secuencia5@var2,w	;volatile
  3336     01BD  042A               	iorwf	secuencia5@var1,w	;volatile
  3337     01BE  00A4               	movwf	secuencia5@var12	;volatile
  3338     01BF  082D               	movf	secuencia5@var2+1,w	;volatile
  3339     01C0  042B               	iorwf	secuencia5@var1+1,w	;volatile
  3340     01C1  00A5               	movwf	secuencia5@var12+1	;volatile
  3341                           
  3342                           ;MAIN.c: 82:         PORTD = (unsigned char)(var12);
  3343     01C2  0824               	movf	secuencia5@var12,w	;volatile
  3344     01C3  0088               	movwf	8	;volatile
  3345                           
  3346                           ;MAIN.c: 83:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3347     01C4  3006               	movlw	6
  3348     01C5  00F2               	movwf	??_secuencia5+2
  3349     01C6  3013               	movlw	19
  3350     01C7  00F1               	movwf	??_secuencia5+1
  3351     01C8  30AD               	movlw	173
  3352     01C9  00F0               	movwf	??_secuencia5
  3353     01CA                     u3127:
  3354     01CA  0BF0               	decfsz	??_secuencia5,f
  3355     01CB  29CA               	goto	u3127
  3356     01CC  0BF1               	decfsz	??_secuencia5+1,f
  3357     01CD  29CA               	goto	u3127
  3358     01CE  0BF2               	decfsz	??_secuencia5+2,f
  3359     01CF  29CA               	goto	u3127
  3360     01D0  29D1               	nop2
  3361     01D1                     l2350:
  3362                           
  3363                           ;MAIN.c: 84:         var1 = var1 >> 1;
  3364     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3365     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3366     01D3  082B               	movf	secuencia5@var1+1,w	;volatile
  3367     01D4  00F1               	movwf	??_secuencia5+1
  3368     01D5  082A               	movf	secuencia5@var1,w	;volatile
  3369     01D6  00F0               	movwf	??_secuencia5
  3370     01D7  1003               	clrc
  3371     01D8  0CF1               	rrf	??_secuencia5+1,f
  3372     01D9  0CF0               	rrf	??_secuencia5,f
  3373     01DA  0870               	movf	??_secuencia5,w
  3374     01DB  00AA               	movwf	secuencia5@var1	;volatile
  3375     01DC  0871               	movf	??_secuencia5+1,w
  3376     01DD  00AB               	movwf	secuencia5@var1+1	;volatile
  3377     01DE                     l2352:
  3378                           
  3379                           ;MAIN.c: 85:         var2 = var2 << 1;
  3380     01DE  1003               	clrc
  3381     01DF  0D2C               	rlf	secuencia5@var2,w	;volatile
  3382     01E0  00AC               	movwf	secuencia5@var2	;volatile
  3383     01E1  0D2D               	rlf	secuencia5@var2+1,w	;volatile
  3384     01E2  00AD               	movwf	secuencia5@var2+1	;volatile
  3385     01E3                     l2354:
  3386                           
  3387                           ;MAIN.c: 86:         var12 = var1 | var2;
  3388     01E3  082C               	movf	secuencia5@var2,w	;volatile
  3389     01E4  042A               	iorwf	secuencia5@var1,w	;volatile
  3390     01E5  00A4               	movwf	secuencia5@var12	;volatile
  3391     01E6  082D               	movf	secuencia5@var2+1,w	;volatile
  3392     01E7  042B               	iorwf	secuencia5@var1+1,w	;volatile
  3393     01E8  00A5               	movwf	secuencia5@var12+1	;volatile
  3394     01E9                     l2356:
  3395                           
  3396                           ;MAIN.c: 87:         PORTD = (unsigned char)(var12);
  3397     01E9  0824               	movf	secuencia5@var12,w	;volatile
  3398     01EA  0088               	movwf	8	;volatile
  3399     01EB                     l2358:
  3400                           
  3401                           ;MAIN.c: 88:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3402     01EB  3006               	movlw	6
  3403     01EC  00F2               	movwf	??_secuencia5+2
  3404     01ED  3013               	movlw	19
  3405     01EE  00F1               	movwf	??_secuencia5+1
  3406     01EF  30AD               	movlw	173
  3407     01F0  00F0               	movwf	??_secuencia5
  3408     01F1                     u3137:
  3409     01F1  0BF0               	decfsz	??_secuencia5,f
  3410     01F2  29F1               	goto	u3137
  3411     01F3  0BF1               	decfsz	??_secuencia5+1,f
  3412     01F4  29F1               	goto	u3137
  3413     01F5  0BF2               	decfsz	??_secuencia5+2,f
  3414     01F6  29F1               	goto	u3137
  3415     01F7  29F8               	nop2
  3416     01F8                     l2360:
  3417                           
  3418                           ;MAIN.c: 89:         var12 = var1 | var2;
  3419     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  3420     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  3421     01FA  082C               	movf	secuencia5@var2,w	;volatile
  3422     01FB  042A               	iorwf	secuencia5@var1,w	;volatile
  3423     01FC  00A4               	movwf	secuencia5@var12	;volatile
  3424     01FD  082D               	movf	secuencia5@var2+1,w	;volatile
  3425     01FE  042B               	iorwf	secuencia5@var1+1,w	;volatile
  3426     01FF  00A5               	movwf	secuencia5@var12+1	;volatile
  3427     0200                     l2362:
  3428                           
  3429                           ;MAIN.c: 90:         var1 = var1 << 1;
  3430     0200  1003               	clrc
  3431     0201  0D2A               	rlf	secuencia5@var1,w	;volatile
  3432     0202  00AA               	movwf	secuencia5@var1	;volatile
  3433     0203  0D2B               	rlf	secuencia5@var1+1,w	;volatile
  3434     0204  00AB               	movwf	secuencia5@var1+1	;volatile
  3435     0205                     l2364:
  3436                           
  3437                           ;MAIN.c: 91:         var2 = var2 << 1;
  3438     0205  1003               	clrc
  3439     0206  0D2C               	rlf	secuencia5@var2,w	;volatile
  3440     0207  00AC               	movwf	secuencia5@var2	;volatile
  3441     0208  0D2D               	rlf	secuencia5@var2+1,w	;volatile
  3442     0209  00AD               	movwf	secuencia5@var2+1	;volatile
  3443     020A                     l2366:
  3444                           
  3445                           ;MAIN.c: 92:     }
  3446     020A  3001               	movlw	1
  3447     020B  07A0               	addwf	secuencia5@i,f
  3448     020C  1803               	skipnc
  3449     020D  0AA1               	incf	secuencia5@i+1,f
  3450     020E  3000               	movlw	0
  3451     020F  07A1               	addwf	secuencia5@i+1,f
  3452     0210                     l2368:
  3453     0210  0821               	movf	secuencia5@i+1,w
  3454     0211  3A80               	xorlw	128
  3455     0212  00FF               	movwf	btemp+1
  3456     0213  3080               	movlw	128
  3457     0214  027F               	subwf	btemp+1,w
  3458     0215  1D03               	skipz
  3459     0216  2A19               	goto	u2355
  3460     0217  3002               	movlw	2
  3461     0218  0220               	subwf	secuencia5@i,w
  3462     0219                     u2355:
  3463     0219  1C03               	skipc
  3464     021A  2A1C               	goto	u2351
  3465     021B  2A1D               	goto	u2350
  3466     021C                     u2351:
  3467     021C  29BA               	goto	l2348
  3468     021D                     u2350:
  3469     021D                     l2370:
  3470                           
  3471                           ;MAIN.c: 93:        volatile unsigned int var6=0xA0,var7=0x08,var8 = 0;
  3472     021D  30A0               	movlw	160
  3473     021E  1283               	bcf	3,5	;RP0=0, select bank0
  3474     021F  1303               	bcf	3,6	;RP1=0, select bank0
  3475     0220  00AE               	movwf	secuencia5@var6	;volatile
  3476     0221  3000               	movlw	0
  3477     0222  00AF               	movwf	secuencia5@var6+1	;volatile
  3478     0223  3008               	movlw	8
  3479     0224  00A8               	movwf	secuencia5@var7	;volatile
  3480     0225  3000               	movlw	0
  3481     0226  00A9               	movwf	secuencia5@var7+1	;volatile
  3482     0227                     l2372:
  3483     0227  01A6               	clrf	secuencia5@var8	;volatile
  3484     0228  01A7               	clrf	secuencia5@var8+1	;volatile
  3485     0229                     l2374:
  3486                           
  3487                           ;MAIN.c: 94:     for (int i = 0; i < 2; i++){
  3488     0229  01A2               	clrf	secuencia5@i_297
  3489     022A  01A3               	clrf	secuencia5@i_297+1
  3490     022B                     l2380:
  3491                           
  3492                           ;MAIN.c: 95:         var8 = var6 | var7;
  3493     022B  1283               	bcf	3,5	;RP0=0, select bank0
  3494     022C  1303               	bcf	3,6	;RP1=0, select bank0
  3495     022D  0828               	movf	secuencia5@var7,w	;volatile
  3496     022E  042E               	iorwf	secuencia5@var6,w	;volatile
  3497     022F  00A6               	movwf	secuencia5@var8	;volatile
  3498     0230  0829               	movf	secuencia5@var7+1,w	;volatile
  3499     0231  042F               	iorwf	secuencia5@var6+1,w	;volatile
  3500     0232  00A7               	movwf	secuencia5@var8+1	;volatile
  3501                           
  3502                           ;MAIN.c: 96:         PORTD = (unsigned char)(var8);
  3503     0233  0826               	movf	secuencia5@var8,w	;volatile
  3504     0234  0088               	movwf	8	;volatile
  3505                           
  3506                           ;MAIN.c: 97:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3507     0235  3006               	movlw	6
  3508     0236  00F2               	movwf	??_secuencia5+2
  3509     0237  3013               	movlw	19
  3510     0238  00F1               	movwf	??_secuencia5+1
  3511     0239  30AD               	movlw	173
  3512     023A  00F0               	movwf	??_secuencia5
  3513     023B                     u3147:
  3514     023B  0BF0               	decfsz	??_secuencia5,f
  3515     023C  2A3B               	goto	u3147
  3516     023D  0BF1               	decfsz	??_secuencia5+1,f
  3517     023E  2A3B               	goto	u3147
  3518     023F  0BF2               	decfsz	??_secuencia5+2,f
  3519     0240  2A3B               	goto	u3147
  3520     0241  2A42               	nop2
  3521     0242                     l2382:
  3522                           
  3523                           ;MAIN.c: 98:         var6 = var6 >> 1;
  3524     0242  1283               	bcf	3,5	;RP0=0, select bank0
  3525     0243  1303               	bcf	3,6	;RP1=0, select bank0
  3526     0244  082F               	movf	secuencia5@var6+1,w	;volatile
  3527     0245  00F1               	movwf	??_secuencia5+1
  3528     0246  082E               	movf	secuencia5@var6,w	;volatile
  3529     0247  00F0               	movwf	??_secuencia5
  3530     0248  1003               	clrc
  3531     0249  0CF1               	rrf	??_secuencia5+1,f
  3532     024A  0CF0               	rrf	??_secuencia5,f
  3533     024B  0870               	movf	??_secuencia5,w
  3534     024C  00AE               	movwf	secuencia5@var6	;volatile
  3535     024D  0871               	movf	??_secuencia5+1,w
  3536     024E  00AF               	movwf	secuencia5@var6+1	;volatile
  3537     024F                     l2384:
  3538                           
  3539                           ;MAIN.c: 99:         var7 = var7 >> 1;
  3540     024F  0829               	movf	secuencia5@var7+1,w	;volatile
  3541     0250  00F1               	movwf	??_secuencia5+1
  3542     0251  0828               	movf	secuencia5@var7,w	;volatile
  3543     0252  00F0               	movwf	??_secuencia5
  3544     0253  1003               	clrc
  3545     0254  0CF1               	rrf	??_secuencia5+1,f
  3546     0255  0CF0               	rrf	??_secuencia5,f
  3547     0256  0870               	movf	??_secuencia5,w
  3548     0257  00A8               	movwf	secuencia5@var7	;volatile
  3549     0258  0871               	movf	??_secuencia5+1,w
  3550     0259  00A9               	movwf	secuencia5@var7+1	;volatile
  3551                           
  3552                           ;MAIN.c: 100:         var8 = var6 | var7;
  3553     025A  0828               	movf	secuencia5@var7,w	;volatile
  3554     025B  042E               	iorwf	secuencia5@var6,w	;volatile
  3555     025C  00A6               	movwf	secuencia5@var8	;volatile
  3556     025D  0829               	movf	secuencia5@var7+1,w	;volatile
  3557     025E  042F               	iorwf	secuencia5@var6+1,w	;volatile
  3558     025F  00A7               	movwf	secuencia5@var8+1	;volatile
  3559                           
  3560                           ;MAIN.c: 101:         PORTD = (unsigned char)(var8);
  3561     0260  0826               	movf	secuencia5@var8,w	;volatile
  3562     0261  0088               	movwf	8	;volatile
  3563                           
  3564                           ;MAIN.c: 102:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3565     0262  3006               	movlw	6
  3566     0263  00F2               	movwf	??_secuencia5+2
  3567     0264  3013               	movlw	19
  3568     0265  00F1               	movwf	??_secuencia5+1
  3569     0266  30AD               	movlw	173
  3570     0267  00F0               	movwf	??_secuencia5
  3571     0268                     u3157:
  3572     0268  0BF0               	decfsz	??_secuencia5,f
  3573     0269  2A68               	goto	u3157
  3574     026A  0BF1               	decfsz	??_secuencia5+1,f
  3575     026B  2A68               	goto	u3157
  3576     026C  0BF2               	decfsz	??_secuencia5+2,f
  3577     026D  2A68               	goto	u3157
  3578     026E  2A6F               	nop2
  3579                           
  3580                           ;MAIN.c: 103:         var8 = var6 | var6;
  3581     026F  1283               	bcf	3,5	;RP0=0, select bank0
  3582     0270  1303               	bcf	3,6	;RP1=0, select bank0
  3583     0271  082E               	movf	secuencia5@var6,w	;volatile
  3584     0272  042E               	iorwf	secuencia5@var6,w	;volatile
  3585     0273  00A6               	movwf	secuencia5@var8	;volatile
  3586     0274  082F               	movf	secuencia5@var6+1,w	;volatile
  3587     0275  042F               	iorwf	secuencia5@var6+1,w	;volatile
  3588     0276  00A7               	movwf	secuencia5@var8+1	;volatile
  3589                           
  3590                           ;MAIN.c: 104:         var6 = var6 << 1;
  3591     0277  1003               	clrc
  3592     0278  0D2E               	rlf	secuencia5@var6,w	;volatile
  3593     0279  00AE               	movwf	secuencia5@var6	;volatile
  3594     027A  0D2F               	rlf	secuencia5@var6+1,w	;volatile
  3595     027B  00AF               	movwf	secuencia5@var6+1	;volatile
  3596     027C                     l2386:
  3597                           
  3598                           ;MAIN.c: 105:         var7 = var7 >> 1;
  3599     027C  0829               	movf	secuencia5@var7+1,w	;volatile
  3600     027D  00F1               	movwf	??_secuencia5+1
  3601     027E  0828               	movf	secuencia5@var7,w	;volatile
  3602     027F  00F0               	movwf	??_secuencia5
  3603     0280  1003               	clrc
  3604     0281  0CF1               	rrf	??_secuencia5+1,f
  3605     0282  0CF0               	rrf	??_secuencia5,f
  3606     0283  0870               	movf	??_secuencia5,w
  3607     0284  00A8               	movwf	secuencia5@var7	;volatile
  3608     0285  0871               	movf	??_secuencia5+1,w
  3609     0286  00A9               	movwf	secuencia5@var7+1	;volatile
  3610     0287                     l2388:
  3611                           
  3612                           ;MAIN.c: 107:     }
  3613     0287  3001               	movlw	1
  3614     0288  07A2               	addwf	secuencia5@i_297,f
  3615     0289  1803               	skipnc
  3616     028A  0AA3               	incf	secuencia5@i_297+1,f
  3617     028B  3000               	movlw	0
  3618     028C  07A3               	addwf	secuencia5@i_297+1,f
  3619     028D                     l2390:
  3620     028D  0823               	movf	secuencia5@i_297+1,w
  3621     028E  3A80               	xorlw	128
  3622     028F  00FF               	movwf	btemp+1
  3623     0290  3080               	movlw	128
  3624     0291  027F               	subwf	btemp+1,w
  3625     0292  1D03               	skipz
  3626     0293  2A96               	goto	u2365
  3627     0294  3002               	movlw	2
  3628     0295  0222               	subwf	secuencia5@i_297,w
  3629     0296                     u2365:
  3630     0296  1C03               	skipc
  3631     0297  2A99               	goto	u2361
  3632     0298  2A9A               	goto	u2360
  3633     0299                     u2361:
  3634     0299  2A2B               	goto	l2380
  3635     029A                     u2360:
  3636     029A                     l231:
  3637     029A  0008               	return
  3638     029B                     __end_of_secuencia5:
  3639                           
  3640                           	psect	text11
  3641     0DA1                     __ptext11:	
  3642 ;; *************** function _secuencia1 *****************
  3643 ;; Defined at:
  3644 ;;		line 55 in file "MAIN.c"
  3645 ;; Parameters:    Size  Location     Type
  3646 ;;		None
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;  i               2    3[COMMON] int 
  3649 ;;  var4            2    9[COMMON] volatile unsigned int 
  3650 ;;  var3            2    7[COMMON] volatile unsigned int 
  3651 ;;  var5            2    5[COMMON] volatile unsigned int 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, btemp+1
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       0       0       0       0
  3662 ;;      Locals:         8       0       0       0       0
  3663 ;;      Temps:          3       0       0       0       0
  3664 ;;      Totals:        11       0       0       0       0
  3665 ;;Total ram usage:       11 bytes
  3666 ;; Hardware stack levels used: 1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674     0DA1                     _secuencia1:	
  3675                           ;psect for function _secuencia1
  3676                           
  3677     0DA1                     l2306:	
  3678                           ;incstack = 0
  3679                           ; Regs used in _secuencia1: [wreg+status,2+status,0+btemp+1]
  3680                           
  3681                           
  3682                           ;MAIN.c: 56: volatile unsigned int var3 = 0xA0,var4 = 0x01,var5 = 0;
  3683     0DA1  30A0               	movlw	160
  3684     0DA2  00F7               	movwf	secuencia1@var3	;volatile
  3685     0DA3  3000               	movlw	0
  3686     0DA4  00F8               	movwf	secuencia1@var3+1	;volatile
  3687     0DA5  3001               	movlw	1
  3688     0DA6  00F9               	movwf	secuencia1@var4	;volatile
  3689     0DA7  3000               	movlw	0
  3690     0DA8  00FA               	movwf	secuencia1@var4+1	;volatile
  3691     0DA9                     l2308:
  3692     0DA9  01F5               	clrf	secuencia1@var5	;volatile
  3693     0DAA  01F6               	clrf	secuencia1@var5+1	;volatile
  3694     0DAB                     l2310:
  3695                           
  3696                           ;MAIN.c: 57: for (int i = 0; i < 2; i++) {
  3697     0DAB  01F3               	clrf	secuencia1@i
  3698     0DAC  01F4               	clrf	secuencia1@i+1
  3699     0DAD                     l2316:
  3700                           
  3701                           ;MAIN.c: 58:         var5 = var3 | var4;
  3702     0DAD  0879               	movf	secuencia1@var4,w	;volatile
  3703     0DAE  0477               	iorwf	secuencia1@var3,w	;volatile
  3704     0DAF  00F5               	movwf	secuencia1@var5	;volatile
  3705     0DB0  087A               	movf	secuencia1@var4+1,w	;volatile
  3706     0DB1  0478               	iorwf	secuencia1@var3+1,w	;volatile
  3707     0DB2  00F6               	movwf	secuencia1@var5+1	;volatile
  3708                           
  3709                           ;MAIN.c: 59:         PORTD = (unsigned char)(var5);
  3710     0DB3  0875               	movf	secuencia1@var5,w	;volatile
  3711     0DB4  1283               	bcf	3,5	;RP0=0, select bank0
  3712     0DB5  1303               	bcf	3,6	;RP1=0, select bank0
  3713     0DB6  0088               	movwf	8	;volatile
  3714                           
  3715                           ;MAIN.c: 60:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3716     0DB7  3006               	movlw	6
  3717     0DB8  00F2               	movwf	??_secuencia1+2
  3718     0DB9  3013               	movlw	19
  3719     0DBA  00F1               	movwf	??_secuencia1+1
  3720     0DBB  30AD               	movlw	173
  3721     0DBC  00F0               	movwf	??_secuencia1
  3722     0DBD                     u3167:
  3723     0DBD  0BF0               	decfsz	??_secuencia1,f
  3724     0DBE  2DBD               	goto	u3167
  3725     0DBF  0BF1               	decfsz	??_secuencia1+1,f
  3726     0DC0  2DBD               	goto	u3167
  3727     0DC1  0BF2               	decfsz	??_secuencia1+2,f
  3728     0DC2  2DBD               	goto	u3167
  3729     0DC3  2DC4               	nop2
  3730     0DC4                     l2318:
  3731                           
  3732                           ;MAIN.c: 63:         var3 = var3 >> 1;
  3733     0DC4  0878               	movf	secuencia1@var3+1,w	;volatile
  3734     0DC5  00F1               	movwf	??_secuencia1+1
  3735     0DC6  0877               	movf	secuencia1@var3,w	;volatile
  3736     0DC7  00F0               	movwf	??_secuencia1
  3737     0DC8  1003               	clrc
  3738     0DC9  0CF1               	rrf	??_secuencia1+1,f
  3739     0DCA  0CF0               	rrf	??_secuencia1,f
  3740     0DCB  0870               	movf	??_secuencia1,w
  3741     0DCC  00F7               	movwf	secuencia1@var3	;volatile
  3742     0DCD  0871               	movf	??_secuencia1+1,w
  3743     0DCE  00F8               	movwf	secuencia1@var3+1	;volatile
  3744     0DCF                     l2320:
  3745                           
  3746                           ;MAIN.c: 64:         var4 = var4 << 1;
  3747     0DCF  1003               	clrc
  3748     0DD0  0D79               	rlf	secuencia1@var4,w	;volatile
  3749     0DD1  00F9               	movwf	secuencia1@var4	;volatile
  3750     0DD2  0D7A               	rlf	secuencia1@var4+1,w	;volatile
  3751     0DD3  00FA               	movwf	secuencia1@var4+1	;volatile
  3752     0DD4                     l2322:
  3753                           
  3754                           ;MAIN.c: 67:         var5 = var3 | var4;
  3755     0DD4  0879               	movf	secuencia1@var4,w	;volatile
  3756     0DD5  0477               	iorwf	secuencia1@var3,w	;volatile
  3757     0DD6  00F5               	movwf	secuencia1@var5	;volatile
  3758     0DD7  087A               	movf	secuencia1@var4+1,w	;volatile
  3759     0DD8  0478               	iorwf	secuencia1@var3+1,w	;volatile
  3760     0DD9  00F6               	movwf	secuencia1@var5+1	;volatile
  3761     0DDA                     l2324:
  3762                           
  3763                           ;MAIN.c: 68:         PORTD = (unsigned char)(var5);
  3764     0DDA  0875               	movf	secuencia1@var5,w	;volatile
  3765     0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  3766     0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  3767     0DDD  0088               	movwf	8	;volatile
  3768     0DDE                     l2326:
  3769                           
  3770                           ;MAIN.c: 69:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3771     0DDE  3006               	movlw	6
  3772     0DDF  00F2               	movwf	??_secuencia1+2
  3773     0DE0  3013               	movlw	19
  3774     0DE1  00F1               	movwf	??_secuencia1+1
  3775     0DE2  30AD               	movlw	173
  3776     0DE3  00F0               	movwf	??_secuencia1
  3777     0DE4                     u3177:
  3778     0DE4  0BF0               	decfsz	??_secuencia1,f
  3779     0DE5  2DE4               	goto	u3177
  3780     0DE6  0BF1               	decfsz	??_secuencia1+1,f
  3781     0DE7  2DE4               	goto	u3177
  3782     0DE8  0BF2               	decfsz	??_secuencia1+2,f
  3783     0DE9  2DE4               	goto	u3177
  3784     0DEA  2DEB               	nop2
  3785     0DEB                     l2328:
  3786                           
  3787                           ;MAIN.c: 72:         var5 = var3 | var4;
  3788     0DEB  0879               	movf	secuencia1@var4,w	;volatile
  3789     0DEC  0477               	iorwf	secuencia1@var3,w	;volatile
  3790     0DED  00F5               	movwf	secuencia1@var5	;volatile
  3791     0DEE  087A               	movf	secuencia1@var4+1,w	;volatile
  3792     0DEF  0478               	iorwf	secuencia1@var3+1,w	;volatile
  3793     0DF0  00F6               	movwf	secuencia1@var5+1	;volatile
  3794     0DF1                     l2330:
  3795                           
  3796                           ;MAIN.c: 73:         var3 = var3 << 1;
  3797     0DF1  1003               	clrc
  3798     0DF2  0D77               	rlf	secuencia1@var3,w	;volatile
  3799     0DF3  00F7               	movwf	secuencia1@var3	;volatile
  3800     0DF4  0D78               	rlf	secuencia1@var3+1,w	;volatile
  3801     0DF5  00F8               	movwf	secuencia1@var3+1	;volatile
  3802     0DF6                     l2332:
  3803                           
  3804                           ;MAIN.c: 74:         var4 = var4 << 1;
  3805     0DF6  1003               	clrc
  3806     0DF7  0D79               	rlf	secuencia1@var4,w	;volatile
  3807     0DF8  00F9               	movwf	secuencia1@var4	;volatile
  3808     0DF9  0D7A               	rlf	secuencia1@var4+1,w	;volatile
  3809     0DFA  00FA               	movwf	secuencia1@var4+1	;volatile
  3810     0DFB                     l2334:
  3811                           
  3812                           ;MAIN.c: 75:     }
  3813     0DFB  3001               	movlw	1
  3814     0DFC  07F3               	addwf	secuencia1@i,f
  3815     0DFD  1803               	skipnc
  3816     0DFE  0AF4               	incf	secuencia1@i+1,f
  3817     0DFF  3000               	movlw	0
  3818     0E00  07F4               	addwf	secuencia1@i+1,f
  3819     0E01                     l2336:
  3820     0E01  0874               	movf	secuencia1@i+1,w
  3821     0E02  3A80               	xorlw	128
  3822     0E03  00FF               	movwf	btemp+1
  3823     0E04  3080               	movlw	128
  3824     0E05  027F               	subwf	btemp+1,w
  3825     0E06  1D03               	skipz
  3826     0E07  2E0A               	goto	u2345
  3827     0E08  3002               	movlw	2
  3828     0E09  0273               	subwf	secuencia1@i,w
  3829     0E0A                     u2345:
  3830     0E0A  1C03               	skipc
  3831     0E0B  2E0D               	goto	u2341
  3832     0E0C  2E0E               	goto	u2340
  3833     0E0D                     u2341:
  3834     0E0D  2DAD               	goto	l2316
  3835     0E0E                     u2340:
  3836     0E0E                     l224:
  3837     0E0E  0008               	return
  3838     0E0F                     __end_of_secuencia1:
  3839                           
  3840                           	psect	text12
  3841     096D                     __ptext12:	
  3842 ;; *************** function _keypad_init *****************
  3843 ;; Defined at:
  3844 ;;		line 5 in file "KEYPAD.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;		None
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  1    wreg      void 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3858 ;;      Params:         0       0       0       0       0
  3859 ;;      Locals:         0       0       0       0       0
  3860 ;;      Temps:          0       0       0       0       0
  3861 ;;      Totals:         0       0       0       0       0
  3862 ;;Total ram usage:        0 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_main
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871     096D                     _keypad_init:	
  3872                           ;psect for function _keypad_init
  3873                           
  3874     096D                     l2136:	
  3875                           ;incstack = 0
  3876                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  3877                           
  3878                           
  3879                           ;KEYPAD.c: 7:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  3880     096D  30F0               	movlw	240
  3881     096E  1683               	bsf	3,5	;RP0=1, select bank1
  3882     096F  1303               	bcf	3,6	;RP1=0, select bank1
  3883     0970  0586               	andwf	6,f	;volatile
  3884                           
  3885                           ;KEYPAD.c: 8:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  3886     0971  30F0               	movlw	240
  3887     0972  0486               	iorwf	6,f	;volatile
  3888     0973                     l2138:
  3889                           
  3890                           ;KEYPAD.c: 9:     OPTION_REGbits.nRBPU = 0;
  3891     0973  1381               	bcf	1,7	;volatile
  3892     0974                     l67:
  3893     0974  0008               	return
  3894     0975                     __end_of_keypad_init:
  3895                           
  3896                           	psect	text13
  3897     0F1F                     __ptext13:	
  3898 ;; *************** function _keypad_getkey *****************
  3899 ;; Defined at:
  3900 ;;		line 11 in file "KEYPAD.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;		None
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  3905 ;;  i               2   17[BANK0 ] int 
  3906 ;;  valor           1   16[BANK0 ] unsigned char 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      unsigned char 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3916 ;;      Params:         0       0       0       0       0
  3917 ;;      Locals:         0      19       0       0       0
  3918 ;;      Temps:          4       0       0       0       0
  3919 ;;      Totals:         4      19       0       0       0
  3920 ;;Total ram usage:       23 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929     0F1F                     _keypad_getkey:	
  3930                           ;psect for function _keypad_getkey
  3931                           
  3932     0F1F                     l2140:	
  3933                           ;incstack = 0
  3934                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  3935                           
  3936                           
  3937                           ;KEYPAD.c: 13: char letras[4][4]={ {'1','2','3','A'},
  3938     0F1F  30A0               	movlw	keypad_getkey@F1398& (0+255)
  3939     0F20  0084               	movwf	4
  3940     0F21  3020               	movlw	low keypad_getkey@letras
  3941     0F22  00F0               	movwf	??_keypad_getkey
  3942     0F23  3010               	movlw	16
  3943     0F24  00F1               	movwf	??_keypad_getkey+1
  3944     0F25                     u2040:
  3945     0F25  1383               	bcf	3,7	;select IRP bank1
  3946     0F26  0800               	movf	0,w
  3947     0F27  00F2               	movwf	??_keypad_getkey+2
  3948     0F28  0A04               	incf	4,w
  3949     0F29  00F3               	movwf	??_keypad_getkey+3
  3950     0F2A  0870               	movf	??_keypad_getkey,w
  3951     0F2B  0084               	movwf	4
  3952     0F2C  0872               	movf	??_keypad_getkey+2,w
  3953     0F2D  0080               	movwf	0
  3954     0F2E  0A04               	incf	4,w
  3955     0F2F  00F0               	movwf	??_keypad_getkey
  3956     0F30  0873               	movf	??_keypad_getkey+3,w
  3957     0F31  0084               	movwf	4
  3958     0F32  0BF1               	decfsz	??_keypad_getkey+1,f
  3959     0F33  2F25               	goto	u2040
  3960     0F34                     l2142:
  3961     0F34                     l2144:
  3962                           
  3963                           ;KEYPAD.c: 18: char valor=0;
  3964     0F34  1283               	bcf	3,5	;RP0=0, select bank0
  3965     0F35  1303               	bcf	3,6	;RP1=0, select bank0
  3966     0F36  01B0               	clrf	keypad_getkey@valor
  3967     0F37                     l2146:
  3968                           
  3969                           ;KEYPAD.c: 20: for(i=0;i<4;i++){
  3970     0F37  01B1               	clrf	keypad_getkey@i
  3971     0F38  01B2               	clrf	keypad_getkey@i+1
  3972     0F39                     l2152:
  3973                           
  3974                           ;KEYPAD.c: 22:    if(i==0){
  3975     0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3976     0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3977     0F3B  0831               	movf	keypad_getkey@i,w
  3978     0F3C  0432               	iorwf	keypad_getkey@i+1,w
  3979     0F3D  1D03               	btfss	3,2
  3980     0F3E  2F40               	goto	u2051
  3981     0F3F  2F41               	goto	u2050
  3982     0F40                     u2051:
  3983     0F40  2F66               	goto	l2174
  3984     0F41                     u2050:
  3985     0F41                     l2154:
  3986                           
  3987                           ;KEYPAD.c: 24:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  3988     0F41  30FE               	movlw	254
  3989     0F42  0086               	movwf	6	;volatile
  3990     0F43                     l2156:
  3991                           
  3992                           ;KEYPAD.c: 25:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  3993     0F43  3042               	movlw	66
  3994     0F44  00F0               	movwf	??_keypad_getkey
  3995     0F45                     u3187:
  3996     0F45  0BF0               	decfsz	??_keypad_getkey,f
  3997     0F46  2F45               	goto	u3187
  3998     0F47  0000               	nop
  3999                           
  4000                           ;KEYPAD.c: 26:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  4001     0F48  2F4B               	goto	l2160
  4002     0F49                     l2158:
  4003     0F49  0820               	movf	keypad_getkey@letras,w
  4004     0F4A  00B0               	movwf	keypad_getkey@valor
  4005     0F4B                     l2160:
  4006     0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  4007     0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  4008     0F4D  1E06               	btfss	6,4	;volatile
  4009     0F4E  2F50               	goto	u2061
  4010     0F4F  2F51               	goto	u2060
  4011     0F50                     u2061:
  4012     0F50  2F49               	goto	l2158
  4013     0F51                     u2060:
  4014     0F51  2F54               	goto	l2164
  4015     0F52                     l2162:
  4016     0F52  0821               	movf	keypad_getkey@letras+1,w
  4017     0F53  00B0               	movwf	keypad_getkey@valor
  4018     0F54                     l2164:
  4019     0F54  1E86               	btfss	6,5	;volatile
  4020     0F55  2F57               	goto	u2071
  4021     0F56  2F58               	goto	u2070
  4022     0F57                     u2071:
  4023     0F57  2F52               	goto	l2162
  4024     0F58                     u2070:
  4025     0F58  2F5B               	goto	l2168
  4026     0F59                     l2166:
  4027     0F59  0822               	movf	keypad_getkey@letras+2,w
  4028     0F5A  00B0               	movwf	keypad_getkey@valor
  4029     0F5B                     l2168:
  4030     0F5B  1F06               	btfss	6,6	;volatile
  4031     0F5C  2F5E               	goto	u2081
  4032     0F5D  2F5F               	goto	u2080
  4033     0F5E                     u2081:
  4034     0F5E  2F59               	goto	l2166
  4035     0F5F                     u2080:
  4036     0F5F  2F62               	goto	l2172
  4037     0F60                     l2170:
  4038     0F60  0823               	movf	keypad_getkey@letras+3,w
  4039     0F61  00B0               	movwf	keypad_getkey@valor
  4040     0F62                     l2172:
  4041     0F62  1F86               	btfss	6,7	;volatile
  4042     0F63  2F65               	goto	u2091
  4043     0F64  2F66               	goto	u2090
  4044     0F65                     u2091:
  4045     0F65  2F60               	goto	l2170
  4046     0F66                     u2090:
  4047     0F66                     l2174:
  4048                           
  4049                           ;KEYPAD.c: 32:    if(i==1){
  4050     0F66  0331               	decf	keypad_getkey@i,w
  4051     0F67  0432               	iorwf	keypad_getkey@i+1,w
  4052     0F68  1D03               	btfss	3,2
  4053     0F69  2F6B               	goto	u2101
  4054     0F6A  2F6C               	goto	u2100
  4055     0F6B                     u2101:
  4056     0F6B  2F91               	goto	l2196
  4057     0F6C                     u2100:
  4058     0F6C                     l2176:
  4059                           
  4060                           ;KEYPAD.c: 33:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  4061     0F6C  30FD               	movlw	253
  4062     0F6D  0086               	movwf	6	;volatile
  4063     0F6E                     l2178:
  4064                           
  4065                           ;KEYPAD.c: 34:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  4066     0F6E  3042               	movlw	66
  4067     0F6F  00F0               	movwf	??_keypad_getkey
  4068     0F70                     u3197:
  4069     0F70  0BF0               	decfsz	??_keypad_getkey,f
  4070     0F71  2F70               	goto	u3197
  4071     0F72  0000               	nop
  4072                           
  4073                           ;KEYPAD.c: 35:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  4074     0F73  2F76               	goto	l2182
  4075     0F74                     l2180:
  4076     0F74  0824               	movf	keypad_getkey@letras+4,w
  4077     0F75  00B0               	movwf	keypad_getkey@valor
  4078     0F76                     l2182:
  4079     0F76  1283               	bcf	3,5	;RP0=0, select bank0
  4080     0F77  1303               	bcf	3,6	;RP1=0, select bank0
  4081     0F78  1E06               	btfss	6,4	;volatile
  4082     0F79  2F7B               	goto	u2111
  4083     0F7A  2F7C               	goto	u2110
  4084     0F7B                     u2111:
  4085     0F7B  2F74               	goto	l2180
  4086     0F7C                     u2110:
  4087     0F7C  2F7F               	goto	l2186
  4088     0F7D                     l2184:
  4089     0F7D  0825               	movf	keypad_getkey@letras+5,w
  4090     0F7E  00B0               	movwf	keypad_getkey@valor
  4091     0F7F                     l2186:
  4092     0F7F  1E86               	btfss	6,5	;volatile
  4093     0F80  2F82               	goto	u2121
  4094     0F81  2F83               	goto	u2120
  4095     0F82                     u2121:
  4096     0F82  2F7D               	goto	l2184
  4097     0F83                     u2120:
  4098     0F83  2F86               	goto	l2190
  4099     0F84                     l2188:
  4100     0F84  0826               	movf	keypad_getkey@letras+6,w
  4101     0F85  00B0               	movwf	keypad_getkey@valor
  4102     0F86                     l2190:
  4103     0F86  1F06               	btfss	6,6	;volatile
  4104     0F87  2F89               	goto	u2131
  4105     0F88  2F8A               	goto	u2130
  4106     0F89                     u2131:
  4107     0F89  2F84               	goto	l2188
  4108     0F8A                     u2130:
  4109     0F8A  2F8D               	goto	l2194
  4110     0F8B                     l2192:
  4111     0F8B  0827               	movf	keypad_getkey@letras+7,w
  4112     0F8C  00B0               	movwf	keypad_getkey@valor
  4113     0F8D                     l2194:
  4114     0F8D  1F86               	btfss	6,7	;volatile
  4115     0F8E  2F90               	goto	u2141
  4116     0F8F  2F91               	goto	u2140
  4117     0F90                     u2141:
  4118     0F90  2F8B               	goto	l2192
  4119     0F91                     u2140:
  4120     0F91                     l2196:
  4121                           
  4122                           ;KEYPAD.c: 41:    if(i==2){
  4123     0F91  3002               	movlw	2
  4124     0F92  0631               	xorwf	keypad_getkey@i,w
  4125     0F93  0432               	iorwf	keypad_getkey@i+1,w
  4126     0F94  1D03               	btfss	3,2
  4127     0F95  2F97               	goto	u2151
  4128     0F96  2F98               	goto	u2150
  4129     0F97                     u2151:
  4130     0F97  2FBD               	goto	l2218
  4131     0F98                     u2150:
  4132     0F98                     l2198:
  4133                           
  4134                           ;KEYPAD.c: 42:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  4135     0F98  30FB               	movlw	251
  4136     0F99  0086               	movwf	6	;volatile
  4137     0F9A                     l2200:
  4138                           
  4139                           ;KEYPAD.c: 43:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  4140     0F9A  3042               	movlw	66
  4141     0F9B  00F0               	movwf	??_keypad_getkey
  4142     0F9C                     u3207:
  4143     0F9C  0BF0               	decfsz	??_keypad_getkey,f
  4144     0F9D  2F9C               	goto	u3207
  4145     0F9E  0000               	nop
  4146                           
  4147                           ;KEYPAD.c: 44:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  4148     0F9F  2FA2               	goto	l2204
  4149     0FA0                     l2202:
  4150     0FA0  0828               	movf	keypad_getkey@letras+8,w
  4151     0FA1  00B0               	movwf	keypad_getkey@valor
  4152     0FA2                     l2204:
  4153     0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  4154     0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  4155     0FA4  1E06               	btfss	6,4	;volatile
  4156     0FA5  2FA7               	goto	u2161
  4157     0FA6  2FA8               	goto	u2160
  4158     0FA7                     u2161:
  4159     0FA7  2FA0               	goto	l2202
  4160     0FA8                     u2160:
  4161     0FA8  2FAB               	goto	l2208
  4162     0FA9                     l2206:
  4163     0FA9  0829               	movf	keypad_getkey@letras+9,w
  4164     0FAA  00B0               	movwf	keypad_getkey@valor
  4165     0FAB                     l2208:
  4166     0FAB  1E86               	btfss	6,5	;volatile
  4167     0FAC  2FAE               	goto	u2171
  4168     0FAD  2FAF               	goto	u2170
  4169     0FAE                     u2171:
  4170     0FAE  2FA9               	goto	l2206
  4171     0FAF                     u2170:
  4172     0FAF  2FB2               	goto	l2212
  4173     0FB0                     l2210:
  4174     0FB0  082A               	movf	keypad_getkey@letras+10,w
  4175     0FB1  00B0               	movwf	keypad_getkey@valor
  4176     0FB2                     l2212:
  4177     0FB2  1F06               	btfss	6,6	;volatile
  4178     0FB3  2FB5               	goto	u2181
  4179     0FB4  2FB6               	goto	u2180
  4180     0FB5                     u2181:
  4181     0FB5  2FB0               	goto	l2210
  4182     0FB6                     u2180:
  4183     0FB6  2FB9               	goto	l2216
  4184     0FB7                     l2214:
  4185     0FB7  082B               	movf	keypad_getkey@letras+11,w
  4186     0FB8  00B0               	movwf	keypad_getkey@valor
  4187     0FB9                     l2216:
  4188     0FB9  1F86               	btfss	6,7	;volatile
  4189     0FBA  2FBC               	goto	u2191
  4190     0FBB  2FBD               	goto	u2190
  4191     0FBC                     u2191:
  4192     0FBC  2FB7               	goto	l2214
  4193     0FBD                     u2190:
  4194     0FBD                     l2218:
  4195                           
  4196                           ;KEYPAD.c: 50:    if(i==3){
  4197     0FBD  3003               	movlw	3
  4198     0FBE  0631               	xorwf	keypad_getkey@i,w
  4199     0FBF  0432               	iorwf	keypad_getkey@i+1,w
  4200     0FC0  1D03               	btfss	3,2
  4201     0FC1  2FC3               	goto	u2201
  4202     0FC2  2FC4               	goto	u2200
  4203     0FC3                     u2201:
  4204     0FC3  2FE9               	goto	l2240
  4205     0FC4                     u2200:
  4206     0FC4                     l2220:
  4207                           
  4208                           ;KEYPAD.c: 51:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  4209     0FC4  30F7               	movlw	247
  4210     0FC5  0086               	movwf	6	;volatile
  4211     0FC6                     l2222:
  4212                           
  4213                           ;KEYPAD.c: 52:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  4214     0FC6  3042               	movlw	66
  4215     0FC7  00F0               	movwf	??_keypad_getkey
  4216     0FC8                     u3217:
  4217     0FC8  0BF0               	decfsz	??_keypad_getkey,f
  4218     0FC9  2FC8               	goto	u3217
  4219     0FCA  0000               	nop
  4220                           
  4221                           ;KEYPAD.c: 53:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  4222     0FCB  2FCE               	goto	l2226
  4223     0FCC                     l2224:
  4224     0FCC  082C               	movf	keypad_getkey@letras+12,w
  4225     0FCD  00B0               	movwf	keypad_getkey@valor
  4226     0FCE                     l2226:
  4227     0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  4228     0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  4229     0FD0  1E06               	btfss	6,4	;volatile
  4230     0FD1  2FD3               	goto	u2211
  4231     0FD2  2FD4               	goto	u2210
  4232     0FD3                     u2211:
  4233     0FD3  2FCC               	goto	l2224
  4234     0FD4                     u2210:
  4235     0FD4  2FD7               	goto	l2230
  4236     0FD5                     l2228:
  4237     0FD5  082D               	movf	keypad_getkey@letras+13,w
  4238     0FD6  00B0               	movwf	keypad_getkey@valor
  4239     0FD7                     l2230:
  4240     0FD7  1E86               	btfss	6,5	;volatile
  4241     0FD8  2FDA               	goto	u2221
  4242     0FD9  2FDB               	goto	u2220
  4243     0FDA                     u2221:
  4244     0FDA  2FD5               	goto	l2228
  4245     0FDB                     u2220:
  4246     0FDB  2FDE               	goto	l2234
  4247     0FDC                     l2232:
  4248     0FDC  082E               	movf	keypad_getkey@letras+14,w
  4249     0FDD  00B0               	movwf	keypad_getkey@valor
  4250     0FDE                     l2234:
  4251     0FDE  1F06               	btfss	6,6	;volatile
  4252     0FDF  2FE1               	goto	u2231
  4253     0FE0  2FE2               	goto	u2230
  4254     0FE1                     u2231:
  4255     0FE1  2FDC               	goto	l2232
  4256     0FE2                     u2230:
  4257     0FE2  2FE5               	goto	l2238
  4258     0FE3                     l2236:
  4259     0FE3  082F               	movf	keypad_getkey@letras+15,w
  4260     0FE4  00B0               	movwf	keypad_getkey@valor
  4261     0FE5                     l2238:
  4262     0FE5  1F86               	btfss	6,7	;volatile
  4263     0FE6  2FE8               	goto	u2241
  4264     0FE7  2FE9               	goto	u2240
  4265     0FE8                     u2241:
  4266     0FE8  2FE3               	goto	l2236
  4267     0FE9                     u2240:
  4268     0FE9                     l2240:
  4269                           
  4270                           ;KEYPAD.c: 58:    }
  4271     0FE9  3001               	movlw	1
  4272     0FEA  07B1               	addwf	keypad_getkey@i,f
  4273     0FEB  1803               	skipnc
  4274     0FEC  0AB2               	incf	keypad_getkey@i+1,f
  4275     0FED  3000               	movlw	0
  4276     0FEE  07B2               	addwf	keypad_getkey@i+1,f
  4277     0FEF                     l2242:
  4278     0FEF  0832               	movf	keypad_getkey@i+1,w
  4279     0FF0  3A80               	xorlw	128
  4280     0FF1  00FF               	movwf	btemp+1
  4281     0FF2  3080               	movlw	128
  4282     0FF3  027F               	subwf	btemp+1,w
  4283     0FF4  1D03               	skipz
  4284     0FF5  2FF8               	goto	u2255
  4285     0FF6  3004               	movlw	4
  4286     0FF7  0231               	subwf	keypad_getkey@i,w
  4287     0FF8                     u2255:
  4288     0FF8  1C03               	skipc
  4289     0FF9  2FFB               	goto	u2251
  4290     0FFA  2FFC               	goto	u2250
  4291     0FFB                     u2251:
  4292     0FFB  2F39               	goto	l2152
  4293     0FFC                     u2250:
  4294     0FFC                     l2244:
  4295                           
  4296                           ;KEYPAD.c: 60:    return valor;
  4297     0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4298     0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4299     0FFE  0830               	movf	keypad_getkey@valor,w
  4300     0FFF                     l126:
  4301     0FFF  0008               	return
  4302     1000                     __end_of_keypad_getkey:
  4303                           
  4304                           	psect	text14
  4305     0CDB                     __ptext14:	
  4306 ;; *************** function _blink_led *****************
  4307 ;; Defined at:
  4308 ;;		line 28 in file "MAIN.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  led             1    wreg     unsigned char 
  4311 ;;  on_time         2    4[COMMON] unsigned int 
  4312 ;;  off_time        2    6[COMMON] unsigned int 
  4313 ;;  duration        2    8[COMMON] unsigned int 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  led             1    2[BANK0 ] unsigned char 
  4316 ;;  elapsed_time    2    0[BANK0 ] unsigned int 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  1    wreg      void 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         6       0       0       0       0
  4327 ;;      Locals:         0       3       0       0       0
  4328 ;;      Temps:          2       0       0       0       0
  4329 ;;      Totals:         8       3       0       0       0
  4330 ;;Total ram usage:       11 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 1
  4333 ;; This function calls:
  4334 ;;		_delay_ms_variable
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340     0CDB                     _blink_led:	
  4341                           ;psect for function _blink_led
  4342                           
  4343                           
  4344                           ;incstack = 0
  4345                           ; Regs used in _blink_led: [wreg+status,2+status,0+pclath+cstack]
  4346                           ;blink_led@led stored from wreg
  4347     0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  4348     0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  4349     0CDD  00A2               	movwf	blink_led@led
  4350     0CDE                     l2272:
  4351                           
  4352                           ;MAIN.c: 29:     unsigned int elapsed_time = 0;
  4353     0CDE  01A0               	clrf	blink_led@elapsed_time
  4354     0CDF  01A1               	clrf	blink_led@elapsed_time+1
  4355                           
  4356                           ;MAIN.c: 31:     while (elapsed_time < duration) {
  4357     0CE0  2D33               	goto	l2304
  4358     0CE1                     l2274:
  4359                           
  4360                           ;MAIN.c: 32:         if (led == 'V') {
  4361     0CE1  3056               	movlw	86
  4362     0CE2  0622               	xorwf	blink_led@led,w
  4363     0CE3  1D03               	btfss	3,2
  4364     0CE4  2CE6               	goto	u2271
  4365     0CE5  2CE7               	goto	u2270
  4366     0CE6                     u2271:
  4367     0CE6  2CE9               	goto	l2278
  4368     0CE7                     u2270:
  4369     0CE7                     l2276:
  4370                           
  4371                           ;MAIN.c: 33:             PORTEbits.RE0 = 1;
  4372     0CE7  1409               	bsf	9,0	;volatile
  4373                           
  4374                           ;MAIN.c: 34:         } else if (led == 'A') {
  4375     0CE8  2CF8               	goto	l2286
  4376     0CE9                     l2278:
  4377     0CE9  3041               	movlw	65
  4378     0CEA  0622               	xorwf	blink_led@led,w
  4379     0CEB  1D03               	btfss	3,2
  4380     0CEC  2CEE               	goto	u2281
  4381     0CED  2CEF               	goto	u2280
  4382     0CEE                     u2281:
  4383     0CEE  2CF1               	goto	l2282
  4384     0CEF                     u2280:
  4385     0CEF                     l2280:
  4386                           
  4387                           ;MAIN.c: 35:             PORTEbits.RE1 = 1;
  4388     0CEF  1489               	bsf	9,1	;volatile
  4389                           
  4390                           ;MAIN.c: 36:         } else if (led == 'R') {
  4391     0CF0  2CF8               	goto	l2286
  4392     0CF1                     l2282:
  4393     0CF1  3052               	movlw	82
  4394     0CF2  0622               	xorwf	blink_led@led,w
  4395     0CF3  1D03               	btfss	3,2
  4396     0CF4  2CF6               	goto	u2291
  4397     0CF5  2CF7               	goto	u2290
  4398     0CF6                     u2291:
  4399     0CF6  2CF8               	goto	l2286
  4400     0CF7                     u2290:
  4401     0CF7                     l2284:
  4402                           
  4403                           ;MAIN.c: 37:             PORTEbits.RE2 = 1;
  4404     0CF7  1509               	bsf	9,2	;volatile
  4405     0CF8                     l2286:
  4406                           
  4407                           ;MAIN.c: 39:         delay_ms_variable(on_time);
  4408     0CF8  0875               	movf	blink_led@on_time+1,w
  4409     0CF9  00F1               	movwf	delay_ms_variable@ms+1
  4410     0CFA  0874               	movf	blink_led@on_time,w
  4411     0CFB  00F0               	movwf	delay_ms_variable@ms
  4412     0CFC  120A  158A  21D4  120A  158A  	fcall	_delay_ms_variable
  4413     0D01                     l2288:
  4414                           
  4415                           ;MAIN.c: 42:         if (led == 'V') {
  4416     0D01  3056               	movlw	86
  4417     0D02  1283               	bcf	3,5	;RP0=0, select bank0
  4418     0D03  1303               	bcf	3,6	;RP1=0, select bank0
  4419     0D04  0622               	xorwf	blink_led@led,w
  4420     0D05  1D03               	btfss	3,2
  4421     0D06  2D08               	goto	u2301
  4422     0D07  2D09               	goto	u2300
  4423     0D08                     u2301:
  4424     0D08  2D0B               	goto	l2292
  4425     0D09                     u2300:
  4426     0D09                     l2290:
  4427                           
  4428                           ;MAIN.c: 43:             PORTEbits.RE0 = 0;
  4429     0D09  1009               	bcf	9,0	;volatile
  4430                           
  4431                           ;MAIN.c: 44:         } else if (led == 'A') {
  4432     0D0A  2D1A               	goto	l2300
  4433     0D0B                     l2292:
  4434     0D0B  3041               	movlw	65
  4435     0D0C  0622               	xorwf	blink_led@led,w
  4436     0D0D  1D03               	btfss	3,2
  4437     0D0E  2D10               	goto	u2311
  4438     0D0F  2D11               	goto	u2310
  4439     0D10                     u2311:
  4440     0D10  2D13               	goto	l2296
  4441     0D11                     u2310:
  4442     0D11                     l2294:
  4443                           
  4444                           ;MAIN.c: 45:             PORTEbits.RE1 = 0;
  4445     0D11  1089               	bcf	9,1	;volatile
  4446                           
  4447                           ;MAIN.c: 46:         } else if (led == 'R') {
  4448     0D12  2D1A               	goto	l2300
  4449     0D13                     l2296:
  4450     0D13  3052               	movlw	82
  4451     0D14  0622               	xorwf	blink_led@led,w
  4452     0D15  1D03               	btfss	3,2
  4453     0D16  2D18               	goto	u2321
  4454     0D17  2D19               	goto	u2320
  4455     0D18                     u2321:
  4456     0D18  2D1A               	goto	l2300
  4457     0D19                     u2320:
  4458     0D19                     l2298:
  4459                           
  4460                           ;MAIN.c: 47:             PORTEbits.RE2 = 0;
  4461     0D19  1109               	bcf	9,2	;volatile
  4462     0D1A                     l2300:
  4463                           
  4464                           ;MAIN.c: 49:         delay_ms_variable(off_time);
  4465     0D1A  0877               	movf	blink_led@off_time+1,w
  4466     0D1B  00F1               	movwf	delay_ms_variable@ms+1
  4467     0D1C  0876               	movf	blink_led@off_time,w
  4468     0D1D  00F0               	movwf	delay_ms_variable@ms
  4469     0D1E  120A  158A  21D4  120A  158A  	fcall	_delay_ms_variable
  4470     0D23                     l2302:
  4471                           
  4472                           ;MAIN.c: 51:         elapsed_time += on_time + off_time;
  4473     0D23  0876               	movf	blink_led@off_time,w
  4474     0D24  0774               	addwf	blink_led@on_time,w
  4475     0D25  00FA               	movwf	??_blink_led
  4476     0D26  0877               	movf	blink_led@off_time+1,w
  4477     0D27  1803               	skipnc
  4478     0D28  0A77               	incf	blink_led@off_time+1,w
  4479     0D29  0775               	addwf	blink_led@on_time+1,w
  4480     0D2A  00FB               	movwf	??_blink_led+1
  4481     0D2B  087A               	movf	??_blink_led,w
  4482     0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  4483     0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  4484     0D2E  07A0               	addwf	blink_led@elapsed_time,f
  4485     0D2F  1803               	skipnc
  4486     0D30  0AA1               	incf	blink_led@elapsed_time+1,f
  4487     0D31  087B               	movf	??_blink_led+1,w
  4488     0D32  07A1               	addwf	blink_led@elapsed_time+1,f
  4489     0D33                     l2304:
  4490                           
  4491                           ;MAIN.c: 31:     while (elapsed_time < duration) {
  4492     0D33  0879               	movf	blink_led@duration+1,w
  4493     0D34  0221               	subwf	blink_led@elapsed_time+1,w
  4494     0D35  1D03               	skipz
  4495     0D36  2D39               	goto	u2335
  4496     0D37  0878               	movf	blink_led@duration,w
  4497     0D38  0220               	subwf	blink_led@elapsed_time,w
  4498     0D39                     u2335:
  4499     0D39  1C03               	skipc
  4500     0D3A  2D3C               	goto	u2331
  4501     0D3B  2D3D               	goto	u2330
  4502     0D3C                     u2331:
  4503     0D3C  2CE1               	goto	l2274
  4504     0D3D                     u2330:
  4505     0D3D                     l219:
  4506     0D3D  0008               	return
  4507     0D3E                     __end_of_blink_led:
  4508                           
  4509                           	psect	text15
  4510     09D4                     __ptext15:	
  4511 ;; *************** function _delay_ms_variable *****************
  4512 ;; Defined at:
  4513 ;;		line 21 in file "MAIN.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  ms              2    0[COMMON] unsigned int 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      void 
  4520 ;; Registers used:
  4521 ;;		wreg, status,2, status,0
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4527 ;;      Params:         2       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0
  4529 ;;      Temps:          2       0       0       0       0
  4530 ;;      Totals:         4       0       0       0       0
  4531 ;;Total ram usage:        4 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; This function calls:
  4534 ;;		Nothing
  4535 ;; This function is called by:
  4536 ;;		_blink_led
  4537 ;; This function uses a non-reentrant model
  4538 ;;
  4539                           
  4540     09D4                     _delay_ms_variable:	
  4541                           ;psect for function _delay_ms_variable
  4542                           
  4543     09D4                     l2050:	
  4544                           ;incstack = 0
  4545                           ; Regs used in _delay_ms_variable: [wreg+status,2+status,0]
  4546                           
  4547                           
  4548                           ;MAIN.c: 22:     while (ms--) {
  4549     09D4  29DE               	goto	l2054
  4550     09D5                     l2052:
  4551                           
  4552                           ;MAIN.c: 23:         _delay((unsigned long)((1)*(8000000/4000.0)));
  4553     09D5  3003               	movlw	3
  4554     09D6  00F3               	movwf	??_delay_ms_variable+1
  4555     09D7  3097               	movlw	151
  4556     09D8  00F2               	movwf	??_delay_ms_variable
  4557     09D9                     u3227:
  4558     09D9  0BF2               	decfsz	??_delay_ms_variable,f
  4559     09DA  29D9               	goto	u3227
  4560     09DB  0BF3               	decfsz	??_delay_ms_variable+1,f
  4561     09DC  29D9               	goto	u3227
  4562     09DD  29DE               	nop2
  4563     09DE                     l2054:
  4564                           
  4565                           ;MAIN.c: 22:     while (ms--) {
  4566     09DE  3001               	movlw	1
  4567     09DF  02F0               	subwf	delay_ms_variable@ms,f
  4568     09E0  3000               	movlw	0
  4569     09E1  1C03               	skipc
  4570     09E2  03F1               	decf	delay_ms_variable@ms+1,f
  4571     09E3  02F1               	subwf	delay_ms_variable@ms+1,f
  4572     09E4  0A70               	incf	delay_ms_variable@ms,w
  4573     09E5  1D03               	skipz
  4574     09E6  29EB               	goto	u1961
  4575     09E7  0A71               	incf	delay_ms_variable@ms+1,w
  4576     09E8  1D03               	btfss	3,2
  4577     09E9  29EB               	goto	u1961
  4578     09EA  29EC               	goto	u1960
  4579     09EB                     u1961:
  4580     09EB  29D5               	goto	l2052
  4581     09EC                     u1960:
  4582     09EC                     l203:
  4583     09EC  0008               	return
  4584     09ED                     __end_of_delay_ms_variable:
  4585                           
  4586                           	psect	text16
  4587     0B6D                     __ptext16:	
  4588 ;; *************** function _adc_read *****************
  4589 ;; Defined at:
  4590 ;;		line 22 in file "adc_conversion.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  channel         2    0[COMMON] int 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  value_adc       2    6[COMMON] unsigned int 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  2    0[COMMON] unsigned int 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4604 ;;      Params:         2       0       0       0       0
  4605 ;;      Locals:         2       0       0       0       0
  4606 ;;      Temps:          4       0       0       0       0
  4607 ;;      Totals:         8       0       0       0       0
  4608 ;;Total ram usage:        8 bytes
  4609 ;; Hardware stack levels used: 1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617     0B6D                     _adc_read:	
  4618                           ;psect for function _adc_read
  4619                           
  4620     0B6D                     l2256:	
  4621                           ;incstack = 0
  4622                           ; Regs used in _adc_read: [wreg+status,2+status,0]
  4623                           
  4624                           
  4625                           ;adc_conversion.c: 24:     ADCON0bits.CHS = (0x0F & channel);
  4626     0B6D  0870               	movf	adc_read@channel,w
  4627     0B6E  390F               	andlw	15
  4628     0B6F  00F2               	movwf	??_adc_read
  4629     0B70  0DF2               	rlf	??_adc_read,f
  4630     0B71  0DF2               	rlf	??_adc_read,f
  4631     0B72  1283               	bcf	3,5	;RP0=0, select bank0
  4632     0B73  1303               	bcf	3,6	;RP1=0, select bank0
  4633     0B74  081F               	movf	31,w	;volatile
  4634     0B75  0672               	xorwf	??_adc_read,w
  4635     0B76  39C3               	andlw	-61
  4636     0B77  0672               	xorwf	??_adc_read,w
  4637     0B78  009F               	movwf	31	;volatile
  4638     0B79                     l2258:
  4639                           
  4640                           ;adc_conversion.c: 26:     ADCON0bits.ADON = 1;
  4641     0B79  141F               	bsf	31,0	;volatile
  4642     0B7A                     l2260:
  4643                           
  4644                           ;adc_conversion.c: 27:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  4645     0B7A  3013               	movlw	19
  4646     0B7B  00F2               	movwf	??_adc_read
  4647     0B7C                     u3237:
  4648     0B7C  0BF2               	decfsz	??_adc_read,f
  4649     0B7D  2B7C               	goto	u3237
  4650     0B7E  2B7F               	nop2
  4651     0B7F                     l2262:
  4652                           
  4653                           ;adc_conversion.c: 28:     ADCON0bits.GO_DONE = 1;
  4654     0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  4655     0B80  1303               	bcf	3,6	;RP1=0, select bank0
  4656     0B81  149F               	bsf	31,1	;volatile
  4657     0B82                     l142:	
  4658                           ;adc_conversion.c: 29:     while (ADCON0bits.GO_DONE);
  4659                           
  4660     0B82  189F               	btfsc	31,1	;volatile
  4661     0B83  2B85               	goto	u2261
  4662     0B84  2B86               	goto	u2260
  4663     0B85                     u2261:
  4664     0B85  2B82               	goto	l142
  4665     0B86                     u2260:
  4666     0B86                     l2264:
  4667                           
  4668                           ;adc_conversion.c: 30:     unsigned int value_adc = ADRESH;
  4669     0B86  081E               	movf	30,w	;volatile
  4670     0B87  00F2               	movwf	??_adc_read
  4671     0B88  01F3               	clrf	??_adc_read+1
  4672     0B89  0872               	movf	??_adc_read,w
  4673     0B8A  00F6               	movwf	adc_read@value_adc
  4674     0B8B  0873               	movf	??_adc_read+1,w
  4675     0B8C  00F7               	movwf	adc_read@value_adc+1
  4676     0B8D                     l2266:
  4677                           
  4678                           ;adc_conversion.c: 31:     value_adc = (value_adc << 8) + ADRESL;
  4679     0B8D  0876               	movf	adc_read@value_adc,w
  4680     0B8E  00F3               	movwf	??_adc_read+1
  4681     0B8F  01F2               	clrf	??_adc_read
  4682     0B90  1683               	bsf	3,5	;RP0=1, select bank1
  4683     0B91  1303               	bcf	3,6	;RP1=0, select bank1
  4684     0B92  081E               	movf	30,w	;volatile
  4685     0B93  0772               	addwf	??_adc_read,w
  4686     0B94  00F4               	movwf	??_adc_read+2
  4687     0B95  3000               	movlw	0
  4688     0B96  1803               	skipnc
  4689     0B97  3001               	movlw	1
  4690     0B98  0773               	addwf	??_adc_read+1,w
  4691     0B99  00F5               	movwf	??_adc_read+3
  4692     0B9A  0874               	movf	??_adc_read+2,w
  4693     0B9B  00F6               	movwf	adc_read@value_adc
  4694     0B9C  0875               	movf	??_adc_read+3,w
  4695     0B9D  00F7               	movwf	adc_read@value_adc+1
  4696     0B9E                     l2268:
  4697                           
  4698                           ;adc_conversion.c: 32:     return value_adc;
  4699     0B9E  0877               	movf	adc_read@value_adc+1,w
  4700     0B9F  00F1               	movwf	?_adc_read+1
  4701     0BA0  0876               	movf	adc_read@value_adc,w
  4702     0BA1  00F0               	movwf	?_adc_read
  4703     0BA2                     l145:
  4704     0BA2  0008               	return
  4705     0BA3                     __end_of_adc_read:
  4706                           
  4707                           	psect	text17
  4708     098D                     __ptext17:	
  4709 ;; *************** function _adc_init *****************
  4710 ;; Defined at:
  4711 ;;		line 10 in file "adc_conversion.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;		None
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;		None
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4725 ;;      Params:         0       0       0       0       0
  4726 ;;      Locals:         0       0       0       0       0
  4727 ;;      Temps:          0       0       0       0       0
  4728 ;;      Totals:         0       0       0       0       0
  4729 ;;Total ram usage:        0 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; This function calls:
  4732 ;;		Nothing
  4733 ;; This function is called by:
  4734 ;;		_main
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738     098D                     _adc_init:	
  4739                           ;psect for function _adc_init
  4740                           
  4741     098D                     l2248:	
  4742                           ;incstack = 0
  4743                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  4744                           
  4745                           
  4746                           ;adc_conversion.c: 12:     ADCON1bits.ADFM = 1;
  4747     098D  1683               	bsf	3,5	;RP0=1, select bank1
  4748     098E  1303               	bcf	3,6	;RP1=0, select bank1
  4749     098F  179F               	bsf	31,7	;volatile
  4750                           
  4751                           ;adc_conversion.c: 13:     ADCON1bits.VCFG0 = 0;
  4752     0990  121F               	bcf	31,4	;volatile
  4753                           
  4754                           ;adc_conversion.c: 14:     ADCON1bits.VCFG1 = 0;
  4755     0991  129F               	bcf	31,5	;volatile
  4756     0992                     l2250:
  4757                           
  4758                           ;adc_conversion.c: 16:     ADCON0bits.ADCS = 0b01;
  4759     0992  1283               	bcf	3,5	;RP0=0, select bank0
  4760     0993  1303               	bcf	3,6	;RP1=0, select bank0
  4761     0994  081F               	movf	31,w	;volatile
  4762     0995  393F               	andlw	-193
  4763     0996  3840               	iorlw	64
  4764     0997  009F               	movwf	31	;volatile
  4765     0998                     l2252:
  4766                           
  4767                           ;adc_conversion.c: 17:     ADRESH=0;
  4768     0998  019E               	clrf	30	;volatile
  4769     0999                     l2254:
  4770                           
  4771                           ;adc_conversion.c: 18:     ADRESL=0;
  4772     0999  1683               	bsf	3,5	;RP0=1, select bank1
  4773     099A  1303               	bcf	3,6	;RP1=0, select bank1
  4774     099B  019E               	clrf	30	;volatile
  4775     099C                     l139:
  4776     099C  0008               	return
  4777     099D                     __end_of_adc_init:
  4778                           
  4779                           	psect	text18
  4780     000A                     __ptext18:	
  4781 ;; *************** function ___xxtofl *****************
  4782 ;; Defined at:
  4783 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  sign            1    wreg     unsigned char 
  4786 ;;  val             4    0[COMMON] long 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  sign            1    8[COMMON] unsigned char 
  4789 ;;  arg             4   10[COMMON] unsigned long 
  4790 ;;  exp             1    9[COMMON] unsigned char 
  4791 ;; Return value:  Size  Location     Type
  4792 ;;                  4    0[COMMON] unsigned char 
  4793 ;; Registers used:
  4794 ;;		wreg, status,2, status,0
  4795 ;; Tracked objects:
  4796 ;;		On entry : 0/0
  4797 ;;		On exit  : 0/0
  4798 ;;		Unchanged: 0/0
  4799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4800 ;;      Params:         4       0       0       0       0
  4801 ;;      Locals:         6       0       0       0       0
  4802 ;;      Temps:          4       0       0       0       0
  4803 ;;      Totals:        14       0       0       0       0
  4804 ;;Total ram usage:       14 bytes
  4805 ;; Hardware stack levels used: 1
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_main
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813     000A                     ___xxtofl:	
  4814                           ;psect for function ___xxtofl
  4815                           
  4816                           
  4817                           ;incstack = 0
  4818                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4819                           ;___xxtofl@sign stored from wreg
  4820     000A  00F8               	movwf	___xxtofl@sign
  4821     000B                     l2606:
  4822     000B  0878               	movf	___xxtofl@sign,w
  4823     000C  1903               	btfsc	3,2
  4824     000D  280F               	goto	u2891
  4825     000E  2810               	goto	u2890
  4826     000F                     u2891:
  4827     000F  2824               	goto	l2612
  4828     0010                     u2890:
  4829     0010                     l2608:
  4830     0010  1FF3               	btfss	___xxtofl@val+3,7
  4831     0011  2813               	goto	u2901
  4832     0012  2814               	goto	u2900
  4833     0013                     u2901:
  4834     0013  2824               	goto	l2612
  4835     0014                     u2900:
  4836     0014                     l2610:
  4837     0014  0970               	comf	___xxtofl@val,w
  4838     0015  00FA               	movwf	___xxtofl@arg
  4839     0016  0971               	comf	___xxtofl@val+1,w
  4840     0017  00FB               	movwf	___xxtofl@arg+1
  4841     0018  0972               	comf	___xxtofl@val+2,w
  4842     0019  00FC               	movwf	___xxtofl@arg+2
  4843     001A  0973               	comf	___xxtofl@val+3,w
  4844     001B  00FD               	movwf	___xxtofl@arg+3
  4845     001C  0AFA               	incf	___xxtofl@arg,f
  4846     001D  1903               	skipnz
  4847     001E  0AFB               	incf	___xxtofl@arg+1,f
  4848     001F  1903               	skipnz
  4849     0020  0AFC               	incf	___xxtofl@arg+2,f
  4850     0021  1903               	skipnz
  4851     0022  0AFD               	incf	___xxtofl@arg+3,f
  4852     0023  282C               	goto	l775
  4853     0024                     l2612:
  4854     0024  0873               	movf	___xxtofl@val+3,w
  4855     0025  00FD               	movwf	___xxtofl@arg+3
  4856     0026  0872               	movf	___xxtofl@val+2,w
  4857     0027  00FC               	movwf	___xxtofl@arg+2
  4858     0028  0871               	movf	___xxtofl@val+1,w
  4859     0029  00FB               	movwf	___xxtofl@arg+1
  4860     002A  0870               	movf	___xxtofl@val,w
  4861     002B  00FA               	movwf	___xxtofl@arg
  4862     002C                     l775:
  4863     002C  0873               	movf	___xxtofl@val+3,w
  4864     002D  0472               	iorwf	___xxtofl@val+2,w
  4865     002E  0471               	iorwf	___xxtofl@val+1,w
  4866     002F  0470               	iorwf	___xxtofl@val,w
  4867     0030  1D03               	skipz
  4868     0031  2833               	goto	u2911
  4869     0032  2834               	goto	u2910
  4870     0033                     u2911:
  4871     0033  283D               	goto	l776
  4872     0034                     u2910:
  4873     0034                     l2614:
  4874     0034  3000               	movlw	0
  4875     0035  00F3               	movwf	?___xxtofl+3
  4876     0036  3000               	movlw	0
  4877     0037  00F2               	movwf	?___xxtofl+2
  4878     0038  3000               	movlw	0
  4879     0039  00F1               	movwf	?___xxtofl+1
  4880     003A  3000               	movlw	0
  4881     003B  00F0               	movwf	?___xxtofl
  4882     003C  28BD               	goto	l777
  4883     003D                     l776:
  4884     003D  3096               	movlw	150
  4885     003E  00F9               	movwf	___xxtofl@exp
  4886     003F  284B               	goto	l2620
  4887     0040                     l2618:
  4888     0040  3001               	movlw	1
  4889     0041  07F9               	addwf	___xxtofl@exp,f
  4890     0042  3001               	movlw	1
  4891     0043                     u2925:
  4892     0043  1003               	clrc
  4893     0044  0CFD               	rrf	___xxtofl@arg+3,f
  4894     0045  0CFC               	rrf	___xxtofl@arg+2,f
  4895     0046  0CFB               	rrf	___xxtofl@arg+1,f
  4896     0047  0CFA               	rrf	___xxtofl@arg,f
  4897     0048  3EFF               	addlw	-1
  4898     0049  1D03               	skipz
  4899     004A  2843               	goto	u2925
  4900     004B                     l2620:
  4901     004B  30FE               	movlw	254
  4902     004C  057D               	andwf	___xxtofl@arg+3,w
  4903     004D  1D03               	btfss	3,2
  4904     004E  2850               	goto	u2931
  4905     004F  2851               	goto	u2930
  4906     0050                     u2931:
  4907     0050  2840               	goto	l2618
  4908     0051                     u2930:
  4909     0051  286B               	goto	l781
  4910     0052                     l2622:
  4911     0052  3001               	movlw	1
  4912     0053  07F9               	addwf	___xxtofl@exp,f
  4913     0054                     l2624:
  4914     0054  3001               	movlw	1
  4915     0055  07FA               	addwf	___xxtofl@arg,f
  4916     0056  3000               	movlw	0
  4917     0057  1803               	skipnc
  4918     0058  3001               	movlw	1
  4919     0059  07FB               	addwf	___xxtofl@arg+1,f
  4920     005A  3000               	movlw	0
  4921     005B  1803               	skipnc
  4922     005C  3001               	movlw	1
  4923     005D  07FC               	addwf	___xxtofl@arg+2,f
  4924     005E  3000               	movlw	0
  4925     005F  1803               	skipnc
  4926     0060  3001               	movlw	1
  4927     0061  07FD               	addwf	___xxtofl@arg+3,f
  4928     0062                     l2626:
  4929     0062  3001               	movlw	1
  4930     0063                     u2945:
  4931     0063  1003               	clrc
  4932     0064  0CFD               	rrf	___xxtofl@arg+3,f
  4933     0065  0CFC               	rrf	___xxtofl@arg+2,f
  4934     0066  0CFB               	rrf	___xxtofl@arg+1,f
  4935     0067  0CFA               	rrf	___xxtofl@arg,f
  4936     0068  3EFF               	addlw	-1
  4937     0069  1D03               	skipz
  4938     006A  2863               	goto	u2945
  4939     006B                     l781:
  4940     006B  30FF               	movlw	255
  4941     006C  057D               	andwf	___xxtofl@arg+3,w
  4942     006D  1D03               	btfss	3,2
  4943     006E  2870               	goto	u2951
  4944     006F  2871               	goto	u2950
  4945     0070                     u2951:
  4946     0070  2852               	goto	l2622
  4947     0071                     u2950:
  4948     0071  287D               	goto	l2630
  4949     0072                     l2628:
  4950     0072  3001               	movlw	1
  4951     0073  02F9               	subwf	___xxtofl@exp,f
  4952     0074  3001               	movlw	1
  4953     0075  00F4               	movwf	??___xxtofl
  4954     0076                     u2965:
  4955     0076  1003               	clrc
  4956     0077  0DFA               	rlf	___xxtofl@arg,f
  4957     0078  0DFB               	rlf	___xxtofl@arg+1,f
  4958     0079  0DFC               	rlf	___xxtofl@arg+2,f
  4959     007A  0DFD               	rlf	___xxtofl@arg+3,f
  4960     007B  0BF4               	decfsz	??___xxtofl,f
  4961     007C  2876               	goto	u2965
  4962     007D                     l2630:
  4963     007D  1BFC               	btfsc	___xxtofl@arg+2,7
  4964     007E  2880               	goto	u2971
  4965     007F  2881               	goto	u2970
  4966     0080                     u2971:
  4967     0080  2887               	goto	l788
  4968     0081                     u2970:
  4969     0081                     l2632:
  4970     0081  3002               	movlw	2
  4971     0082  0279               	subwf	___xxtofl@exp,w
  4972     0083  1803               	skipnc
  4973     0084  2886               	goto	u2981
  4974     0085  2887               	goto	u2980
  4975     0086                     u2981:
  4976     0086  2872               	goto	l2628
  4977     0087                     u2980:
  4978     0087                     l788:
  4979     0087  1879               	btfsc	___xxtofl@exp,0
  4980     0088  288A               	goto	u2991
  4981     0089  288B               	goto	u2990
  4982     008A                     u2991:
  4983     008A  2893               	goto	l789
  4984     008B                     u2990:
  4985     008B                     l2634:
  4986     008B  30FF               	movlw	255
  4987     008C  05FA               	andwf	___xxtofl@arg,f
  4988     008D  30FF               	movlw	255
  4989     008E  05FB               	andwf	___xxtofl@arg+1,f
  4990     008F  307F               	movlw	127
  4991     0090  05FC               	andwf	___xxtofl@arg+2,f
  4992     0091  30FF               	movlw	255
  4993     0092  05FD               	andwf	___xxtofl@arg+3,f
  4994     0093                     l789:
  4995     0093  1003               	clrc
  4996     0094  0CF9               	rrf	___xxtofl@exp,f
  4997     0095                     l2636:
  4998     0095  0879               	movf	___xxtofl@exp,w
  4999     0096  00F4               	movwf	??___xxtofl
  5000     0097  01F5               	clrf	??___xxtofl+1
  5001     0098  01F6               	clrf	??___xxtofl+2
  5002     0099  01F7               	clrf	??___xxtofl+3
  5003     009A  3018               	movlw	24
  5004     009B                     u3005:
  5005     009B  1003               	clrc
  5006     009C  0DF4               	rlf	??___xxtofl,f
  5007     009D  0DF5               	rlf	??___xxtofl+1,f
  5008     009E  0DF6               	rlf	??___xxtofl+2,f
  5009     009F  0DF7               	rlf	??___xxtofl+3,f
  5010     00A0                     u3000:
  5011     00A0  3EFF               	addlw	-1
  5012     00A1  1D03               	skipz
  5013     00A2  289B               	goto	u3005
  5014     00A3  0874               	movf	??___xxtofl,w
  5015     00A4  04FA               	iorwf	___xxtofl@arg,f
  5016     00A5  0875               	movf	??___xxtofl+1,w
  5017     00A6  04FB               	iorwf	___xxtofl@arg+1,f
  5018     00A7  0876               	movf	??___xxtofl+2,w
  5019     00A8  04FC               	iorwf	___xxtofl@arg+2,f
  5020     00A9  0877               	movf	??___xxtofl+3,w
  5021     00AA  04FD               	iorwf	___xxtofl@arg+3,f
  5022     00AB                     l2638:
  5023     00AB  0878               	movf	___xxtofl@sign,w
  5024     00AC  1903               	btfsc	3,2
  5025     00AD  28AF               	goto	u3011
  5026     00AE  28B0               	goto	u3010
  5027     00AF                     u3011:
  5028     00AF  28B5               	goto	l2644
  5029     00B0                     u3010:
  5030     00B0                     l2640:
  5031     00B0  1FF3               	btfss	___xxtofl@val+3,7
  5032     00B1  28B3               	goto	u3021
  5033     00B2  28B4               	goto	u3020
  5034     00B3                     u3021:
  5035     00B3  28B5               	goto	l2644
  5036     00B4                     u3020:
  5037     00B4                     l2642:
  5038     00B4  17FD               	bsf	___xxtofl@arg+3,7
  5039     00B5                     l2644:
  5040     00B5  087D               	movf	___xxtofl@arg+3,w
  5041     00B6  00F3               	movwf	?___xxtofl+3
  5042     00B7  087C               	movf	___xxtofl@arg+2,w
  5043     00B8  00F2               	movwf	?___xxtofl+2
  5044     00B9  087B               	movf	___xxtofl@arg+1,w
  5045     00BA  00F1               	movwf	?___xxtofl+1
  5046     00BB  087A               	movf	___xxtofl@arg,w
  5047     00BC  00F0               	movwf	?___xxtofl
  5048     00BD                     l777:
  5049     00BD  0008               	return
  5050     00BE                     __end_of___xxtofl:
  5051                           
  5052                           	psect	text19
  5053     0E0F                     __ptext19:	
  5054 ;; *************** function ___fltol *****************
  5055 ;; Defined at:
  5056 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  f1              4   26[BANK0 ] unsigned char 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  exp1            1   35[BANK0 ] unsigned char 
  5061 ;;  sign1           1   34[BANK0 ] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  4   26[BANK0 ] long 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5071 ;;      Params:         0       4       0       0       0
  5072 ;;      Locals:         0       2       0       0       0
  5073 ;;      Temps:          0       4       0       0       0
  5074 ;;      Totals:         0      10       0       0       0
  5075 ;;Total ram usage:       10 bytes
  5076 ;; Hardware stack levels used: 1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_main
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084     0E0F                     ___fltol:	
  5085                           ;psect for function ___fltol
  5086                           
  5087     0E0F                     l2428:	
  5088                           ;incstack = 0
  5089                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5090                           
  5091     0E0F  1003               	clrc
  5092     0E10  1283               	bcf	3,5	;RP0=0, select bank0
  5093     0E11  1303               	bcf	3,6	;RP1=0, select bank0
  5094     0E12  0D3C               	rlf	___fltol@f1+2,w
  5095     0E13  0D3D               	rlf	___fltol@f1+3,w
  5096     0E14  00C3               	movwf	___fltol@exp1
  5097     0E15  0843               	movf	___fltol@exp1,w
  5098     0E16  1D03               	btfss	3,2
  5099     0E17  2E19               	goto	u2421
  5100     0E18  2E1A               	goto	u2420
  5101     0E19                     u2421:
  5102     0E19  2E23               	goto	l2434
  5103     0E1A                     u2420:
  5104     0E1A                     l2430:
  5105     0E1A  3000               	movlw	0
  5106     0E1B  00BD               	movwf	?___fltol+3
  5107     0E1C  3000               	movlw	0
  5108     0E1D  00BC               	movwf	?___fltol+2
  5109     0E1E  3000               	movlw	0
  5110     0E1F  00BB               	movwf	?___fltol+1
  5111     0E20  3000               	movlw	0
  5112     0E21  00BA               	movwf	?___fltol
  5113     0E22  2E84               	goto	l528
  5114     0E23                     l2434:
  5115     0E23  083A               	movf	___fltol@f1,w
  5116     0E24  00BE               	movwf	??___fltol
  5117     0E25  083B               	movf	___fltol@f1+1,w
  5118     0E26  00BF               	movwf	??___fltol+1
  5119     0E27  083C               	movf	___fltol@f1+2,w
  5120     0E28  00C0               	movwf	??___fltol+2
  5121     0E29  083D               	movf	___fltol@f1+3,w
  5122     0E2A  00C1               	movwf	??___fltol+3
  5123     0E2B  301F               	movlw	31
  5124     0E2C                     u2435:
  5125     0E2C  1003               	clrc
  5126     0E2D  0CC1               	rrf	??___fltol+3,f
  5127     0E2E  0CC0               	rrf	??___fltol+2,f
  5128     0E2F  0CBF               	rrf	??___fltol+1,f
  5129     0E30  0CBE               	rrf	??___fltol,f
  5130     0E31                     u2430:
  5131     0E31  3EFF               	addlw	-1
  5132     0E32  1D03               	skipz
  5133     0E33  2E2C               	goto	u2435
  5134     0E34  083E               	movf	??___fltol,w
  5135     0E35  00C2               	movwf	___fltol@sign1
  5136     0E36                     l2436:
  5137     0E36  17BC               	bsf	___fltol@f1+2,7
  5138     0E37                     l2438:
  5139     0E37  30FF               	movlw	255
  5140     0E38  05BA               	andwf	___fltol@f1,f
  5141     0E39  30FF               	movlw	255
  5142     0E3A  05BB               	andwf	___fltol@f1+1,f
  5143     0E3B  30FF               	movlw	255
  5144     0E3C  05BC               	andwf	___fltol@f1+2,f
  5145     0E3D  3000               	movlw	0
  5146     0E3E  05BD               	andwf	___fltol@f1+3,f
  5147     0E3F                     l2440:
  5148     0E3F  3096               	movlw	150
  5149     0E40  02C3               	subwf	___fltol@exp1,f
  5150     0E41                     l2442:
  5151     0E41  1FC3               	btfss	___fltol@exp1,7
  5152     0E42  2E44               	goto	u2441
  5153     0E43  2E45               	goto	u2440
  5154     0E44                     u2441:
  5155     0E44  2E5D               	goto	l2452
  5156     0E45                     u2440:
  5157     0E45                     l2444:
  5158     0E45  0843               	movf	___fltol@exp1,w
  5159     0E46  3A80               	xorlw	128
  5160     0E47  3E97               	addlw	151
  5161     0E48  1803               	skipnc
  5162     0E49  2E4B               	goto	u2451
  5163     0E4A  2E4C               	goto	u2450
  5164     0E4B                     u2451:
  5165     0E4B  2E4D               	goto	l2450
  5166     0E4C                     u2450:
  5167     0E4C  2E1A               	goto	l2430
  5168     0E4D                     l2450:
  5169     0E4D  3001               	movlw	1
  5170     0E4E                     u2465:
  5171     0E4E  1003               	clrc
  5172     0E4F  0CBD               	rrf	___fltol@f1+3,f
  5173     0E50  0CBC               	rrf	___fltol@f1+2,f
  5174     0E51  0CBB               	rrf	___fltol@f1+1,f
  5175     0E52  0CBA               	rrf	___fltol@f1,f
  5176     0E53  3EFF               	addlw	-1
  5177     0E54  1D03               	skipz
  5178     0E55  2E4E               	goto	u2465
  5179     0E56  3001               	movlw	1
  5180     0E57  07C3               	addwf	___fltol@exp1,f
  5181     0E58  1D03               	btfss	3,2
  5182     0E59  2E5B               	goto	u2471
  5183     0E5A  2E5C               	goto	u2470
  5184     0E5B                     u2471:
  5185     0E5B  2E4D               	goto	l2450
  5186     0E5C                     u2470:
  5187     0E5C  2E74               	goto	l2460
  5188     0E5D                     l2452:
  5189     0E5D  3020               	movlw	32
  5190     0E5E  0243               	subwf	___fltol@exp1,w
  5191     0E5F  1C03               	skipc
  5192     0E60  2E62               	goto	u2481
  5193     0E61  2E63               	goto	u2480
  5194     0E62                     u2481:
  5195     0E62  2E6F               	goto	l535
  5196     0E63                     u2480:
  5197     0E63  2E1A               	goto	l2430
  5198     0E64                     l2458:
  5199     0E64  3001               	movlw	1
  5200     0E65  00BE               	movwf	??___fltol
  5201     0E66                     u2495:
  5202     0E66  1003               	clrc
  5203     0E67  0DBA               	rlf	___fltol@f1,f
  5204     0E68  0DBB               	rlf	___fltol@f1+1,f
  5205     0E69  0DBC               	rlf	___fltol@f1+2,f
  5206     0E6A  0DBD               	rlf	___fltol@f1+3,f
  5207     0E6B  0BBE               	decfsz	??___fltol,f
  5208     0E6C  2E66               	goto	u2495
  5209     0E6D  3001               	movlw	1
  5210     0E6E  02C3               	subwf	___fltol@exp1,f
  5211     0E6F                     l535:
  5212     0E6F  0843               	movf	___fltol@exp1,w
  5213     0E70  1D03               	btfss	3,2
  5214     0E71  2E73               	goto	u2501
  5215     0E72  2E74               	goto	u2500
  5216     0E73                     u2501:
  5217     0E73  2E64               	goto	l2458
  5218     0E74                     u2500:
  5219     0E74                     l2460:
  5220     0E74  0842               	movf	___fltol@sign1,w
  5221     0E75  1903               	btfsc	3,2
  5222     0E76  2E78               	goto	u2511
  5223     0E77  2E79               	goto	u2510
  5224     0E78                     u2511:
  5225     0E78  2E84               	goto	l538
  5226     0E79                     u2510:
  5227     0E79                     l2462:
  5228     0E79  09BA               	comf	___fltol@f1,f
  5229     0E7A  09BB               	comf	___fltol@f1+1,f
  5230     0E7B  09BC               	comf	___fltol@f1+2,f
  5231     0E7C  09BD               	comf	___fltol@f1+3,f
  5232     0E7D  0ABA               	incf	___fltol@f1,f
  5233     0E7E  1903               	skipnz
  5234     0E7F  0ABB               	incf	___fltol@f1+1,f
  5235     0E80  1903               	skipnz
  5236     0E81  0ABC               	incf	___fltol@f1+2,f
  5237     0E82  1903               	skipnz
  5238     0E83  0ABD               	incf	___fltol@f1+3,f
  5239     0E84                     l538:
  5240     0E84                     l528:
  5241     0E84  0008               	return
  5242     0E85                     __end_of___fltol:
  5243                           
  5244                           	psect	text20
  5245     0498                     __ptext20:	
  5246 ;; *************** function ___flmul *****************
  5247 ;; Defined at:
  5248 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcmul.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  b               4    0[BANK0 ] long 
  5251 ;;  a               4    4[BANK0 ] long 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  prod            4   20[BANK0 ] struct .
  5254 ;;  grs             4   14[BANK0 ] unsigned long 
  5255 ;;  temp            2   24[BANK0 ] struct .
  5256 ;;  bexp            1   19[BANK0 ] unsigned char 
  5257 ;;  aexp            1   18[BANK0 ] unsigned char 
  5258 ;;  sign            1   13[BANK0 ] unsigned char 
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  4    0[BANK0 ] unsigned char 
  5261 ;; Registers used:
  5262 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5268 ;;      Params:         0       8       0       0       0
  5269 ;;      Locals:         0      13       0       0       0
  5270 ;;      Temps:          0       5       0       0       0
  5271 ;;      Totals:         0      26       0       0       0
  5272 ;;Total ram usage:       26 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 1
  5275 ;; This function calls:
  5276 ;;		__Umul8_16
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282     0498                     ___flmul:	
  5283                           ;psect for function ___flmul
  5284                           
  5285     0498                     l2464:	
  5286                           ;incstack = 0
  5287                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5288                           
  5289     0498  1283               	bcf	3,5	;RP0=0, select bank0
  5290     0499  1303               	bcf	3,6	;RP1=0, select bank0
  5291     049A  0823               	movf	___flmul@b+3,w
  5292     049B  00AD               	movwf	___flmul@sign
  5293     049C                     l2466:
  5294     049C  3080               	movlw	128
  5295     049D  05AD               	andwf	___flmul@sign,f
  5296     049E                     l2468:
  5297     049E  0823               	movf	___flmul@b+3,w
  5298     049F  00A8               	movwf	??___flmul
  5299     04A0  0728               	addwf	??___flmul,w
  5300     04A1  00B3               	movwf	___flmul@bexp
  5301     04A2                     l2470:
  5302     04A2  1FA2               	btfss	___flmul@b+2,7
  5303     04A3  2CA5               	goto	u2521
  5304     04A4  2CA6               	goto	u2520
  5305     04A5                     u2521:
  5306     04A5  2CA7               	goto	l2474
  5307     04A6                     u2520:
  5308     04A6                     l2472:
  5309     04A6  1433               	bsf	___flmul@bexp,0
  5310     04A7                     l2474:
  5311     04A7  0833               	movf	___flmul@bexp,w
  5312     04A8  1903               	btfsc	3,2
  5313     04A9  2CAB               	goto	u2531
  5314     04AA  2CAC               	goto	u2530
  5315     04AB                     u2531:
  5316     04AB  2CBB               	goto	l2482
  5317     04AC                     u2530:
  5318     04AC                     l2476:
  5319     04AC  0A33               	incf	___flmul@bexp,w
  5320     04AD  1D03               	btfss	3,2
  5321     04AE  2CB0               	goto	u2541
  5322     04AF  2CB1               	goto	u2540
  5323     04B0                     u2541:
  5324     04B0  2CB9               	goto	l2480
  5325     04B1                     u2540:
  5326     04B1                     l2478:
  5327     04B1  3000               	movlw	0
  5328     04B2  00A3               	movwf	___flmul@b+3
  5329     04B3  3000               	movlw	0
  5330     04B4  00A2               	movwf	___flmul@b+2
  5331     04B5  3000               	movlw	0
  5332     04B6  00A1               	movwf	___flmul@b+1
  5333     04B7  3000               	movlw	0
  5334     04B8  00A0               	movwf	___flmul@b
  5335     04B9                     l2480:
  5336     04B9  17A2               	bsf	___flmul@b+2,7
  5337     04BA  2CC3               	goto	l2484
  5338     04BB                     l2482:
  5339     04BB  3000               	movlw	0
  5340     04BC  00A3               	movwf	___flmul@b+3
  5341     04BD  3000               	movlw	0
  5342     04BE  00A2               	movwf	___flmul@b+2
  5343     04BF  3000               	movlw	0
  5344     04C0  00A1               	movwf	___flmul@b+1
  5345     04C1  3000               	movlw	0
  5346     04C2  00A0               	movwf	___flmul@b
  5347     04C3                     l2484:
  5348     04C3  0827               	movf	___flmul@a+3,w
  5349     04C4  3980               	andlw	128
  5350     04C5  06AD               	xorwf	___flmul@sign,f
  5351     04C6                     l2486:
  5352     04C6  0827               	movf	___flmul@a+3,w
  5353     04C7  00A8               	movwf	??___flmul
  5354     04C8  0728               	addwf	??___flmul,w
  5355     04C9  00B2               	movwf	___flmul@aexp
  5356     04CA                     l2488:
  5357     04CA  1FA6               	btfss	___flmul@a+2,7
  5358     04CB  2CCD               	goto	u2551
  5359     04CC  2CCE               	goto	u2550
  5360     04CD                     u2551:
  5361     04CD  2CCF               	goto	l2492
  5362     04CE                     u2550:
  5363     04CE                     l2490:
  5364     04CE  1432               	bsf	___flmul@aexp,0
  5365     04CF                     l2492:
  5366     04CF  0832               	movf	___flmul@aexp,w
  5367     04D0  1903               	btfsc	3,2
  5368     04D1  2CD3               	goto	u2561
  5369     04D2  2CD4               	goto	u2560
  5370     04D3                     u2561:
  5371     04D3  2CE3               	goto	l2500
  5372     04D4                     u2560:
  5373     04D4                     l2494:
  5374     04D4  0A32               	incf	___flmul@aexp,w
  5375     04D5  1D03               	btfss	3,2
  5376     04D6  2CD8               	goto	u2571
  5377     04D7  2CD9               	goto	u2570
  5378     04D8                     u2571:
  5379     04D8  2CE1               	goto	l2498
  5380     04D9                     u2570:
  5381     04D9                     l2496:
  5382     04D9  3000               	movlw	0
  5383     04DA  00A7               	movwf	___flmul@a+3
  5384     04DB  3000               	movlw	0
  5385     04DC  00A6               	movwf	___flmul@a+2
  5386     04DD  3000               	movlw	0
  5387     04DE  00A5               	movwf	___flmul@a+1
  5388     04DF  3000               	movlw	0
  5389     04E0  00A4               	movwf	___flmul@a
  5390     04E1                     l2498:
  5391     04E1  17A6               	bsf	___flmul@a+2,7
  5392     04E2  2CEB               	goto	l2502
  5393     04E3                     l2500:
  5394     04E3  3000               	movlw	0
  5395     04E4  00A7               	movwf	___flmul@a+3
  5396     04E5  3000               	movlw	0
  5397     04E6  00A6               	movwf	___flmul@a+2
  5398     04E7  3000               	movlw	0
  5399     04E8  00A5               	movwf	___flmul@a+1
  5400     04E9  3000               	movlw	0
  5401     04EA  00A4               	movwf	___flmul@a
  5402     04EB                     l2502:
  5403     04EB  0832               	movf	___flmul@aexp,w
  5404     04EC  1903               	btfsc	3,2
  5405     04ED  2CEF               	goto	u2581
  5406     04EE  2CF0               	goto	u2580
  5407     04EF                     u2581:
  5408     04EF  2CF5               	goto	l2506
  5409     04F0                     u2580:
  5410     04F0                     l2504:
  5411     04F0  0833               	movf	___flmul@bexp,w
  5412     04F1  1D03               	btfss	3,2
  5413     04F2  2CF4               	goto	u2591
  5414     04F3  2CF5               	goto	u2590
  5415     04F4                     u2591:
  5416     04F4  2CFE               	goto	l2510
  5417     04F5                     u2590:
  5418     04F5                     l2506:
  5419     04F5  3000               	movlw	0
  5420     04F6  00A3               	movwf	?___flmul+3
  5421     04F7  3000               	movlw	0
  5422     04F8  00A2               	movwf	?___flmul+2
  5423     04F9  3000               	movlw	0
  5424     04FA  00A1               	movwf	?___flmul+1
  5425     04FB  3000               	movlw	0
  5426     04FC  00A0               	movwf	?___flmul
  5427     04FD  2FD9               	goto	l731
  5428     04FE                     l2510:
  5429     04FE  0820               	movf	___flmul@b,w
  5430     04FF  00F0               	movwf	__Umul8_16@multiplicand
  5431     0500  0826               	movf	___flmul@a+2,w
  5432     0501  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5433     0506  0871               	movf	?__Umul8_16+1,w
  5434     0507  1283               	bcf	3,5	;RP0=0, select bank0
  5435     0508  1303               	bcf	3,6	;RP1=0, select bank0
  5436     0509  00B9               	movwf	___flmul@temp+1
  5437     050A  0870               	movf	?__Umul8_16,w
  5438     050B  00B8               	movwf	___flmul@temp
  5439     050C                     l2512:
  5440     050C  0838               	movf	___flmul@temp,w
  5441     050D  00A8               	movwf	??___flmul
  5442     050E  01A9               	clrf	??___flmul+1
  5443     050F  01AA               	clrf	??___flmul+2
  5444     0510  01AB               	clrf	??___flmul+3
  5445     0511  082B               	movf	??___flmul+3,w
  5446     0512  00B1               	movwf	___flmul@grs+3
  5447     0513  082A               	movf	??___flmul+2,w
  5448     0514  00B0               	movwf	___flmul@grs+2
  5449     0515  0829               	movf	??___flmul+1,w
  5450     0516  00AF               	movwf	___flmul@grs+1
  5451     0517  0828               	movf	??___flmul,w
  5452     0518  00AE               	movwf	___flmul@grs
  5453     0519                     l2514:
  5454     0519  0839               	movf	___flmul@temp+1,w
  5455     051A  00A8               	movwf	??___flmul
  5456     051B  01A9               	clrf	??___flmul+1
  5457     051C  01AA               	clrf	??___flmul+2
  5458     051D  01AB               	clrf	??___flmul+3
  5459     051E  082B               	movf	??___flmul+3,w
  5460     051F  00B7               	movwf	___flmul@prod+3
  5461     0520  082A               	movf	??___flmul+2,w
  5462     0521  00B6               	movwf	___flmul@prod+2
  5463     0522  0829               	movf	??___flmul+1,w
  5464     0523  00B5               	movwf	___flmul@prod+1
  5465     0524  0828               	movf	??___flmul,w
  5466     0525  00B4               	movwf	___flmul@prod
  5467     0526  0821               	movf	___flmul@b+1,w
  5468     0527  00F0               	movwf	__Umul8_16@multiplicand
  5469     0528  0825               	movf	___flmul@a+1,w
  5470     0529  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5471     052E  0871               	movf	?__Umul8_16+1,w
  5472     052F  1283               	bcf	3,5	;RP0=0, select bank0
  5473     0530  1303               	bcf	3,6	;RP1=0, select bank0
  5474     0531  00B9               	movwf	___flmul@temp+1
  5475     0532  0870               	movf	?__Umul8_16,w
  5476     0533  00B8               	movwf	___flmul@temp
  5477     0534                     l2516:
  5478     0534  0838               	movf	___flmul@temp,w
  5479     0535  00A8               	movwf	??___flmul
  5480     0536  01A9               	clrf	??___flmul+1
  5481     0537  01AA               	clrf	??___flmul+2
  5482     0538  01AB               	clrf	??___flmul+3
  5483     0539  0828               	movf	??___flmul,w
  5484     053A  07AE               	addwf	___flmul@grs,f
  5485     053B  0829               	movf	??___flmul+1,w
  5486     053C  1103               	clrz
  5487     053D  1803               	skipnc
  5488     053E  3E01               	addlw	1
  5489     053F  1903               	skipnz
  5490     0540  2D42               	goto	u2601
  5491     0541  07AF               	addwf	___flmul@grs+1,f
  5492     0542                     u2601:
  5493     0542  082A               	movf	??___flmul+2,w
  5494     0543  1103               	clrz
  5495     0544  1803               	skipnc
  5496     0545  3E01               	addlw	1
  5497     0546  1903               	skipnz
  5498     0547  2D49               	goto	u2602
  5499     0548  07B0               	addwf	___flmul@grs+2,f
  5500     0549                     u2602:
  5501     0549  082B               	movf	??___flmul+3,w
  5502     054A  1103               	clrz
  5503     054B  1803               	skipnc
  5504     054C  3E01               	addlw	1
  5505     054D  1903               	skipnz
  5506     054E  2D50               	goto	u2603
  5507     054F  07B1               	addwf	___flmul@grs+3,f
  5508     0550                     u2603:
  5509     0550                     l2518:
  5510     0550  0839               	movf	___flmul@temp+1,w
  5511     0551  00A8               	movwf	??___flmul
  5512     0552  01A9               	clrf	??___flmul+1
  5513     0553  01AA               	clrf	??___flmul+2
  5514     0554  01AB               	clrf	??___flmul+3
  5515     0555  0828               	movf	??___flmul,w
  5516     0556  07B4               	addwf	___flmul@prod,f
  5517     0557  0829               	movf	??___flmul+1,w
  5518     0558  1103               	clrz
  5519     0559  1803               	skipnc
  5520     055A  3E01               	addlw	1
  5521     055B  1903               	skipnz
  5522     055C  2D5E               	goto	u2611
  5523     055D  07B5               	addwf	___flmul@prod+1,f
  5524     055E                     u2611:
  5525     055E  082A               	movf	??___flmul+2,w
  5526     055F  1103               	clrz
  5527     0560  1803               	skipnc
  5528     0561  3E01               	addlw	1
  5529     0562  1903               	skipnz
  5530     0563  2D65               	goto	u2612
  5531     0564  07B6               	addwf	___flmul@prod+2,f
  5532     0565                     u2612:
  5533     0565  082B               	movf	??___flmul+3,w
  5534     0566  1103               	clrz
  5535     0567  1803               	skipnc
  5536     0568  3E01               	addlw	1
  5537     0569  1903               	skipnz
  5538     056A  2D6C               	goto	u2613
  5539     056B  07B7               	addwf	___flmul@prod+3,f
  5540     056C                     u2613:
  5541     056C  0822               	movf	___flmul@b+2,w
  5542     056D  00F0               	movwf	__Umul8_16@multiplicand
  5543     056E  0824               	movf	___flmul@a,w
  5544     056F  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5545     0574  0871               	movf	?__Umul8_16+1,w
  5546     0575  1283               	bcf	3,5	;RP0=0, select bank0
  5547     0576  1303               	bcf	3,6	;RP1=0, select bank0
  5548     0577  00B9               	movwf	___flmul@temp+1
  5549     0578  0870               	movf	?__Umul8_16,w
  5550     0579  00B8               	movwf	___flmul@temp
  5551     057A                     l2520:
  5552     057A  0838               	movf	___flmul@temp,w
  5553     057B  00A8               	movwf	??___flmul
  5554     057C  01A9               	clrf	??___flmul+1
  5555     057D  01AA               	clrf	??___flmul+2
  5556     057E  01AB               	clrf	??___flmul+3
  5557     057F  0828               	movf	??___flmul,w
  5558     0580  07AE               	addwf	___flmul@grs,f
  5559     0581  0829               	movf	??___flmul+1,w
  5560     0582  1103               	clrz
  5561     0583  1803               	skipnc
  5562     0584  3E01               	addlw	1
  5563     0585  1903               	skipnz
  5564     0586  2D88               	goto	u2621
  5565     0587  07AF               	addwf	___flmul@grs+1,f
  5566     0588                     u2621:
  5567     0588  082A               	movf	??___flmul+2,w
  5568     0589  1103               	clrz
  5569     058A  1803               	skipnc
  5570     058B  3E01               	addlw	1
  5571     058C  1903               	skipnz
  5572     058D  2D8F               	goto	u2622
  5573     058E  07B0               	addwf	___flmul@grs+2,f
  5574     058F                     u2622:
  5575     058F  082B               	movf	??___flmul+3,w
  5576     0590  1103               	clrz
  5577     0591  1803               	skipnc
  5578     0592  3E01               	addlw	1
  5579     0593  1903               	skipnz
  5580     0594  2D96               	goto	u2623
  5581     0595  07B1               	addwf	___flmul@grs+3,f
  5582     0596                     u2623:
  5583     0596                     l2522:
  5584     0596  0839               	movf	___flmul@temp+1,w
  5585     0597  00A8               	movwf	??___flmul
  5586     0598  01A9               	clrf	??___flmul+1
  5587     0599  01AA               	clrf	??___flmul+2
  5588     059A  01AB               	clrf	??___flmul+3
  5589     059B  0828               	movf	??___flmul,w
  5590     059C  07B4               	addwf	___flmul@prod,f
  5591     059D  0829               	movf	??___flmul+1,w
  5592     059E  1103               	clrz
  5593     059F  1803               	skipnc
  5594     05A0  3E01               	addlw	1
  5595     05A1  1903               	skipnz
  5596     05A2  2DA4               	goto	u2631
  5597     05A3  07B5               	addwf	___flmul@prod+1,f
  5598     05A4                     u2631:
  5599     05A4  082A               	movf	??___flmul+2,w
  5600     05A5  1103               	clrz
  5601     05A6  1803               	skipnc
  5602     05A7  3E01               	addlw	1
  5603     05A8  1903               	skipnz
  5604     05A9  2DAB               	goto	u2632
  5605     05AA  07B6               	addwf	___flmul@prod+2,f
  5606     05AB                     u2632:
  5607     05AB  082B               	movf	??___flmul+3,w
  5608     05AC  1103               	clrz
  5609     05AD  1803               	skipnc
  5610     05AE  3E01               	addlw	1
  5611     05AF  1903               	skipnz
  5612     05B0  2DB2               	goto	u2633
  5613     05B1  07B7               	addwf	___flmul@prod+3,f
  5614     05B2                     u2633:
  5615     05B2                     l2524:
  5616     05B2  3008               	movlw	8
  5617     05B3  00A8               	movwf	??___flmul
  5618     05B4                     u2645:
  5619     05B4  1003               	clrc
  5620     05B5  0DAE               	rlf	___flmul@grs,f
  5621     05B6  0DAF               	rlf	___flmul@grs+1,f
  5622     05B7  0DB0               	rlf	___flmul@grs+2,f
  5623     05B8  0DB1               	rlf	___flmul@grs+3,f
  5624     05B9  0BA8               	decfsz	??___flmul,f
  5625     05BA  2DB4               	goto	u2645
  5626     05BB                     l2526:
  5627     05BB  0821               	movf	___flmul@b+1,w
  5628     05BC  00F0               	movwf	__Umul8_16@multiplicand
  5629     05BD  0824               	movf	___flmul@a,w
  5630     05BE  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5631     05C3  0871               	movf	?__Umul8_16+1,w
  5632     05C4  1283               	bcf	3,5	;RP0=0, select bank0
  5633     05C5  1303               	bcf	3,6	;RP1=0, select bank0
  5634     05C6  00B9               	movwf	___flmul@temp+1
  5635     05C7  0870               	movf	?__Umul8_16,w
  5636     05C8  00B8               	movwf	___flmul@temp
  5637     05C9                     l2528:
  5638     05C9  0838               	movf	___flmul@temp,w
  5639     05CA  00A8               	movwf	??___flmul
  5640     05CB  0839               	movf	___flmul@temp+1,w
  5641     05CC  00A9               	movwf	??___flmul+1
  5642     05CD  01AA               	clrf	??___flmul+2
  5643     05CE  01AB               	clrf	??___flmul+3
  5644     05CF  0828               	movf	??___flmul,w
  5645     05D0  07AE               	addwf	___flmul@grs,f
  5646     05D1  0829               	movf	??___flmul+1,w
  5647     05D2  1103               	clrz
  5648     05D3  1803               	skipnc
  5649     05D4  3E01               	addlw	1
  5650     05D5  1903               	skipnz
  5651     05D6  2DD8               	goto	u2651
  5652     05D7  07AF               	addwf	___flmul@grs+1,f
  5653     05D8                     u2651:
  5654     05D8  082A               	movf	??___flmul+2,w
  5655     05D9  1103               	clrz
  5656     05DA  1803               	skipnc
  5657     05DB  3E01               	addlw	1
  5658     05DC  1903               	skipnz
  5659     05DD  2DDF               	goto	u2652
  5660     05DE  07B0               	addwf	___flmul@grs+2,f
  5661     05DF                     u2652:
  5662     05DF  082B               	movf	??___flmul+3,w
  5663     05E0  1103               	clrz
  5664     05E1  1803               	skipnc
  5665     05E2  3E01               	addlw	1
  5666     05E3  1903               	skipnz
  5667     05E4  2DE6               	goto	u2653
  5668     05E5  07B1               	addwf	___flmul@grs+3,f
  5669     05E6                     u2653:
  5670     05E6                     l2530:
  5671     05E6  0820               	movf	___flmul@b,w
  5672     05E7  00F0               	movwf	__Umul8_16@multiplicand
  5673     05E8  0825               	movf	___flmul@a+1,w
  5674     05E9  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5675     05EE  0871               	movf	?__Umul8_16+1,w
  5676     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  5677     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  5678     05F1  00B9               	movwf	___flmul@temp+1
  5679     05F2  0870               	movf	?__Umul8_16,w
  5680     05F3  00B8               	movwf	___flmul@temp
  5681     05F4                     l2532:
  5682     05F4  0838               	movf	___flmul@temp,w
  5683     05F5  00A8               	movwf	??___flmul
  5684     05F6  0839               	movf	___flmul@temp+1,w
  5685     05F7  00A9               	movwf	??___flmul+1
  5686     05F8  01AA               	clrf	??___flmul+2
  5687     05F9  01AB               	clrf	??___flmul+3
  5688     05FA  0828               	movf	??___flmul,w
  5689     05FB  07AE               	addwf	___flmul@grs,f
  5690     05FC  0829               	movf	??___flmul+1,w
  5691     05FD  1103               	clrz
  5692     05FE  1803               	skipnc
  5693     05FF  3E01               	addlw	1
  5694     0600  1903               	skipnz
  5695     0601  2E03               	goto	u2661
  5696     0602  07AF               	addwf	___flmul@grs+1,f
  5697     0603                     u2661:
  5698     0603  082A               	movf	??___flmul+2,w
  5699     0604  1103               	clrz
  5700     0605  1803               	skipnc
  5701     0606  3E01               	addlw	1
  5702     0607  1903               	skipnz
  5703     0608  2E0A               	goto	u2662
  5704     0609  07B0               	addwf	___flmul@grs+2,f
  5705     060A                     u2662:
  5706     060A  082B               	movf	??___flmul+3,w
  5707     060B  1103               	clrz
  5708     060C  1803               	skipnc
  5709     060D  3E01               	addlw	1
  5710     060E  1903               	skipnz
  5711     060F  2E11               	goto	u2663
  5712     0610  07B1               	addwf	___flmul@grs+3,f
  5713     0611                     u2663:
  5714     0611                     l2534:
  5715     0611  3008               	movlw	8
  5716     0612  00A8               	movwf	??___flmul
  5717     0613                     u2675:
  5718     0613  1003               	clrc
  5719     0614  0DAE               	rlf	___flmul@grs,f
  5720     0615  0DAF               	rlf	___flmul@grs+1,f
  5721     0616  0DB0               	rlf	___flmul@grs+2,f
  5722     0617  0DB1               	rlf	___flmul@grs+3,f
  5723     0618  0BA8               	decfsz	??___flmul,f
  5724     0619  2E13               	goto	u2675
  5725     061A  0820               	movf	___flmul@b,w
  5726     061B  00F0               	movwf	__Umul8_16@multiplicand
  5727     061C  0824               	movf	___flmul@a,w
  5728     061D  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5729     0622  0871               	movf	?__Umul8_16+1,w
  5730     0623  1283               	bcf	3,5	;RP0=0, select bank0
  5731     0624  1303               	bcf	3,6	;RP1=0, select bank0
  5732     0625  00B9               	movwf	___flmul@temp+1
  5733     0626  0870               	movf	?__Umul8_16,w
  5734     0627  00B8               	movwf	___flmul@temp
  5735     0628                     l2536:
  5736     0628  0838               	movf	___flmul@temp,w
  5737     0629  00A8               	movwf	??___flmul
  5738     062A  0839               	movf	___flmul@temp+1,w
  5739     062B  00A9               	movwf	??___flmul+1
  5740     062C  01AA               	clrf	??___flmul+2
  5741     062D  01AB               	clrf	??___flmul+3
  5742     062E  0828               	movf	??___flmul,w
  5743     062F  07AE               	addwf	___flmul@grs,f
  5744     0630  0829               	movf	??___flmul+1,w
  5745     0631  1103               	clrz
  5746     0632  1803               	skipnc
  5747     0633  3E01               	addlw	1
  5748     0634  1903               	skipnz
  5749     0635  2E37               	goto	u2681
  5750     0636  07AF               	addwf	___flmul@grs+1,f
  5751     0637                     u2681:
  5752     0637  082A               	movf	??___flmul+2,w
  5753     0638  1103               	clrz
  5754     0639  1803               	skipnc
  5755     063A  3E01               	addlw	1
  5756     063B  1903               	skipnz
  5757     063C  2E3E               	goto	u2682
  5758     063D  07B0               	addwf	___flmul@grs+2,f
  5759     063E                     u2682:
  5760     063E  082B               	movf	??___flmul+3,w
  5761     063F  1103               	clrz
  5762     0640  1803               	skipnc
  5763     0641  3E01               	addlw	1
  5764     0642  1903               	skipnz
  5765     0643  2E45               	goto	u2683
  5766     0644  07B1               	addwf	___flmul@grs+3,f
  5767     0645                     u2683:
  5768     0645                     l2538:
  5769     0645  0821               	movf	___flmul@b+1,w
  5770     0646  00F0               	movwf	__Umul8_16@multiplicand
  5771     0647  0826               	movf	___flmul@a+2,w
  5772     0648  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5773     064D  0871               	movf	?__Umul8_16+1,w
  5774     064E  1283               	bcf	3,5	;RP0=0, select bank0
  5775     064F  1303               	bcf	3,6	;RP1=0, select bank0
  5776     0650  00B9               	movwf	___flmul@temp+1
  5777     0651  0870               	movf	?__Umul8_16,w
  5778     0652  00B8               	movwf	___flmul@temp
  5779     0653  0838               	movf	___flmul@temp,w
  5780     0654  00A8               	movwf	??___flmul
  5781     0655  0839               	movf	___flmul@temp+1,w
  5782     0656  00A9               	movwf	??___flmul+1
  5783     0657  01AA               	clrf	??___flmul+2
  5784     0658  01AB               	clrf	??___flmul+3
  5785     0659  0828               	movf	??___flmul,w
  5786     065A  07B4               	addwf	___flmul@prod,f
  5787     065B  0829               	movf	??___flmul+1,w
  5788     065C  1103               	clrz
  5789     065D  1803               	skipnc
  5790     065E  3E01               	addlw	1
  5791     065F  1903               	skipnz
  5792     0660  2E62               	goto	u2691
  5793     0661  07B5               	addwf	___flmul@prod+1,f
  5794     0662                     u2691:
  5795     0662  082A               	movf	??___flmul+2,w
  5796     0663  1103               	clrz
  5797     0664  1803               	skipnc
  5798     0665  3E01               	addlw	1
  5799     0666  1903               	skipnz
  5800     0667  2E69               	goto	u2692
  5801     0668  07B6               	addwf	___flmul@prod+2,f
  5802     0669                     u2692:
  5803     0669  082B               	movf	??___flmul+3,w
  5804     066A  1103               	clrz
  5805     066B  1803               	skipnc
  5806     066C  3E01               	addlw	1
  5807     066D  1903               	skipnz
  5808     066E  2E70               	goto	u2693
  5809     066F  07B7               	addwf	___flmul@prod+3,f
  5810     0670                     u2693:
  5811     0670                     l2540:
  5812     0670  0822               	movf	___flmul@b+2,w
  5813     0671  00F0               	movwf	__Umul8_16@multiplicand
  5814     0672  0825               	movf	___flmul@a+1,w
  5815     0673  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5816     0678  0871               	movf	?__Umul8_16+1,w
  5817     0679  1283               	bcf	3,5	;RP0=0, select bank0
  5818     067A  1303               	bcf	3,6	;RP1=0, select bank0
  5819     067B  00B9               	movwf	___flmul@temp+1
  5820     067C  0870               	movf	?__Umul8_16,w
  5821     067D  00B8               	movwf	___flmul@temp
  5822     067E                     l2542:
  5823     067E  0838               	movf	___flmul@temp,w
  5824     067F  00A8               	movwf	??___flmul
  5825     0680  0839               	movf	___flmul@temp+1,w
  5826     0681  00A9               	movwf	??___flmul+1
  5827     0682  01AA               	clrf	??___flmul+2
  5828     0683  01AB               	clrf	??___flmul+3
  5829     0684  0828               	movf	??___flmul,w
  5830     0685  07B4               	addwf	___flmul@prod,f
  5831     0686  0829               	movf	??___flmul+1,w
  5832     0687  1103               	clrz
  5833     0688  1803               	skipnc
  5834     0689  3E01               	addlw	1
  5835     068A  1903               	skipnz
  5836     068B  2E8D               	goto	u2701
  5837     068C  07B5               	addwf	___flmul@prod+1,f
  5838     068D                     u2701:
  5839     068D  082A               	movf	??___flmul+2,w
  5840     068E  1103               	clrz
  5841     068F  1803               	skipnc
  5842     0690  3E01               	addlw	1
  5843     0691  1903               	skipnz
  5844     0692  2E94               	goto	u2702
  5845     0693  07B6               	addwf	___flmul@prod+2,f
  5846     0694                     u2702:
  5847     0694  082B               	movf	??___flmul+3,w
  5848     0695  1103               	clrz
  5849     0696  1803               	skipnc
  5850     0697  3E01               	addlw	1
  5851     0698  1903               	skipnz
  5852     0699  2E9B               	goto	u2703
  5853     069A  07B7               	addwf	___flmul@prod+3,f
  5854     069B                     u2703:
  5855     069B  0822               	movf	___flmul@b+2,w
  5856     069C  00F0               	movwf	__Umul8_16@multiplicand
  5857     069D  0826               	movf	___flmul@a+2,w
  5858     069E  120A  158A  225B  120A  118A  	fcall	__Umul8_16
  5859     06A3  0871               	movf	?__Umul8_16+1,w
  5860     06A4  1283               	bcf	3,5	;RP0=0, select bank0
  5861     06A5  1303               	bcf	3,6	;RP1=0, select bank0
  5862     06A6  00B9               	movwf	___flmul@temp+1
  5863     06A7  0870               	movf	?__Umul8_16,w
  5864     06A8  00B8               	movwf	___flmul@temp
  5865     06A9                     l2544:
  5866     06A9  0838               	movf	___flmul@temp,w
  5867     06AA  00A8               	movwf	??___flmul
  5868     06AB  0839               	movf	___flmul@temp+1,w
  5869     06AC  00A9               	movwf	??___flmul+1
  5870     06AD  01AA               	clrf	??___flmul+2
  5871     06AE  01AB               	clrf	??___flmul+3
  5872     06AF  3008               	movlw	8
  5873     06B0                     u2715:
  5874     06B0  1003               	clrc
  5875     06B1  0DA8               	rlf	??___flmul,f
  5876     06B2  0DA9               	rlf	??___flmul+1,f
  5877     06B3  0DAA               	rlf	??___flmul+2,f
  5878     06B4  0DAB               	rlf	??___flmul+3,f
  5879     06B5                     u2710:
  5880     06B5  3EFF               	addlw	-1
  5881     06B6  1D03               	skipz
  5882     06B7  2EB0               	goto	u2715
  5883     06B8  0828               	movf	??___flmul,w
  5884     06B9  07B4               	addwf	___flmul@prod,f
  5885     06BA  0829               	movf	??___flmul+1,w
  5886     06BB  1103               	clrz
  5887     06BC  1803               	skipnc
  5888     06BD  3E01               	addlw	1
  5889     06BE  1903               	skipnz
  5890     06BF  2EC1               	goto	u2721
  5891     06C0  07B5               	addwf	___flmul@prod+1,f
  5892     06C1                     u2721:
  5893     06C1  082A               	movf	??___flmul+2,w
  5894     06C2  1103               	clrz
  5895     06C3  1803               	skipnc
  5896     06C4  3E01               	addlw	1
  5897     06C5  1903               	skipnz
  5898     06C6  2EC8               	goto	u2722
  5899     06C7  07B6               	addwf	___flmul@prod+2,f
  5900     06C8                     u2722:
  5901     06C8  082B               	movf	??___flmul+3,w
  5902     06C9  1103               	clrz
  5903     06CA  1803               	skipnc
  5904     06CB  3E01               	addlw	1
  5905     06CC  1903               	skipnz
  5906     06CD  2ECF               	goto	u2723
  5907     06CE  07B7               	addwf	___flmul@prod+3,f
  5908     06CF                     u2723:
  5909     06CF                     l2546:
  5910     06CF  082E               	movf	___flmul@grs,w
  5911     06D0  00A8               	movwf	??___flmul
  5912     06D1  082F               	movf	___flmul@grs+1,w
  5913     06D2  00A9               	movwf	??___flmul+1
  5914     06D3  0830               	movf	___flmul@grs+2,w
  5915     06D4  00AA               	movwf	??___flmul+2
  5916     06D5  0831               	movf	___flmul@grs+3,w
  5917     06D6  00AB               	movwf	??___flmul+3
  5918     06D7  3018               	movlw	24
  5919     06D8                     u2735:
  5920     06D8  1003               	clrc
  5921     06D9  0CAB               	rrf	??___flmul+3,f
  5922     06DA  0CAA               	rrf	??___flmul+2,f
  5923     06DB  0CA9               	rrf	??___flmul+1,f
  5924     06DC  0CA8               	rrf	??___flmul,f
  5925     06DD                     u2730:
  5926     06DD  3EFF               	addlw	-1
  5927     06DE  1D03               	skipz
  5928     06DF  2ED8               	goto	u2735
  5929     06E0  0828               	movf	??___flmul,w
  5930     06E1  07B4               	addwf	___flmul@prod,f
  5931     06E2  0829               	movf	??___flmul+1,w
  5932     06E3  1103               	clrz
  5933     06E4  1803               	skipnc
  5934     06E5  3E01               	addlw	1
  5935     06E6  1903               	skipnz
  5936     06E7  2EE9               	goto	u2741
  5937     06E8  07B5               	addwf	___flmul@prod+1,f
  5938     06E9                     u2741:
  5939     06E9  082A               	movf	??___flmul+2,w
  5940     06EA  1103               	clrz
  5941     06EB  1803               	skipnc
  5942     06EC  3E01               	addlw	1
  5943     06ED  1903               	skipnz
  5944     06EE  2EF0               	goto	u2742
  5945     06EF  07B6               	addwf	___flmul@prod+2,f
  5946     06F0                     u2742:
  5947     06F0  082B               	movf	??___flmul+3,w
  5948     06F1  1103               	clrz
  5949     06F2  1803               	skipnc
  5950     06F3  3E01               	addlw	1
  5951     06F4  1903               	skipnz
  5952     06F5  2EF7               	goto	u2743
  5953     06F6  07B7               	addwf	___flmul@prod+3,f
  5954     06F7                     u2743:
  5955     06F7                     l2548:
  5956     06F7  3008               	movlw	8
  5957     06F8  00A8               	movwf	??___flmul
  5958     06F9                     u2755:
  5959     06F9  1003               	clrc
  5960     06FA  0DAE               	rlf	___flmul@grs,f
  5961     06FB  0DAF               	rlf	___flmul@grs+1,f
  5962     06FC  0DB0               	rlf	___flmul@grs+2,f
  5963     06FD  0DB1               	rlf	___flmul@grs+3,f
  5964     06FE  0BA8               	decfsz	??___flmul,f
  5965     06FF  2EF9               	goto	u2755
  5966     0700                     l2550:
  5967     0700  0833               	movf	___flmul@bexp,w
  5968     0701  0732               	addwf	___flmul@aexp,w
  5969     0702  00A8               	movwf	??___flmul
  5970     0703  01A9               	clrf	??___flmul+1
  5971     0704  0DA9               	rlf	??___flmul+1,f
  5972     0705  0828               	movf	??___flmul,w
  5973     0706  3E82               	addlw	130
  5974     0707  00B8               	movwf	___flmul@temp
  5975     0708  0829               	movf	??___flmul+1,w
  5976     0709  1803               	skipnc
  5977     070A  3E01               	addlw	1
  5978     070B  3EFF               	addlw	255
  5979     070C  00B9               	movwf	___flmul@temp+1
  5980     070D  2F2B               	goto	l2562
  5981     070E                     l2552:
  5982     070E  3001               	movlw	1
  5983     070F  00A8               	movwf	??___flmul
  5984     0710                     u2765:
  5985     0710  1003               	clrc
  5986     0711  0DB4               	rlf	___flmul@prod,f
  5987     0712  0DB5               	rlf	___flmul@prod+1,f
  5988     0713  0DB6               	rlf	___flmul@prod+2,f
  5989     0714  0DB7               	rlf	___flmul@prod+3,f
  5990     0715  0BA8               	decfsz	??___flmul,f
  5991     0716  2F10               	goto	u2765
  5992     0717                     l2554:
  5993     0717  1FB1               	btfss	___flmul@grs+3,7
  5994     0718  2F1A               	goto	u2771
  5995     0719  2F1B               	goto	u2770
  5996     071A                     u2771:
  5997     071A  2F1C               	goto	l2558
  5998     071B                     u2770:
  5999     071B                     l2556:
  6000     071B  1434               	bsf	___flmul@prod,0
  6001     071C                     l2558:
  6002     071C  3001               	movlw	1
  6003     071D  00A8               	movwf	??___flmul
  6004     071E                     u2785:
  6005     071E  1003               	clrc
  6006     071F  0DAE               	rlf	___flmul@grs,f
  6007     0720  0DAF               	rlf	___flmul@grs+1,f
  6008     0721  0DB0               	rlf	___flmul@grs+2,f
  6009     0722  0DB1               	rlf	___flmul@grs+3,f
  6010     0723  0BA8               	decfsz	??___flmul,f
  6011     0724  2F1E               	goto	u2785
  6012     0725                     l2560:
  6013     0725  30FF               	movlw	255
  6014     0726  07B8               	addwf	___flmul@temp,f
  6015     0727  1803               	skipnc
  6016     0728  0AB9               	incf	___flmul@temp+1,f
  6017     0729  30FF               	movlw	255
  6018     072A  07B9               	addwf	___flmul@temp+1,f
  6019     072B                     l2562:
  6020     072B  1FB6               	btfss	___flmul@prod+2,7
  6021     072C  2F2E               	goto	u2791
  6022     072D  2F2F               	goto	u2790
  6023     072E                     u2791:
  6024     072E  2F0E               	goto	l2552
  6025     072F                     u2790:
  6026     072F                     l2564:
  6027     072F  01B2               	clrf	___flmul@aexp
  6028     0730                     l2566:
  6029     0730  1FB1               	btfss	___flmul@grs+3,7
  6030     0731  2F33               	goto	u2801
  6031     0732  2F34               	goto	u2800
  6032     0733                     u2801:
  6033     0733  2F50               	goto	l2574
  6034     0734                     u2800:
  6035     0734                     l2568:
  6036     0734  30FF               	movlw	255
  6037     0735  052E               	andwf	___flmul@grs,w
  6038     0736  00A8               	movwf	??___flmul
  6039     0737  30FF               	movlw	255
  6040     0738  052F               	andwf	___flmul@grs+1,w
  6041     0739  00A9               	movwf	??___flmul+1
  6042     073A  30FF               	movlw	255
  6043     073B  0530               	andwf	___flmul@grs+2,w
  6044     073C  00AA               	movwf	??___flmul+2
  6045     073D  307F               	movlw	127
  6046     073E  0531               	andwf	___flmul@grs+3,w
  6047     073F  00AB               	movwf	??___flmul+3
  6048     0740  082B               	movf	??___flmul+3,w
  6049     0741  042A               	iorwf	??___flmul+2,w
  6050     0742  0429               	iorwf	??___flmul+1,w
  6051     0743  0428               	iorwf	??___flmul,w
  6052     0744  1903               	skipnz
  6053     0745  2F47               	goto	u2811
  6054     0746  2F48               	goto	u2810
  6055     0747                     u2811:
  6056     0747  2F4B               	goto	l737
  6057     0748                     u2810:
  6058     0748                     l2570:
  6059     0748  3001               	movlw	1
  6060     0749  00B2               	movwf	___flmul@aexp
  6061     074A  2F50               	goto	l2574
  6062     074B                     l737:
  6063     074B  1C34               	btfss	___flmul@prod,0
  6064     074C  2F4E               	goto	u2821
  6065     074D  2F4F               	goto	u2820
  6066     074E                     u2821:
  6067     074E  2F50               	goto	l2574
  6068     074F                     u2820:
  6069     074F  2F48               	goto	l2570
  6070     0750                     l2574:
  6071     0750  0832               	movf	___flmul@aexp,w
  6072     0751  1903               	btfsc	3,2
  6073     0752  2F54               	goto	u2831
  6074     0753  2F55               	goto	u2830
  6075     0754                     u2831:
  6076     0754  2F86               	goto	l2584
  6077     0755                     u2830:
  6078     0755                     l2576:
  6079     0755  3001               	movlw	1
  6080     0756  07B4               	addwf	___flmul@prod,f
  6081     0757  3000               	movlw	0
  6082     0758  1803               	skipnc
  6083     0759  3001               	movlw	1
  6084     075A  07B5               	addwf	___flmul@prod+1,f
  6085     075B  3000               	movlw	0
  6086     075C  1803               	skipnc
  6087     075D  3001               	movlw	1
  6088     075E  07B6               	addwf	___flmul@prod+2,f
  6089     075F  3000               	movlw	0
  6090     0760  1803               	skipnc
  6091     0761  3001               	movlw	1
  6092     0762  07B7               	addwf	___flmul@prod+3,f
  6093     0763                     l2578:
  6094     0763  1C37               	btfss	___flmul@prod+3,0
  6095     0764  2F66               	goto	u2841
  6096     0765  2F67               	goto	u2840
  6097     0766                     u2841:
  6098     0766  2F86               	goto	l2584
  6099     0767                     u2840:
  6100     0767                     l2580:
  6101     0767  0834               	movf	___flmul@prod,w
  6102     0768  00A8               	movwf	??___flmul
  6103     0769  0835               	movf	___flmul@prod+1,w
  6104     076A  00A9               	movwf	??___flmul+1
  6105     076B  0836               	movf	___flmul@prod+2,w
  6106     076C  00AA               	movwf	??___flmul+2
  6107     076D  0837               	movf	___flmul@prod+3,w
  6108     076E  00AB               	movwf	??___flmul+3
  6109     076F  3001               	movlw	1
  6110     0770  00AC               	movwf	??___flmul+4
  6111     0771                     u2855:
  6112     0771  0D2B               	rlf	??___flmul+3,w
  6113     0772  0CAB               	rrf	??___flmul+3,f
  6114     0773  0CAA               	rrf	??___flmul+2,f
  6115     0774  0CA9               	rrf	??___flmul+1,f
  6116     0775  0CA8               	rrf	??___flmul,f
  6117     0776                     u2850:
  6118     0776  0BAC               	decfsz	??___flmul+4,f
  6119     0777  2F71               	goto	u2855
  6120     0778  082B               	movf	??___flmul+3,w
  6121     0779  00B7               	movwf	___flmul@prod+3
  6122     077A  082A               	movf	??___flmul+2,w
  6123     077B  00B6               	movwf	___flmul@prod+2
  6124     077C  0829               	movf	??___flmul+1,w
  6125     077D  00B5               	movwf	___flmul@prod+1
  6126     077E  0828               	movf	??___flmul,w
  6127     077F  00B4               	movwf	___flmul@prod
  6128     0780                     l2582:
  6129     0780  3001               	movlw	1
  6130     0781  07B8               	addwf	___flmul@temp,f
  6131     0782  1803               	skipnc
  6132     0783  0AB9               	incf	___flmul@temp+1,f
  6133     0784  3000               	movlw	0
  6134     0785  07B9               	addwf	___flmul@temp+1,f
  6135     0786                     l2584:
  6136     0786  0839               	movf	___flmul@temp+1,w
  6137     0787  3A80               	xorlw	128
  6138     0788  00FF               	movwf	btemp+1
  6139     0789  3080               	movlw	128
  6140     078A  027F               	subwf	btemp+1,w
  6141     078B  1D03               	skipz
  6142     078C  2F8F               	goto	u2865
  6143     078D  30FF               	movlw	255
  6144     078E  0238               	subwf	___flmul@temp,w
  6145     078F                     u2865:
  6146     078F  1C03               	skipc
  6147     0790  2F92               	goto	u2861
  6148     0791  2F93               	goto	u2860
  6149     0792                     u2861:
  6150     0792  2F9E               	goto	l2588
  6151     0793                     u2860:
  6152     0793                     l2586:
  6153     0793  307F               	movlw	127
  6154     0794  1283               	bcf	3,5	;RP0=0, select bank0
  6155     0795  1303               	bcf	3,6	;RP1=0, select bank0
  6156     0796  00B7               	movwf	___flmul@prod+3
  6157     0797  3080               	movlw	128
  6158     0798  00B6               	movwf	___flmul@prod+2
  6159     0799  3000               	movlw	0
  6160     079A  00B5               	movwf	___flmul@prod+1
  6161     079B  3000               	movlw	0
  6162     079C  00B4               	movwf	___flmul@prod
  6163     079D  2FCF               	goto	l743
  6164     079E                     l2588:
  6165     079E  1283               	bcf	3,5	;RP0=0, select bank0
  6166     079F  1303               	bcf	3,6	;RP1=0, select bank0
  6167     07A0  0839               	movf	___flmul@temp+1,w
  6168     07A1  3A80               	xorlw	128
  6169     07A2  00FF               	movwf	btemp+1
  6170     07A3  3080               	movlw	128
  6171     07A4  027F               	subwf	btemp+1,w
  6172     07A5  1D03               	skipz
  6173     07A6  2FA9               	goto	u2875
  6174     07A7  3001               	movlw	1
  6175     07A8  0238               	subwf	___flmul@temp,w
  6176     07A9                     u2875:
  6177     07A9  1803               	skipnc
  6178     07AA  2FAC               	goto	u2871
  6179     07AB  2FAD               	goto	u2870
  6180     07AC                     u2871:
  6181     07AC  2FB9               	goto	l2594
  6182     07AD                     u2870:
  6183     07AD                     l2590:
  6184     07AD  3000               	movlw	0
  6185     07AE  1283               	bcf	3,5	;RP0=0, select bank0
  6186     07AF  1303               	bcf	3,6	;RP1=0, select bank0
  6187     07B0  00B7               	movwf	___flmul@prod+3
  6188     07B1  3000               	movlw	0
  6189     07B2  00B6               	movwf	___flmul@prod+2
  6190     07B3  3000               	movlw	0
  6191     07B4  00B5               	movwf	___flmul@prod+1
  6192     07B5  3000               	movlw	0
  6193     07B6  00B4               	movwf	___flmul@prod
  6194     07B7                     l2592:
  6195     07B7  01AD               	clrf	___flmul@sign
  6196     07B8  2FCF               	goto	l743
  6197     07B9                     l2594:
  6198     07B9  1283               	bcf	3,5	;RP0=0, select bank0
  6199     07BA  1303               	bcf	3,6	;RP1=0, select bank0
  6200     07BB  0838               	movf	___flmul@temp,w
  6201     07BC  00B3               	movwf	___flmul@bexp
  6202     07BD  30FF               	movlw	255
  6203     07BE  05B4               	andwf	___flmul@prod,f
  6204     07BF  30FF               	movlw	255
  6205     07C0  05B5               	andwf	___flmul@prod+1,f
  6206     07C1  307F               	movlw	127
  6207     07C2  05B6               	andwf	___flmul@prod+2,f
  6208     07C3  3000               	movlw	0
  6209     07C4  05B7               	andwf	___flmul@prod+3,f
  6210     07C5                     l2596:
  6211     07C5  1C33               	btfss	___flmul@bexp,0
  6212     07C6  2FC8               	goto	u2881
  6213     07C7  2FC9               	goto	u2880
  6214     07C8                     u2881:
  6215     07C8  2FCA               	goto	l2600
  6216     07C9                     u2880:
  6217     07C9                     l2598:
  6218     07C9  17B6               	bsf	___flmul@prod+2,7
  6219     07CA                     l2600:
  6220     07CA  0833               	movf	___flmul@bexp,w
  6221     07CB  00A8               	movwf	??___flmul
  6222     07CC  1003               	clrc
  6223     07CD  0C28               	rrf	??___flmul,w
  6224     07CE  00B7               	movwf	___flmul@prod+3
  6225     07CF                     l743:
  6226     07CF  082D               	movf	___flmul@sign,w
  6227     07D0  04B7               	iorwf	___flmul@prod+3,f
  6228     07D1                     l2602:
  6229     07D1  0837               	movf	___flmul@prod+3,w
  6230     07D2  00A3               	movwf	?___flmul+3
  6231     07D3  0836               	movf	___flmul@prod+2,w
  6232     07D4  00A2               	movwf	?___flmul+2
  6233     07D5  0835               	movf	___flmul@prod+1,w
  6234     07D6  00A1               	movwf	?___flmul+1
  6235     07D7  0834               	movf	___flmul@prod,w
  6236     07D8  00A0               	movwf	?___flmul
  6237     07D9                     l731:
  6238     07D9  0008               	return
  6239     07DA                     __end_of___flmul:
  6240                           
  6241                           	psect	text21
  6242     0A5B                     __ptext21:	
  6243 ;; *************** function __Umul8_16 *****************
  6244 ;; Defined at:
  6245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8_16.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  multiplier      1    wreg     unsigned char 
  6248 ;;  multiplicand    1    0[COMMON] unsigned char 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  multiplier      1    8[COMMON] unsigned char 
  6251 ;;  word_mpld       2    6[COMMON] unsigned short 
  6252 ;;  product         2    4[COMMON] unsigned short 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2    0[COMMON] unsigned int 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6262 ;;      Params:         2       0       0       0       0
  6263 ;;      Locals:         5       0       0       0       0
  6264 ;;      Temps:          2       0       0       0       0
  6265 ;;      Totals:         9       0       0       0       0
  6266 ;;Total ram usage:        9 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		___flmul
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           
  6275     0A5B                     __Umul8_16:	
  6276                           ;psect for function __Umul8_16
  6277                           
  6278                           
  6279                           ;incstack = 0
  6280                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6281                           ;__Umul8_16@multiplier stored from wreg
  6282     0A5B  00F8               	movwf	__Umul8_16@multiplier
  6283     0A5C                     l2070:
  6284     0A5C  01F4               	clrf	__Umul8_16@product
  6285     0A5D  01F5               	clrf	__Umul8_16@product+1
  6286     0A5E                     l2072:
  6287     0A5E  0870               	movf	__Umul8_16@multiplicand,w
  6288     0A5F  00F2               	movwf	??__Umul8_16
  6289     0A60  01F3               	clrf	??__Umul8_16+1
  6290     0A61  0872               	movf	??__Umul8_16,w
  6291     0A62  00F6               	movwf	__Umul8_16@word_mpld
  6292     0A63  0873               	movf	??__Umul8_16+1,w
  6293     0A64  00F7               	movwf	__Umul8_16@word_mpld+1
  6294     0A65                     l2074:
  6295     0A65  1C78               	btfss	__Umul8_16@multiplier,0
  6296     0A66  2A68               	goto	u1991
  6297     0A67  2A69               	goto	u1990
  6298     0A68                     u1991:
  6299     0A68  2A6F               	goto	l750
  6300     0A69                     u1990:
  6301     0A69                     l2076:
  6302     0A69  0876               	movf	__Umul8_16@word_mpld,w
  6303     0A6A  07F4               	addwf	__Umul8_16@product,f
  6304     0A6B  1803               	skipnc
  6305     0A6C  0AF5               	incf	__Umul8_16@product+1,f
  6306     0A6D  0877               	movf	__Umul8_16@word_mpld+1,w
  6307     0A6E  07F5               	addwf	__Umul8_16@product+1,f
  6308     0A6F                     l750:
  6309     0A6F  3001               	movlw	1
  6310     0A70                     u2005:
  6311     0A70  1003               	clrc
  6312     0A71  0DF6               	rlf	__Umul8_16@word_mpld,f
  6313     0A72  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6314     0A73  3EFF               	addlw	-1
  6315     0A74  1D03               	skipz
  6316     0A75  2A70               	goto	u2005
  6317     0A76  1003               	clrc
  6318     0A77  0CF8               	rrf	__Umul8_16@multiplier,f
  6319     0A78                     l2078:
  6320     0A78  0878               	movf	__Umul8_16@multiplier,w
  6321     0A79  1D03               	btfss	3,2
  6322     0A7A  2A7C               	goto	u2011
  6323     0A7B  2A7D               	goto	u2010
  6324     0A7C                     u2011:
  6325     0A7C  2A65               	goto	l2074
  6326     0A7D                     u2010:
  6327     0A7D                     l2080:
  6328     0A7D  0875               	movf	__Umul8_16@product+1,w
  6329     0A7E  00F1               	movwf	?__Umul8_16+1
  6330     0A7F  0874               	movf	__Umul8_16@product,w
  6331     0A80  00F0               	movwf	?__Umul8_16
  6332     0A81                     l752:
  6333     0A81  0008               	return
  6334     0A82                     __end_of__Umul8_16:
  6335                           
  6336                           	psect	text22
  6337     0BDB                     __ptext22:	
  6338 ;; *************** function _Lmain *****************
  6339 ;; Defined at:
  6340 ;;		line 106 in file "LCD.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;  i               1    9[COMMON] unsigned char 
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6354 ;;      Params:         0       0       0       0       0
  6355 ;;      Locals:         1       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0
  6357 ;;      Totals:         1       0       0       0       0
  6358 ;;Total ram usage:        1 bytes
  6359 ;; Hardware stack levels used: 1
  6360 ;; Hardware stack levels required when called: 3
  6361 ;; This function calls:
  6362 ;;		_LCD_Char
  6363 ;;		_LCD_Command
  6364 ;;		_LCD_Custom_Char
  6365 ;;		_LCD_String_xy
  6366 ;;		___bmul
  6367 ;; This function is called by:
  6368 ;;		_main
  6369 ;; This function uses a non-reentrant model
  6370 ;;
  6371                           
  6372     0BDB                     _Lmain:	
  6373                           ;psect for function _Lmain
  6374                           
  6375     0BDB                     l2112:	
  6376                           ;incstack = 0
  6377                           ; Regs used in _Lmain: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6378                           
  6379                           
  6380                           ;LCD.c: 108:     char i;;LCD.c: 110:     LCD_String_xy(1,0,"");
  6381     0BDB  01F5               	clrf	LCD_String_xy@pos
  6382     0BDC  3028               	movlw	(low (((STR_3+16)-__stringbase)| (0+32768)))& (0+255)
  6383     0BDD  00F6               	movwf	LCD_String_xy@msg
  6384     0BDE  3001               	movlw	1
  6385     0BDF  120A  158A  2282  120A  158A  	fcall	_LCD_String_xy
  6386     0BE4                     l2114:
  6387                           
  6388                           ;LCD.c: 111:     LCD_Custom_Char(0,character1);
  6389     0BE4  30D0               	movlw	(low (_character1| 0))& (0+255)
  6390     0BE5  00F3               	movwf	LCD_Custom_Char@msg
  6391     0BE6  3000               	movlw	0
  6392     0BE7  120A  158A  22D4  120A  158A  	fcall	_LCD_Custom_Char
  6393     0BEC                     l2116:
  6394                           
  6395                           ;LCD.c: 112:     LCD_Custom_Char(1,character2);
  6396     0BEC  30C8               	movlw	(low (_character2| 0))& (0+255)
  6397     0BED  00F3               	movwf	LCD_Custom_Char@msg
  6398     0BEE  3001               	movlw	1
  6399     0BEF  120A  158A  22D4  120A  158A  	fcall	_LCD_Custom_Char
  6400     0BF4                     l2118:
  6401                           
  6402                           ;LCD.c: 113:     LCD_Custom_Char(2,character3);
  6403     0BF4  30C0               	movlw	(low (_character3| 0))& (0+255)
  6404     0BF5  00F3               	movwf	LCD_Custom_Char@msg
  6405     0BF6  3002               	movlw	2
  6406     0BF7  120A  158A  22D4  120A  158A  	fcall	_LCD_Custom_Char
  6407     0BFC                     l2120:
  6408                           
  6409                           ;LCD.c: 114:     LCD_Custom_Char(3,character4);
  6410     0BFC  30B8               	movlw	(low (_character4| 0))& (0+255)
  6411     0BFD  00F3               	movwf	LCD_Custom_Char@msg
  6412     0BFE  3003               	movlw	3
  6413     0BFF  120A  158A  22D4  120A  158A  	fcall	_LCD_Custom_Char
  6414     0C04                     l2122:
  6415                           
  6416                           ;LCD.c: 115:     LCD_Custom_Char(4,character5);
  6417     0C04  30B0               	movlw	(low (_character5| 0))& (0+255)
  6418     0C05  00F3               	movwf	LCD_Custom_Char@msg
  6419     0C06  3004               	movlw	4
  6420     0C07  120A  158A  22D4  120A  158A  	fcall	_LCD_Custom_Char
  6421     0C0C                     l2124:
  6422                           
  6423                           ;LCD.c: 117:     for(i=0;i<5;i++)
  6424     0C0C  01F9               	clrf	Lmain@i
  6425     0C0D                     l2126:
  6426     0C0D  3005               	movlw	5
  6427     0C0E  0279               	subwf	Lmain@i,w
  6428     0C0F  1C03               	skipc
  6429     0C10  2C12               	goto	u2031
  6430     0C11  2C13               	goto	u2030
  6431     0C12                     u2031:
  6432     0C12  2C14               	goto	l2130
  6433     0C13                     u2030:
  6434     0C13  2C2B               	goto	l56
  6435     0C14                     l2130:
  6436                           
  6437                           ;LCD.c: 118:     {;LCD.c: 119:         LCD_Command(0xc0|(i*3));
  6438     0C14  3003               	movlw	3
  6439     0C15  00F0               	movwf	___bmul@multiplicand
  6440     0C16  0879               	movf	Lmain@i,w
  6441     0C17  120A  158A  21AE  120A  158A  	fcall	___bmul
  6442     0C1C  38C0               	iorlw	192
  6443     0C1D  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  6444                           
  6445                           ;LCD.c: 120:         LCD_Char(i);
  6446     0C22  0879               	movf	Lmain@i,w
  6447     0C23  120A  158A  2337  120A  158A  	fcall	_LCD_Char
  6448     0C28                     l2132:
  6449                           
  6450                           ;LCD.c: 122:     }
  6451     0C28  3001               	movlw	1
  6452     0C29  07F9               	addwf	Lmain@i,f
  6453     0C2A  2C0D               	goto	l2126
  6454     0C2B                     l56:
  6455     0C2B  0008               	return
  6456     0C2C                     __end_of_Lmain:
  6457                           
  6458                           	psect	text23
  6459     09AE                     __ptext23:	
  6460 ;; *************** function ___bmul *****************
  6461 ;; Defined at:
  6462 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  multiplier      1    wreg     unsigned char 
  6465 ;;  multiplicand    1    0[COMMON] unsigned char 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  multiplier      1    2[COMMON] unsigned char 
  6468 ;;  product         1    1[COMMON] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      unsigned char 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6478 ;;      Params:         1       0       0       0       0
  6479 ;;      Locals:         2       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0
  6481 ;;      Totals:         3       0       0       0       0
  6482 ;;Total ram usage:        3 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_Lmain
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491     09AE                     ___bmul:	
  6492                           ;psect for function ___bmul
  6493                           
  6494                           
  6495                           ;incstack = 0
  6496                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6497                           ;___bmul@multiplier stored from wreg
  6498     09AE  00F2               	movwf	___bmul@multiplier
  6499     09AF                     l2056:
  6500     09AF  01F1               	clrf	___bmul@product
  6501     09B0                     l2058:
  6502     09B0  1C72               	btfss	___bmul@multiplier,0
  6503     09B1  29B3               	goto	u1971
  6504     09B2  29B4               	goto	u1970
  6505     09B3                     u1971:
  6506     09B3  29B6               	goto	l2062
  6507     09B4                     u1970:
  6508     09B4                     l2060:
  6509     09B4  0870               	movf	___bmul@multiplicand,w
  6510     09B5  07F1               	addwf	___bmul@product,f
  6511     09B6                     l2062:
  6512     09B6  1003               	clrc
  6513     09B7  0DF0               	rlf	___bmul@multiplicand,f
  6514     09B8                     l2064:
  6515     09B8  1003               	clrc
  6516     09B9  0CF2               	rrf	___bmul@multiplier,f
  6517     09BA  0872               	movf	___bmul@multiplier,w
  6518     09BB  1D03               	btfss	3,2
  6519     09BC  29BE               	goto	u1981
  6520     09BD  29BF               	goto	u1980
  6521     09BE                     u1981:
  6522     09BE  29B0               	goto	l2058
  6523     09BF                     u1980:
  6524     09BF                     l2066:
  6525     09BF  0871               	movf	___bmul@product,w
  6526     09C0                     l360:
  6527     09C0  0008               	return
  6528     09C1                     __end_of___bmul:
  6529                           
  6530                           	psect	text24
  6531     0A82                     __ptext24:	
  6532 ;; *************** function _LCD_String_xy *****************
  6533 ;; Defined at:
  6534 ;;		line 68 in file "LCD.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  row             1    wreg     unsigned char 
  6537 ;;  pos             1    5[COMMON] unsigned char 
  6538 ;;  msg             1    6[COMMON] PTR const unsigned char 
  6539 ;;		 -> STR_9(18), STR_8(17), STR_6(10), STR_5(15), 
  6540 ;;		 -> STR_4(2), STR_3(17), STR_2(11), STR_1(1), 
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;  row             1    7[COMMON] unsigned char 
  6543 ;;  location        1    8[COMMON] unsigned char 
  6544 ;; Return value:  Size  Location     Type
  6545 ;;                  1    wreg      void 
  6546 ;; Registers used:
  6547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6548 ;; Tracked objects:
  6549 ;;		On entry : 0/0
  6550 ;;		On exit  : 0/0
  6551 ;;		Unchanged: 0/0
  6552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6553 ;;      Params:         2       0       0       0       0
  6554 ;;      Locals:         2       0       0       0       0
  6555 ;;      Temps:          0       0       0       0       0
  6556 ;;      Totals:         4       0       0       0       0
  6557 ;;Total ram usage:        4 bytes
  6558 ;; Hardware stack levels used: 1
  6559 ;; Hardware stack levels required when called: 2
  6560 ;; This function calls:
  6561 ;;		_LCD_Command
  6562 ;;		_LCD_String
  6563 ;; This function is called by:
  6564 ;;		_Lmain
  6565 ;;		_main
  6566 ;; This function uses a non-reentrant model
  6567 ;;
  6568                           
  6569     0A82                     _LCD_String_xy:	
  6570                           ;psect for function _LCD_String_xy
  6571                           
  6572                           
  6573                           ;incstack = 0
  6574                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6575                           ;LCD_String_xy@row stored from wreg
  6576     0A82  00F7               	movwf	LCD_String_xy@row
  6577     0A83                     l2020:
  6578     0A83                     l2022:
  6579                           
  6580                           ;LCD.c: 71:     if(row<=1)
  6581     0A83  3002               	movlw	2
  6582     0A84  0277               	subwf	LCD_String_xy@row,w
  6583     0A85  1803               	skipnc
  6584     0A86  2A88               	goto	u1921
  6585     0A87  2A89               	goto	u1920
  6586     0A88                     u1921:
  6587     0A88  2A94               	goto	l2028
  6588     0A89                     u1920:
  6589     0A89                     l2024:
  6590                           
  6591                           ;LCD.c: 72:     {;LCD.c: 73:         location=(0x80) | ((pos) & 0x0f);
  6592     0A89  0875               	movf	LCD_String_xy@pos,w
  6593     0A8A  390F               	andlw	15
  6594     0A8B  3880               	iorlw	128
  6595     0A8C  00F8               	movwf	LCD_String_xy@location
  6596     0A8D                     l2026:
  6597                           
  6598                           ;LCD.c: 74:         LCD_Command(location);
  6599     0A8D  0878               	movf	LCD_String_xy@location,w
  6600     0A8E  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  6601                           
  6602                           ;LCD.c: 75:     }
  6603     0A93  2A9E               	goto	l2032
  6604     0A94                     l2028:
  6605                           
  6606                           ;LCD.c: 77:     {;LCD.c: 78:         location=(0xC0) | ((pos) & 0x0f);
  6607     0A94  0875               	movf	LCD_String_xy@pos,w
  6608     0A95  390F               	andlw	15
  6609     0A96  38C0               	iorlw	192
  6610     0A97  00F8               	movwf	LCD_String_xy@location
  6611     0A98                     l2030:
  6612                           
  6613                           ;LCD.c: 79:         LCD_Command(location);
  6614     0A98  0878               	movf	LCD_String_xy@location,w
  6615     0A99  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  6616     0A9E                     l2032:
  6617                           
  6618                           ;LCD.c: 83:     LCD_String(msg);
  6619     0A9E  0876               	movf	LCD_String_xy@msg,w
  6620     0A9F  00F3               	movwf	LCD_String@msg
  6621     0AA0  3000               	movlw	0
  6622     0AA1  1D03               	btfss	3,2
  6623     0AA2  3080               	movlw	128
  6624     0AA3  00F4               	movwf	LCD_String@msg+1
  6625     0AA4  120A  158A  2235  120A  158A  	fcall	_LCD_String
  6626     0AA9                     l42:
  6627     0AA9  0008               	return
  6628     0AAA                     __end_of_LCD_String_xy:
  6629                           
  6630                           	psect	text25
  6631     0A35                     __ptext25:	
  6632 ;; *************** function _LCD_String *****************
  6633 ;; Defined at:
  6634 ;;		line 58 in file "LCD.c"
  6635 ;; Parameters:    Size  Location     Type
  6636 ;;  msg             2    3[COMMON] PTR const unsigned char 
  6637 ;;		 -> STR_9(18), STR_8(17), main@StringTemperature(32), STR_6(10), 
  6638 ;;		 -> STR_5(15), STR_4(2), STR_3(17), STR_2(11), 
  6639 ;;		 -> STR_1(1), 
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;		None
  6642 ;; Return value:  Size  Location     Type
  6643 ;;                  1    wreg      void 
  6644 ;; Registers used:
  6645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6646 ;; Tracked objects:
  6647 ;;		On entry : 0/0
  6648 ;;		On exit  : 0/0
  6649 ;;		Unchanged: 0/0
  6650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6651 ;;      Params:         2       0       0       0       0
  6652 ;;      Locals:         0       0       0       0       0
  6653 ;;      Temps:          0       0       0       0       0
  6654 ;;      Totals:         2       0       0       0       0
  6655 ;;Total ram usage:        2 bytes
  6656 ;; Hardware stack levels used: 1
  6657 ;; Hardware stack levels required when called: 1
  6658 ;; This function calls:
  6659 ;;		_LCD_Char
  6660 ;; This function is called by:
  6661 ;;		_LCD_String_xy
  6662 ;;		_main
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666     0A35                     _LCD_String:	
  6667                           ;psect for function _LCD_String
  6668                           
  6669     0A35                     l1960:	
  6670                           ;incstack = 0
  6671                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6672                           
  6673                           
  6674                           ;LCD.c: 58: void LCD_String(const char *msg);LCD.c: 59: {;LCD.c: 60:  while((*msg)!=0)
  6675     0A35  2A4A               	goto	l1966
  6676     0A36                     l1962:
  6677                           
  6678                           ;LCD.c: 61:  {;LCD.c: 62:    LCD_Char(*msg);
  6679     0A36  0874               	movf	LCD_String@msg+1,w
  6680     0A37  00FF               	movwf	btemp+1
  6681     0A38  0873               	movf	LCD_String@msg,w
  6682     0A39  0084               	movwf	4
  6683     0A3A  120A  158A  2000  120A  158A  	fcall	stringtab
  6684     0A3F  120A  158A  2337  120A  158A  	fcall	_LCD_Char
  6685     0A44                     l1964:
  6686                           
  6687                           ;LCD.c: 63:    msg++;
  6688     0A44  3001               	movlw	1
  6689     0A45  07F3               	addwf	LCD_String@msg,f
  6690     0A46  1803               	skipnc
  6691     0A47  0AF4               	incf	LCD_String@msg+1,f
  6692     0A48  3000               	movlw	0
  6693     0A49  07F4               	addwf	LCD_String@msg+1,f
  6694     0A4A                     l1966:
  6695                           
  6696                           ;LCD.c: 60:  while((*msg)!=0)
  6697     0A4A  0874               	movf	LCD_String@msg+1,w
  6698     0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  6699     0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  6700     0A4D  00FF               	movwf	btemp+1
  6701     0A4E  0873               	movf	LCD_String@msg,w
  6702     0A4F  0084               	movwf	4
  6703     0A50  120A  158A  2000  120A  158A  	fcall	stringtab
  6704     0A55  3A00               	xorlw	0
  6705     0A56  1D03               	skipz
  6706     0A57  2A59               	goto	u1811
  6707     0A58  2A5A               	goto	u1810
  6708     0A59                     u1811:
  6709     0A59  2A36               	goto	l1962
  6710     0A5A                     u1810:
  6711     0A5A                     l37:
  6712     0A5A  0008               	return
  6713     0A5B                     __end_of_LCD_String:
  6714                           
  6715                           	psect	text26
  6716     0AD4                     __ptext26:	
  6717 ;; *************** function _LCD_Custom_Char *****************
  6718 ;; Defined at:
  6719 ;;		line 94 in file "LCD.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  loc             1    wreg     unsigned char 
  6722 ;;  msg             1    3[COMMON] PTR unsigned char 
  6723 ;;		 -> character5(8), character4(8), character3(8), character2(8), 
  6724 ;;		 -> character1(8), 
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  loc             1    5[COMMON] unsigned char 
  6727 ;;  i               1    6[COMMON] unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  1    wreg      void 
  6730 ;; Registers used:
  6731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6737 ;;      Params:         1       0       0       0       0
  6738 ;;      Locals:         2       0       0       0       0
  6739 ;;      Temps:          1       0       0       0       0
  6740 ;;      Totals:         4       0       0       0       0
  6741 ;;Total ram usage:        4 bytes
  6742 ;; Hardware stack levels used: 1
  6743 ;; Hardware stack levels required when called: 1
  6744 ;; This function calls:
  6745 ;;		_LCD_Char
  6746 ;;		_LCD_Command
  6747 ;; This function is called by:
  6748 ;;		_Lmain
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752     0AD4                     _LCD_Custom_Char:	
  6753                           ;psect for function _LCD_Custom_Char
  6754                           
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _LCD_Custom_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6758                           ;LCD_Custom_Char@loc stored from wreg
  6759     0AD4  00F5               	movwf	LCD_Custom_Char@loc
  6760     0AD5                     l2034:
  6761                           
  6762                           ;LCD.c: 94: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD.c: 95: {;LCD.
      +                          c: 96:     unsigned char i;;LCD.c: 97:     if(loc<8)
  6763     0AD5  3008               	movlw	8
  6764     0AD6  0275               	subwf	LCD_Custom_Char@loc,w
  6765     0AD7  1803               	skipnc
  6766     0AD8  2ADA               	goto	u1931
  6767     0AD9  2ADB               	goto	u1930
  6768     0ADA                     u1931:
  6769     0ADA  2B00               	goto	l51
  6770     0ADB                     u1930:
  6771     0ADB                     l2036:
  6772                           
  6773                           ;LCD.c: 98:     {;LCD.c: 99:      LCD_Command(0x40+(loc*8));
  6774     0ADB  0875               	movf	LCD_Custom_Char@loc,w
  6775     0ADC  00F4               	movwf	??_LCD_Custom_Char
  6776     0ADD  3002               	movlw	2
  6777     0ADE                     u1945:
  6778     0ADE  1003               	clrc
  6779     0ADF  0DF4               	rlf	??_LCD_Custom_Char,f
  6780     0AE0  3EFF               	addlw	-1
  6781     0AE1  1D03               	skipz
  6782     0AE2  2ADE               	goto	u1945
  6783     0AE3  1003               	clrc
  6784     0AE4  0D74               	rlf	??_LCD_Custom_Char,w
  6785     0AE5  3E40               	addlw	64
  6786     0AE6  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  6787     0AEB                     l2038:
  6788                           
  6789                           ;LCD.c: 100:       for(i=0;i<8;i++)
  6790     0AEB  01F6               	clrf	LCD_Custom_Char@i
  6791     0AEC                     l2044:
  6792                           
  6793                           ;LCD.c: 101:            LCD_Char(msg[i]);
  6794     0AEC  0876               	movf	LCD_Custom_Char@i,w
  6795     0AED  0773               	addwf	LCD_Custom_Char@msg,w
  6796     0AEE  00F4               	movwf	??_LCD_Custom_Char
  6797     0AEF  0874               	movf	??_LCD_Custom_Char,w
  6798     0AF0  0084               	movwf	4
  6799     0AF1  1383               	bcf	3,7	;select IRP bank0
  6800     0AF2  0800               	movf	0,w
  6801     0AF3  120A  158A  2337  120A  158A  	fcall	_LCD_Char
  6802     0AF8                     l2046:
  6803     0AF8  3001               	movlw	1
  6804     0AF9  07F6               	addwf	LCD_Custom_Char@i,f
  6805     0AFA                     l2048:
  6806     0AFA  3008               	movlw	8
  6807     0AFB  0276               	subwf	LCD_Custom_Char@i,w
  6808     0AFC  1C03               	skipc
  6809     0AFD  2AFF               	goto	u1951
  6810     0AFE  2B00               	goto	u1950
  6811     0AFF                     u1951:
  6812     0AFF  2AEC               	goto	l2044
  6813     0B00                     u1950:
  6814     0B00                     l51:
  6815     0B00  0008               	return
  6816     0B01                     __end_of_LCD_Custom_Char:
  6817                           
  6818                           	psect	text27
  6819     0B37                     __ptext27:	
  6820 ;; *************** function _LCD_Char *****************
  6821 ;; Defined at:
  6822 ;;		line 42 in file "LCD.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;  dat             1    wreg     unsigned char 
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;  dat             1    2[COMMON] unsigned char 
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  1    wreg      void 
  6829 ;; Registers used:
  6830 ;;		wreg, status,2, status,0
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6836 ;;      Params:         0       0       0       0       0
  6837 ;;      Locals:         1       0       0       0       0
  6838 ;;      Temps:          2       0       0       0       0
  6839 ;;      Totals:         3       0       0       0       0
  6840 ;;Total ram usage:        3 bytes
  6841 ;; Hardware stack levels used: 1
  6842 ;; This function calls:
  6843 ;;		Nothing
  6844 ;; This function is called by:
  6845 ;;		_LCD_String
  6846 ;;		_LCD_Custom_Char
  6847 ;;		_Lmain
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851     0B37                     _LCD_Char:	
  6852                           ;psect for function _LCD_Char
  6853                           
  6854                           
  6855                           ;incstack = 0
  6856                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  6857                           ;LCD_Char@dat stored from wreg
  6858     0B37  00F2               	movwf	LCD_Char@dat
  6859     0B38                     l1816:
  6860                           
  6861                           ;LCD.c: 42: void LCD_Char(unsigned char dat);LCD.c: 43: {;LCD.c: 44:  PORTC = (PORTC & 0
      +                          x0f) | (0xF0 & dat);
  6862     0B38  30F0               	movlw	240
  6863     0B39  0572               	andwf	LCD_Char@dat,w
  6864     0B3A  00F0               	movwf	??_LCD_Char
  6865     0B3B  1283               	bcf	3,5	;RP0=0, select bank0
  6866     0B3C  1303               	bcf	3,6	;RP1=0, select bank0
  6867     0B3D  0807               	movf	7,w	;volatile
  6868     0B3E  390F               	andlw	15
  6869     0B3F  0470               	iorwf	??_LCD_Char,w
  6870     0B40  0087               	movwf	7	;volatile
  6871     0B41                     l1818:
  6872                           
  6873                           ;LCD.c: 45:  PORTCbits.RC0 = 1;
  6874     0B41  1407               	bsf	7,0	;volatile
  6875     0B42                     l1820:
  6876                           
  6877                           ;LCD.c: 46:  PORTCbits.RC1 = 1;
  6878     0B42  1487               	bsf	7,1	;volatile
  6879     0B43                     l1822:
  6880                           
  6881                           ;LCD.c: 47:  __nop();
  6882     0B43  0000               	nop
  6883     0B44                     l1824:
  6884                           
  6885                           ;LCD.c: 48:  PORTCbits.RC1 = 0;
  6886     0B44  1283               	bcf	3,5	;RP0=0, select bank0
  6887     0B45  1303               	bcf	3,6	;RP1=0, select bank0
  6888     0B46  1087               	bcf	7,1	;volatile
  6889     0B47                     l1826:
  6890                           
  6891                           ;LCD.c: 49:  _delay((unsigned long)((1)*(8000000/4000.0)));
  6892     0B47  3003               	movlw	3
  6893     0B48  00F1               	movwf	??_LCD_Char+1
  6894     0B49  3097               	movlw	151
  6895     0B4A  00F0               	movwf	??_LCD_Char
  6896     0B4B                     u3247:
  6897     0B4B  0BF0               	decfsz	??_LCD_Char,f
  6898     0B4C  2B4B               	goto	u3247
  6899     0B4D  0BF1               	decfsz	??_LCD_Char+1,f
  6900     0B4E  2B4B               	goto	u3247
  6901     0B4F  2B50               	nop2
  6902     0B50                     l1828:
  6903                           
  6904                           ;LCD.c: 50:     PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  6905     0B50  0872               	movf	LCD_Char@dat,w
  6906     0B51  00F0               	movwf	??_LCD_Char
  6907     0B52  3004               	movlw	4
  6908     0B53                     u1545:
  6909     0B53  1003               	clrc
  6910     0B54  0DF0               	rlf	??_LCD_Char,f
  6911     0B55  3EFF               	addlw	-1
  6912     0B56  1D03               	skipz
  6913     0B57  2B53               	goto	u1545
  6914     0B58  1283               	bcf	3,5	;RP0=0, select bank0
  6915     0B59  1303               	bcf	3,6	;RP1=0, select bank0
  6916     0B5A  0807               	movf	7,w	;volatile
  6917     0B5B  390F               	andlw	15
  6918     0B5C  0470               	iorwf	??_LCD_Char,w
  6919     0B5D  0087               	movwf	7	;volatile
  6920     0B5E                     l1830:
  6921                           
  6922                           ;LCD.c: 51:  PORTCbits.RC1 = 1;
  6923     0B5E  1487               	bsf	7,1	;volatile
  6924     0B5F                     l1832:
  6925                           
  6926                           ;LCD.c: 52:  __nop();
  6927     0B5F  0000               	nop
  6928     0B60                     l1834:
  6929                           
  6930                           ;LCD.c: 53:  PORTCbits.RC1 = 0;
  6931     0B60  1283               	bcf	3,5	;RP0=0, select bank0
  6932     0B61  1303               	bcf	3,6	;RP1=0, select bank0
  6933     0B62  1087               	bcf	7,1	;volatile
  6934                           
  6935                           ;LCD.c: 54:  _delay((unsigned long)((3)*(8000000/4000.0)));
  6936     0B63  3008               	movlw	8
  6937     0B64  00F1               	movwf	??_LCD_Char+1
  6938     0B65  30C9               	movlw	201
  6939     0B66  00F0               	movwf	??_LCD_Char
  6940     0B67                     u3257:
  6941     0B67  0BF0               	decfsz	??_LCD_Char,f
  6942     0B68  2B67               	goto	u3257
  6943     0B69  0BF1               	decfsz	??_LCD_Char+1,f
  6944     0B6A  2B67               	goto	u3257
  6945     0B6B  2B6C               	nop2
  6946     0B6C                     l31:
  6947     0B6C  0008               	return
  6948     0B6D                     __end_of_LCD_Char:
  6949                           
  6950                           	psect	text28
  6951     0AAA                     __ptext28:	
  6952 ;; *************** function _LCD_Init *****************
  6953 ;; Defined at:
  6954 ;;		line 16 in file "LCD.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;		None
  6957 ;; Auto vars:     Size  Location     Type
  6958 ;;		None
  6959 ;; Return value:  Size  Location     Type
  6960 ;;                  1    wreg      void 
  6961 ;; Registers used:
  6962 ;;		wreg, status,2, status,0, pclath, cstack
  6963 ;; Tracked objects:
  6964 ;;		On entry : 0/0
  6965 ;;		On exit  : 0/0
  6966 ;;		Unchanged: 0/0
  6967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6968 ;;      Params:         0       0       0       0       0
  6969 ;;      Locals:         0       0       0       0       0
  6970 ;;      Temps:          2       0       0       0       0
  6971 ;;      Totals:         2       0       0       0       0
  6972 ;;Total ram usage:        2 bytes
  6973 ;; Hardware stack levels used: 1
  6974 ;; Hardware stack levels required when called: 1
  6975 ;; This function calls:
  6976 ;;		_LCD_Command
  6977 ;; This function is called by:
  6978 ;;		_main
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982     0AAA                     _LCD_Init:	
  6983                           ;psect for function _LCD_Init
  6984                           
  6985     0AAA                     l2094:	
  6986                           ;incstack = 0
  6987                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  6988                           
  6989                           
  6990                           ;LCD.c: 18:     TRISC = 0;
  6991     0AAA  1683               	bsf	3,5	;RP0=1, select bank1
  6992     0AAB  1303               	bcf	3,6	;RP1=0, select bank1
  6993     0AAC  0187               	clrf	7	;volatile
  6994     0AAD                     l2096:
  6995                           
  6996                           ;LCD.c: 19:     _delay((unsigned long)((15)*(8000000/4000.0)));
  6997     0AAD  3027               	movlw	39
  6998     0AAE  00F4               	movwf	??_LCD_Init+1
  6999     0AAF  30F5               	movlw	245
  7000     0AB0  00F3               	movwf	??_LCD_Init
  7001     0AB1                     u3267:
  7002     0AB1  0BF3               	decfsz	??_LCD_Init,f
  7003     0AB2  2AB1               	goto	u3267
  7004     0AB3  0BF4               	decfsz	??_LCD_Init+1,f
  7005     0AB4  2AB1               	goto	u3267
  7006     0AB5                     l2098:
  7007                           
  7008                           ;LCD.c: 20:     LCD_Command(0x02);
  7009     0AB5  3002               	movlw	2
  7010     0AB6  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  7011     0ABB                     l2100:
  7012                           
  7013                           ;LCD.c: 21:     LCD_Command(0x28);
  7014     0ABB  3028               	movlw	40
  7015     0ABC  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  7016     0AC1                     l2102:
  7017                           
  7018                           ;LCD.c: 22:     LCD_Command(0x01);
  7019     0AC1  3001               	movlw	1
  7020     0AC2  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  7021     0AC7                     l2104:
  7022                           
  7023                           ;LCD.c: 23:     LCD_Command(0x0c);
  7024     0AC7  300C               	movlw	12
  7025     0AC8  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  7026     0ACD                     l2106:
  7027                           
  7028                           ;LCD.c: 24:     LCD_Command(0x06);
  7029     0ACD  3006               	movlw	6
  7030     0ACE  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  7031     0AD3                     l25:
  7032     0AD3  0008               	return
  7033     0AD4                     __end_of_LCD_Init:
  7034                           
  7035                           	psect	text29
  7036     097D                     __ptext29:	
  7037 ;; *************** function _LCD_Clear *****************
  7038 ;; Defined at:
  7039 ;;		line 87 in file "LCD.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;		None
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0, pclath, cstack
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7053 ;;      Params:         0       0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0
  7055 ;;      Temps:          2       0       0       0       0
  7056 ;;      Totals:         2       0       0       0       0
  7057 ;;Total ram usage:        2 bytes
  7058 ;; Hardware stack levels used: 1
  7059 ;; Hardware stack levels required when called: 1
  7060 ;; This function calls:
  7061 ;;		_LCD_Command
  7062 ;; This function is called by:
  7063 ;;		_main
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067     097D                     _LCD_Clear:	
  7068                           ;psect for function _LCD_Clear
  7069                           
  7070     097D                     l2108:	
  7071                           ;incstack = 0
  7072                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  7073                           
  7074                           
  7075                           ;LCD.c: 89:     LCD_Command(0x01);
  7076     097D  3001               	movlw	1
  7077     097E  120A  158A  2301  120A  158A  	fcall	_LCD_Command
  7078     0983                     l2110:
  7079                           
  7080                           ;LCD.c: 90:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7081     0983  3008               	movlw	8
  7082     0984  00F4               	movwf	??_LCD_Clear+1
  7083     0985  30C9               	movlw	201
  7084     0986  00F3               	movwf	??_LCD_Clear
  7085     0987                     u3277:
  7086     0987  0BF3               	decfsz	??_LCD_Clear,f
  7087     0988  2987               	goto	u3277
  7088     0989  0BF4               	decfsz	??_LCD_Clear+1,f
  7089     098A  2987               	goto	u3277
  7090     098B  298C               	nop2
  7091     098C                     l45:
  7092     098C  0008               	return
  7093     098D                     __end_of_LCD_Clear:
  7094                           
  7095                           	psect	text30
  7096     0B01                     __ptext30:	
  7097 ;; *************** function _LCD_Command *****************
  7098 ;; Defined at:
  7099 ;;		line 27 in file "LCD.c"
  7100 ;; Parameters:    Size  Location     Type
  7101 ;;  cmd             1    wreg     unsigned char 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;  cmd             1    2[COMMON] unsigned char 
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  1    wreg      void 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2, status,0
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7113 ;;      Params:         0       0       0       0       0
  7114 ;;      Locals:         1       0       0       0       0
  7115 ;;      Temps:          2       0       0       0       0
  7116 ;;      Totals:         3       0       0       0       0
  7117 ;;Total ram usage:        3 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; This function calls:
  7120 ;;		Nothing
  7121 ;; This function is called by:
  7122 ;;		_LCD_Init
  7123 ;;		_LCD_String_xy
  7124 ;;		_LCD_Clear
  7125 ;;		_LCD_Custom_Char
  7126 ;;		_Lmain
  7127 ;;		_main
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131     0B01                     _LCD_Command:	
  7132                           ;psect for function _LCD_Command
  7133                           
  7134                           
  7135                           ;incstack = 0
  7136                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  7137                           ;LCD_Command@cmd stored from wreg
  7138     0B01  00F2               	movwf	LCD_Command@cmd
  7139     0B02                     l1940:
  7140                           
  7141                           ;LCD.c: 27: void LCD_Command(unsigned char cmd );LCD.c: 28: {;LCD.c: 29:  PORTC = (PORTC
      +                           & 0x0f) |(0xF0 & cmd);
  7142     0B02  30F0               	movlw	240
  7143     0B03  0572               	andwf	LCD_Command@cmd,w
  7144     0B04  00F0               	movwf	??_LCD_Command
  7145     0B05  1283               	bcf	3,5	;RP0=0, select bank0
  7146     0B06  1303               	bcf	3,6	;RP1=0, select bank0
  7147     0B07  0807               	movf	7,w	;volatile
  7148     0B08  390F               	andlw	15
  7149     0B09  0470               	iorwf	??_LCD_Command,w
  7150     0B0A  0087               	movwf	7	;volatile
  7151     0B0B                     l1942:
  7152                           
  7153                           ;LCD.c: 30:  PORTCbits.RC0 = 0;
  7154     0B0B  1007               	bcf	7,0	;volatile
  7155     0B0C                     l1944:
  7156                           
  7157                           ;LCD.c: 31:  PORTCbits.RC1 = 1;
  7158     0B0C  1487               	bsf	7,1	;volatile
  7159     0B0D                     l1946:
  7160                           
  7161                           ;LCD.c: 32:  __nop();
  7162     0B0D  0000               	nop
  7163     0B0E                     l1948:
  7164                           
  7165                           ;LCD.c: 33:  PORTCbits.RC1 = 0;
  7166     0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  7167     0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  7168     0B10  1087               	bcf	7,1	;volatile
  7169     0B11                     l1950:
  7170                           
  7171                           ;LCD.c: 34:  _delay((unsigned long)((1)*(8000000/4000.0)));
  7172     0B11  3003               	movlw	3
  7173     0B12  00F1               	movwf	??_LCD_Command+1
  7174     0B13  3097               	movlw	151
  7175     0B14  00F0               	movwf	??_LCD_Command
  7176     0B15                     u3287:
  7177     0B15  0BF0               	decfsz	??_LCD_Command,f
  7178     0B16  2B15               	goto	u3287
  7179     0B17  0BF1               	decfsz	??_LCD_Command+1,f
  7180     0B18  2B15               	goto	u3287
  7181     0B19  2B1A               	nop2
  7182     0B1A                     l1952:
  7183                           
  7184                           ;LCD.c: 35:     PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  7185     0B1A  0872               	movf	LCD_Command@cmd,w
  7186     0B1B  00F0               	movwf	??_LCD_Command
  7187     0B1C  3004               	movlw	4
  7188     0B1D                     u1805:
  7189     0B1D  1003               	clrc
  7190     0B1E  0DF0               	rlf	??_LCD_Command,f
  7191     0B1F  3EFF               	addlw	-1
  7192     0B20  1D03               	skipz
  7193     0B21  2B1D               	goto	u1805
  7194     0B22  1283               	bcf	3,5	;RP0=0, select bank0
  7195     0B23  1303               	bcf	3,6	;RP1=0, select bank0
  7196     0B24  0807               	movf	7,w	;volatile
  7197     0B25  390F               	andlw	15
  7198     0B26  0470               	iorwf	??_LCD_Command,w
  7199     0B27  0087               	movwf	7	;volatile
  7200     0B28                     l1954:
  7201                           
  7202                           ;LCD.c: 36:  PORTCbits.RC1 = 1;
  7203     0B28  1487               	bsf	7,1	;volatile
  7204     0B29                     l1956:
  7205                           
  7206                           ;LCD.c: 37:  __nop();
  7207     0B29  0000               	nop
  7208     0B2A                     l1958:
  7209                           
  7210                           ;LCD.c: 38:  PORTCbits.RC1 = 0;
  7211     0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  7212     0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  7213     0B2C  1087               	bcf	7,1	;volatile
  7214                           
  7215                           ;LCD.c: 39:  _delay((unsigned long)((3)*(8000000/4000.0)));
  7216     0B2D  3008               	movlw	8
  7217     0B2E  00F1               	movwf	??_LCD_Command+1
  7218     0B2F  30C9               	movlw	201
  7219     0B30  00F0               	movwf	??_LCD_Command
  7220     0B31                     u3297:
  7221     0B31  0BF0               	decfsz	??_LCD_Command,f
  7222     0B32  2B31               	goto	u3297
  7223     0B33  0BF1               	decfsz	??_LCD_Command+1,f
  7224     0B34  2B31               	goto	u3297
  7225     0B35  2B36               	nop2
  7226     0B36                     l28:
  7227     0B36  0008               	return
  7228     0B37                     __end_of_LCD_Command:
  7229     0002                     ___latbits      equ	2
  7230     007E                     btemp           set	126	;btemp
  7231     007E                     wtemp0          set	126
  7232                           
  7233                           	psect	config
  7234                           
  7235                           ;Config register CONFIG1 @ 0x2007
  7236                           ;	Oscillator Selection bits
  7237                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  7238                           ;	Watchdog Timer Enable bit
  7239                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  7240                           ;	Power-up Timer Enable bit
  7241                           ;	PWRTE = OFF, PWRT disabled
  7242                           ;	RE3/MCLR pin function select bit
  7243                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  7244                           ;	Code Protection bit
  7245                           ;	CP = OFF, Program memory code protection is disabled
  7246                           ;	Data Code Protection bit
  7247                           ;	CPD = OFF, Data memory code protection is disabled
  7248                           ;	Brown Out Reset Selection bits
  7249                           ;	BOREN = OFF, BOR disabled
  7250                           ;	Internal External Switchover bit
  7251                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7252                           ;	Fail-Safe Clock Monitor Enabled bit
  7253                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7254                           ;	Low Voltage Programming Enable bit
  7255                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7256                           ;	In-Circuit Debugger Mode bit
  7257                           ;	DEBUG = 0x1, unprogrammed default
  7258     2007                     	org	8199
  7259     2007  20D5               	dw	8405
  7260                           
  7261                           ;Config register CONFIG2 @ 0x2008
  7262                           ;	Brown-out Reset Selection bit
  7263                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  7264                           ;	Flash Program Memory Self Write Enable bits
  7265                           ;	WRT = OFF, Write protection off
  7266     2008                     	org	8200
  7267     2008  3FFF               	dw	16383

Data Sizes:
    Strings     106
    Constant    5
    Data        56
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80      0      69
    BANK3            96      0      32
    BANK2            96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@StringTemperature(BANK0[32]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@StringTemperature(BANK0[32]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    LCD_Custom_Char@msg	PTR unsigned char  size(1) Largest target is 8
		 -> character1(BANK1[8]), character2(BANK1[8]), character3(BANK1[8]), character4(BANK1[8]), 
		 -> character5(BANK1[8]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 32
		 -> main@StringTemperature(BANK0[32]), STR_1(CODE[1]), STR_2(CODE[11]), STR_3(CODE[17]), 
		 -> STR_4(CODE[2]), STR_5(CODE[15]), STR_6(CODE[10]), STR_8(CODE[17]), 
		 -> STR_9(CODE[18]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[1]), STR_2(CODE[11]), STR_3(CODE[17]), STR_4(CODE[2]), 
		 -> STR_5(CODE[15]), STR_6(CODE[10]), STR_8(CODE[17]), STR_9(CODE[18]), 

    S767$buffer	PTR unsigned char  size(2) Largest target is 32
		 -> main@StringTemperature(BANK0[32]), 

    S767$source	PTR const unsigned char  size(1) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_7(CODE[16]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@StringTemperature(BANK0[32]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK1[5]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 16
		 -> STR_7(CODE[16]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMMON[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 16
		 -> STR_7(CODE[16]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_7(CODE[16]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->_vfprintf
    _vfpfcnvrt->_fputc
    _abs->___awmod
    _blink_led->_delay_ms_variable
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    _Lmain->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->___fltol
    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    ___fltol->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                42    42      0    7699
                                             36 BANK0     42    42      0
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                              _Lmain
                            ___flmul
                            ___fltol
                           ___xxtofl
                           _adc_init
                           _adc_read
                          _blink_led
                      _keypad_getkey
                        _keypad_init
                         _secuencia1
                         _secuencia5
                            _sprintf
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     2      4     182
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    15      6    1760
                                             17 BANK0     19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    1559
                                             13 COMMON     1     1      0
                                             13 BANK0      4     0      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           13     9      4    1434
                                              0 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                               13     9      4     230
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _secuencia5                                          19    19      0     640
                                              0 COMMON     3     3      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _secuencia1                                          11    11      0     320
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _blink_led                                           11     5      6     341
                                              4 COMMON     8     2      6
                                              0 BANK0      3     3      0
                  _delay_ms_variable
 ---------------------------------------------------------------------------------
 (2) _delay_ms_variable                                    4     2      2      24
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             8     6      2      70
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     337
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     230
                                             26 BANK0     10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    1608
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Lmain                                                1     1      0     904
                                              9 COMMON     1     1      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     108
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     2      2     321
                                              5 COMMON     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     105
                                              3 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     3      1     269
                                              3 COMMON     4     3      1
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String
     _LCD_Char
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   _Lmain
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
     ___bmul
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adc_init
   _adc_read
   _blink_led
     _delay_ms_variable
   _keypad_getkey
   _keypad_init
   _secuencia1
   _secuencia5
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch
   _strncmp

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0      32     33.3%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      69     86.2%
BITBANK1            80      0       0      0.0%
BANK0               80     78      80    100.0%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0     195      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Oct 17 10:14:37 2024

                        pc 0002             ___bmul@product 0071               ?_LCD_Command 0070  
                       l31 0B6C                         l25 0AD3                         l42 0AA9  
                       l51 0B00                         l28 0B36                         l45 098C  
                       l37 0A5A                         l56 0C2B                         l67 0974  
             ___awdiv@sign 0075                         fsr 0004                ?_LCD_String 0073  
          _LCD_Custom_Char 0AD4        __Umul8_16@word_mpld 0076                        l203 09EC  
                      l142 0B82                        l126 0FFF                        l231 029A  
                      l224 0E0E                        l145 0BA2                        l139 099C  
                      l219 0D3D                        l500 0C82                        l360 09C0  
                      l535 0E6F                        l528 0E84                        l538 0E84  
                      l731 07D9                        l750 0A6F                        l743 07CF  
                      l487 0DA0                        l752 0A81                        l737 074B  
                      l841 0A34                        l835 01AB                        l860 0F1E  
                      l781 006B                        l775 002C                        l871 0009  
                      l776 003D                        l848 09AD                        l777 00BD  
                      l875 0CDA                        l788 0087                        l789 0093  
                      l797 0A0F                        _abs 099D                        _idx 006F  
                      fsr0 0004                        indf 0000               ___awmod@sign 0075  
             ___flmul@aexp 0032               ___flmul@bexp 0033               ___flmul@sign 002D  
             ___flmul@temp 0038               ___flmul@prod 0034                LCD_Char@dat 0072  
             ___fltol@exp1 0043                       l2000 015E                       l2002 0163  
                     l2010 018B                       ?_abs 0076                       l2100 0ABB  
                     l2020 0A83                       l2004 016C                       l2110 0983  
                     l2102 0AC1                       l2030 0A98                       l2022 0A83  
                     l2006 0180                       l2014 0192                       l2104 0AC7  
                     l2032 0A9E                       l2024 0A89                       l2120 0BFC  
                     l2112 0BDB                       l2200 0F9A                       l2008 0184  
                     l2106 0ACD                       l2034 0AD5                       l2026 0A8D  
                     l2130 0C14                       l2122 0C04                       l2114 0BE4  
                     l2050 09D4                       l2210 0FB0                       l2202 0FA0  
                     l2108 097D                       l2044 0AEC                       l2036 0ADB  
                     l2028 0A94                       l2060 09B4                       l2132 0C28  
                     l2124 0C0C                       l2116 0BEC                       l2052 09D5  
                     l2300 0D1A                       l2220 0FC4                       l2212 0FB2  
                     l2204 0FA2                       l2140 0F1F                       l2046 0AF8  
                     l2038 0AEB                       l2062 09B6                       l2126 0C0D  
                     l2118 0BF4                       l2070 0A5C                       l2054 09DE  
                     l2302 0D23                       l2230 0FD7                       l2222 0FC6  
                     l2214 0FB7                       l2206 0FA9                       l2142 0F34  
                     l2310 0DAB                       l2048 0AFA                       l2064 09B8  
                     l2056 09AF                       l2080 0A7D                       l2072 0A5E  
                     l2304 0D33                       l2232 0FDC                       l2224 0FCC  
                     l2240 0FE9                       l2216 0FB9                       l2208 0FAB  
                     l2160 0F4B                       l2152 0F39                       l2144 0F34  
                     l2136 096D                       l2320 0DCF                       l2400 0C98  
                     l2066 09BF                       l2058 09B0                       l2074 0A65  
                     l2250 0992                       l2242 0FEF                       l2234 0FDE  
                     l2226 0FCE                       l2218 0FBD                       l2170 0F60  
                     l2162 0F52                       l2154 0F41                       l2146 0F37  
                     l2138 0973                       l2330 0DF1                       l2322 0DD4  
                     l2306 0DA1                       l2090 0A30                       l2410 0CC8  
                     l2402 0C9E                       l2076 0A69                       l2500 04E3  
                     l2252 0998                       l2260 0B7A                       l2244 0FFC  
                     l2236 0FE3                       l2228 0FD5                       l2180 0F74  
                     l2172 0F62                       l2164 0F54                       l2156 0F43  
                     l2332 0DF6                       l2324 0DDA                       l2316 0DAD  
                     l2308 0DA9                       l2340 01B6                       l2084 0A10  
                     l2420 09F7                       l2404 0CA6                       l2094 0AAA  
                     l2078 0A78                       l2510 04FE                       l2502 04EB  
                     l2430 0E1A                       l2254 0999                       l2262 0B7F  
                     l2238 0FE5                       l2190 0F86                       l2182 0F76  
                     l2166 0F59                       l2158 0F49                       l2174 0F66  
                     l2334 0DFB                       l2326 0DDE                       l2318 0DC4  
                     l2350 01D1                       l2342 01B8                       l2086 0A15  
                     l2422 09F9                       l2414 09ED                       l2406 0CB2  
                     l2096 0AAD                       l2600 07CA                       l2520 057A  
                     l2512 050C                       l2504 04F0                       l2440 0E3F  
                     l2248 098D                       l2264 0B86                       l2256 0B6D  
                     l2280 0CEF                       l2272 0CDE                       l2192 0F8B  
                     l2184 0F7D                       l2176 0F6C                       l2168 0F5B  
                     l2336 0E01                       l2328 0DEB                       l2360 01F8  
                     l2352 01DE                       l2088 0A24                       l2424 0A06  
                     l2416 09F1                       l2408 0CB8                       l2098 0AB5  
                     l2602 07D1                       l2530 05E6                       l2522 0596  
                     l2514 0519                       l2506 04F5                       l2450 0E4D  
                     l2442 0E41                       l2434 0E23                       l2610 0014  
                     l2266 0B8D                       l2258 0B79                       l2290 0D09  
                     l2282 0CF1                       l2274 0CE1                       l2194 0F8D  
                     l2186 0F7F                       l2178 0F6E                       l2370 021D  
                     l2362 0200                       l2354 01E3                       l2338 01AC  
                     l2418 09F5                       l1820 0B42                       l2540 0670  
                     l2532 05F4                       l2524 05B2                       l2516 0534  
                     l2460 0E74                       l2444 0E45                       l2452 0E5D  
                     l2436 0E36                       l2428 0E0F                       l2620 004B  
                     l2612 0024                       l2268 0B9E                       l2292 0D0B  
                     l2284 0CF7                       l2276 0CE7                       l2188 0F84  
                     l2196 0F91                       l2380 022B                       l2372 0227  
                     l2364 0205                       l2356 01E9                       l2348 01BA  
                     l1900 0C53                       l2700 034C                       l1830 0B5E  
                     l1822 0B43                       l2550 0700                       l2542 067E  
                     l2534 0611                       l2526 05BB                       l2518 0550  
                     l2470 04A2                       l2462 0E79                       l2438 0E37  
                     l2630 007D                       l2622 0052                       l2614 0034  
                     l2606 000B                       l2294 0D11                       l2286 0CF8  
                     l2278 0CE9                       l2198 0F98                       l2390 028D  
                     l2382 0242                       l2374 0229                       l2366 020A  
                     l2358 01EB                       l1902 0C57                       l1910 0C74  
                     l2710 0385                       l2702 0363                       l1832 0B5F  
                     l1824 0B44                       l1816 0B38                       l2560 0725  
                     l2552 070E                       l2544 06A9                       l2536 0628  
                     l2528 05C9                       l2480 04B9                       l2472 04A6  
                     l2464 0498                       l2640 00B0                       l2632 0081  
                     l2624 0054                       l2608 0010                       l2296 0D13  
                     l2288 0D01                       l2384 024F                       l2368 0210  
                     l1840 0D43                       l1912 0C79                       l1904 0C61  
                     l1920 0E8B                       l2392 0C83                       l2720 040A  
                     l2712 0393                       l2704 0367                       l1834 0B60  
                     l1826 0B47                       l1818 0B41                       l2570 0748  
                     l2554 0717                       l2562 072B                       l2546 06CF  
                     l2538 0645                       l2490 04CE                       l2482 04BB  
                     l2474 04A7                       l2466 049C                       l2458 0E64  
                     l2642 00B4                       l2634 008B                       l2626 0062  
                     l2618 0040                       l2298 0D19                       l2386 027C  
                     l1850 0D55                       l1842 0D48                       l1914 0C7E  
                     l1906 0C67                       l1922 0E91                       l2394 0C91  
                     l2730 0436                       l2722 0413                       l2714 03A2  
                     l2706 0376                       l2650 029F                       l1940 0B02  
                     l1828 0B50                       l2580 0767                       l2564 072F  
                     l2556 071B                       l2548 06F7                       l2492 04CF  
                     l2484 04C3                       l2476 04AC                       l2468 049E  
                     l2644 00B5                       l2636 0095                       l2628 0072  
                     l2388 0287                       l1860 0D69                       l1852 0D57  
                     l1844 0D4A                       l1836 0D3E                       l1908 0C6E  
                     l1932 099D                       l1924 0E98                       l2740 0467  
                     l2732 0448                       l2724 0422                       l2716 03AE  
                     l2708 037F                       l2660 02C6                       l2652 02A4  
                     l1950 0B11                       l1942 0B0B                       l2590 07AD  
                     l2582 0780                       l2574 0750                       l2566 0730  
                     l2558 071C                       l2494 04D4                       l2486 04C6  
                     l2478 04B1                       l2638 00AB                       l1870 0D8C  
                     l1862 0D6D                       l1854 0D5D                       l1846 0D4E  
                     l1838 0D3F                       l1934 09A1                       l1926 0EB0  
                     l1918 0E85                       l2398 0C94                       l2742 0479  
                     l2734 0452                       l2718 03EF                       l2726 0428  
                     l2670 02D7                       l2662 02CB                       l2654 02AD  
                     l1952 0B1A                       l1944 0B0C                       l1960 0A35  
                     l2592 07B7                       l2576 0755                       l2584 0786  
                     l2568 0734                       l2496 04D9                       l2488 04CA  
                     l1864 0D7E                       l1856 0D60                       l1872 0D92  
                     l1848 0D53                       l1880 0C2C                       l1936 09A2  
                     l1928 0EE2                       l2736 0459                       l2744 047D  
                     l2728 042D                       l2680 02F3                       l2672 02DA  
                     l2664 02CE                       l2656 02BC                       l2648 029B  
                     l1954 0B28                       l1946 0B0D                       l1962 0A36  
                     l2594 07B9                       l2586 0793                       l2578 0763  
                     l2498 04E1                       l1874 0D97                       l1866 0D84  
                     l1858 0D67                       l1890 0C3C                       l1882 0C2D  
                     l1970 00CE                       l2746 048C                       l2738 045E  
                     l2690 0314                       l2682 02FB                       l2674 02DF  
                     l2666 02D1                       l2658 02C1                       l1956 0B29  
                     l1948 0B0E                       l1964 0A44                       l2596 07C5  
                     l2588 079E                       l1876 0D9C                       l1868 0D85  
                     l1892 0C41                       l1884 0C31                       l1980 00F2  
                     l1972 00D2                       l2748 0491                       l2692 0323  
                     l2684 0300                       l2676 02E4                       l2668 02D4  
                     l1958 0B2A                       l1966 0A4A                       l2598 07C9  
                     l1894 0C47                       l1886 0C36                       l1990 011A  
                     l1982 00FE                       l1974 00DA                       l2694 032B  
                     l2686 030A                       l2678 02ED                       l1896 0C4A  
                     l1888 0C38                       l1992 0139                       l1984 010C  
                     l1976 00E0                       l1968 00BE                       l2696 033E  
                     l2688 0312                       l1898 0C51                       l1994 014E  
                     l1986 0111                       l1978 00E6                       l2698 0343  
                     l1996 0154                       l1988 0113                       l1998 0159  
                     STR_1 0837                       STR_2 0868                       STR_3 0827  
                     STR_4 087D                       STR_5 0859                       STR_6 0873  
                     STR_7 0849                       STR_8 0838                       STR_9 0815  
                     u2010 0A7D                       u2011 0A7C                       u2100 0F6C  
                     u2020 0A30                       u2005 0A70                       u2101 0F6B  
                     u2021 0A2F                       u2030 0C13                       u2110 0F7C  
                     u2031 0C12                       u2111 0F7B                       u3000 00A0  
                     u2200 0FC4                       u2120 0F83                       u2040 0F25  
                     u2201 0FC3                       u2121 0F82                       u3010 00B0  
                     u2210 0FD4                       u2130 0F8A                       u2050 0F41  
                     u3011 00AF                       u2211 0FD3                       u2131 0F89  
                     u2051 0F40                       u3020 00B4                       u2300 0D09  
                     u2220 0FDB                       u2140 0F91                       u2060 0F51  
                     u3021 00B3                       u3005 009B                       u2301 0D08  
                     u2221 0FDA                       u2141 0F90                       u2061 0F50  
                     u2310 0D11                       u2230 0FE2                       u2150 0F98  
                     u2070 0F58                       u3030 0300                       u2311 0D10  
                     u2231 0FE1                       u2151 0F97                       u2071 0F57  
                     u3031 02FF                       u2320 0D19                       u2240 0FE9  
                     u2160 0FA8                       u2080 0F5F                       u2400 0CB8  
                     u3040 032B                       u2321 0D18                       u2241 0FE8  
                     u2161 0FA7                       u2081 0F5E                       u2401 0CB7  
                     u3041 032A                       u2330 0D3D                       u2250 0FFC  
                     u2170 0FAF                       u2090 0F66                       u1610 0D7E  
                     u2410 0CC8                       u3050 033E                       u2331 0D3C  
                     u2251 0FFB                       u2171 0FAE                       u2091 0F65  
                     u1611 0D7D                       u2411 0CC7                       u3107 041B  
                     u3051 033D                       u2500 0E74                       u2420 0E1A  
                     u2260 0B86                       u2180 0FB6                       u2340 0E0E  
                     u1700 0C61                       u3060 0459                       u2501 0E73  
                     u2421 0E19                       u2261 0B85                       u2181 0FB5  
                     u2341 0E0D                       u1605 0D6E                       u1701 0C60  
                     u3117 0485                       u3061 0458                       u2510 0E79  
                     u2430 0E31                       u2270 0CE7                       u2190 0FBD  
                     u2350 021D                       u1630 0D92                       u1550 0D43  
                     u2511 0E78                       u2335 0D39                       u2271 0CE6  
                     u2255 0FF8                       u2191 0FBC                       u3207 0F9C  
                     u2351 021C                       u3127 01CA                       u1631 0D91  
                     u1615 0D7A                       u1551 0D42                       u2520 04A6  
                     u2440 0E45                       u2280 0CEF                       u2360 029A  
                     u1640 0D97                       u1560 0D4E                       u1720 0C74  
                     u1545 0B53                       u2601 0542                       u2521 04A5  
                     u2441 0E44                       u2281 0CEE                       u3217 0FC8  
                     u2345 0E0A                       u2361 0299                       u3137 01F1  
                     u1641 0D96                       u1625 0D86                       u1561 0D4D  
                     u1721 0C73                       u1705 0C5D                       u1810 0A5A  
                     u2602 0549                       u2530 04AC                       u2450 0E4C  
                     u2290 0CF7                       u1570 0D5D                       u1730 0C79  
                     u1650 0C31                       u2370 0C91                       u1811 0A59  
                     u2611 055E                       u2603 0550                       u2531 04AB  
                     u2451 0E4B                       u2435 0E2C                       u3227 09D9  
                     u2291 0CF6                       u3147 023B                       u2355 0219  
                     u1571 0D5C                       u1731 0C78                       u1715 0C68  
                     u1651 0C30                       u2371 0C90                       u2612 0565  
                     u2540 04B1                       u1660 0C3C                       u1740 0E8B  
                     u1900 0163                       u1820 00CE                       u2380 0CA6  
                     u1805 0B1D                       u2701 068D                       u2621 0588  
                     u2613 056C                       u2541 04B0                       u3237 0B7C  
                     u2365 0296                       u3157 0268                       u1661 0C3B  
                     u1741 0E8A                       u1901 0162                       u1821 00CD  
                     u2381 0CA5                       u3077 02B5                       u2710 06B5  
                     u2702 0694                       u2622 058F                       u2550 04CE  
                     u2470 0E5C                       u1590 0D6D                       u1670 0C47  
                     u1750 0E91                       u1910 018A                       u1830 00F2  
                     u2390 0CB2                       u3247 0B4B                       u2703 069B  
                     u2631 05A4                       u2623 0596                       u2551 04CD  
                     u2471 0E5B                       u3167 0DBD                       u1591 0D6C  
                     u1671 0C46                       u1751 0E90                       u1911 0189  
                     u1831 00F1                       u2391 0CB1                       u3087 031C  
                     u1920 0A89                       u2800 0734                       u2632 05AB  
                     u2560 04D4                       u2480 0E63                       u1760 0EB0  
                     u1840 00FE                       u3257 0B67                       u1921 0A88  
                     u2801 0733                       u2721 06C1                       u2633 05B2  
                     u2561 04D3                       u2481 0E62                       u2465 0E4E  
                     u3177 0DE4                       u1585 0D61                       u1761 0EAF  
                     u1841 00FD                       u3097 036F                       u1930 0ADB  
                     u2810 0748                       u2730 06DD                       u2722 06C8  
                     u2570 04D9                       u1690 0C57                       u1770 0EE2  
                     u1850 0118                       u3267 0AB1                       u1931 0ADA  
                     u2811 0747                       u2723 06CF                       u2715 06B0  
                     u2651 05D8                       u2571 04D8                       u3187 0F45  
                     u1691 0C56                       u1771 0EE1                       u1851 0116  
                     u2820 074F                       u2652 05DF                       u2580 04F0  
                     u2900 0014                       u1780 0F03                       u1860 0119  
                     u3277 0987                       u2821 074E                       u2741 06E9  
                     u2661 0603                       u2653 05E6                       u2645 05B4  
                     u2581 04EF                       u2901 0013                       u3197 0F70  
                     u1685 0C4B                       u1950 0B00                       u2830 0755  
                     u2742 06F0                       u2662 060A                       u2590 04F5  
                     u2910 0034                       u1790 09A1                       u1870 0154  
                     u3287 0B15                       u1951 0AFF                       u2831 0754  
                     u2743 06F7                       u2735 06D8                       u2663 0611  
                     u2591 04F4                       u2495 0E66                       u2911 0033  
                     u1791 09A0                       u1775 0EDE                       u1871 0153  
                     u2840 0767                       u1960 09EC                       u1880 0159  
                     u3297 0B31                       u1945 0ADE                       u2841 0766  
                     u2681 0637                       u1961 09EB                       u1881 0158  
                     u1970 09B4                       u2850 0776                       u2770 071B  
                     u2682 063E                       u2930 0051                       u1890 015E  
                     u1971 09B3                       u2771 071A                       u2755 06F9  
                     u2691 0662                       u2683 0645                       u2675 0613  
                     u2931 0050                       u1891 015D                       u1980 09BF  
                     u2860 0793                       u2692 0669                       u1981 09BE  
                     u2861 0792                       u2765 0710                       u2693 0670  
                     u2925 0043                       u1990 0A69                       u2870 07AD  
                     u2790 072F                       u2950 0071                       u1991 0A68  
                     u2871 07AC                       u2855 0771                       u2791 072E  
                     u2951 0070                       u2880 07C9                       u2881 07C8  
                     u2865 078F                       u2785 071E                       u2945 0063  
                     u2970 0081                       u2890 0010                       u2875 07A9  
                     u2971 0080                       u2891 000F                       u2980 0087  
                     u2981 0086                       u2965 0076                       u2990 008B  
                     u2991 008A                       abs@a 0076                       _dbuf 0190  
                     _main 029B                       _prec 00DA                       btemp 007E  
                     start 0000              _LCD_String_xy 0A82          ___bmul@multiplier 0072  
                    ??_abs 0078           __end_of_LCD_Char 0B6D           __end_of_LCD_Init 0AD4  
            ___fltol@sign1 0042                      ?_main 0070            __end_of___awdiv 0DA1  
          __end_of___awmod 0C83            __end_of___flmul 07DA            __end_of___fltol 0E85  
                    _ANSEL 0188            ___awdiv@divisor 0070            ___awdiv@counter 0074  
             vfpfcnvrt@fmt 0022                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _Lmain 0BDB                      _flags 006E               ?_keypad_init 0070  
                    _fputc 0E85                      _width 00D8                      _putch 0009  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 0A10            __end_of_strncmp 0CDB             ?_LCD_String_xy 0075  
  __end_of_LCD_Custom_Char 0B01            __initialization 07DA               __end_of_main 0498  
                   ??_main 0044          __end_of_LCD_Clear 098D                     ?_Lmain 0070  
      keypad_getkey@letras 0020                     ?_fputc 0070                     _ADRESH 001E  
                   _ADRESL 009E           ___awdiv@dividend 0072                     ?_putch 0070  
                   _ANSELH 0189           LCD_String_xy@msg 0076           LCD_String_xy@pos 0075  
         LCD_String_xy@row 0077           __end_of_adc_init 099D           __end_of_adc_read 0BA3  
                   _OSCCON 008F              vfpfcnvrt@done 0026           __end_of___xxtofl 00BE  
                   Lmain@i 0079               vfprintf@cfmt 007D                     ___bmul 09AE  
                ??___awdiv 0074                  ??___awmod 0074                  ??___flmul 0028  
                ??___fltol 003E           ___awdiv@quotient 0076            ___awmod@divisor 0070  
          ___awmod@counter 0074              main@value_adc 006B           __end_of_password 0815  
                   fputc@c 0070           LCD_Custom_Char@i 0076        delay_ms_variable@ms 0070  
                   putch@c 0070           __end_of_vfprintf 0A35                  ??_sprintf 0037  
                ??_strncmp 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                  ?_LCD_Char 0070    __end_of__initialization 07FC  
                ?_LCD_Init 0070            ??_LCD_String_xy 0077                 ___fltol@f1 003A  
      ___bmul@multiplicand 0070              __end_of_Lmain 0C2C           ?_LCD_Custom_Char 0073  
           __pcstackCOMMON 0070               __pidataBANK1 0BA3              __end_of_fputc 0F1F  
            __end_of_putch 000A               ??_LCD_String 0075             _OPTION_REGbits 0081  
                  ??_Lmain 0079                    ??_fputc 0074                    ??_putch 0070  
               __pbssBANK0 006E                 __pbssBANK1 00D8                 __pbssBANK3 0190  
               ??_LCD_Char 0070                 _character1 00D0                 _character2 00C8  
               _character3 00C0                 _character4 00B8                 _character5 00B0  
               ??_LCD_Init 0073         __end_of_LCD_String 0A5B          __end_of__Umul8_16 0A82  
               __pmaintext 029B                    ?___bmul 0070                  ?_adc_init 0070  
                ?_adc_read 0070              _keypad_getkey 0F1F                  ?___xxtofl 0070  
              secuencia1@i 0073                secuencia5@i 0020          _delay_ms_variable 09D4  
       ?_delay_ms_variable 0070                 __stringtab 0800          __end_of_blink_led 0D3E  
      ??_delay_ms_variable 0072              LCD_String@msg 0073                    ___awdiv 0D3E  
                  ___awmod 0C2C                    ___flmul 0498                    ___fltol 0E0F  
                ?_vfprintf 002D                    _celsius 00DC                 ??_adc_init 0070  
               ??_adc_read 0072                    __ptext1 0C83                    __ptext2 09ED  
                  __ptext3 0A10                    __ptext4 00BE                    __ptext5 0E85  
                  __ptext6 0009                    __ptext7 099D                    __ptext8 0C2C  
                  __ptext9 0D3E             ?_keypad_getkey 0070  __end_of_delay_ms_variable 09ED  
               ??___xxtofl 0074           ___awmod@dividend 0072                  _LCD_Clear 097D  
                  _sprintf 09ED                    main@key 006D                    clrloop0 0976  
                  main@luz 0069                    _strncmp 0C83       end_of_initialization 07FC  
               _secuencia1 0DA1                 _secuencia5 01AC                    fputc@fp 0072  
           LCD_Command@cmd 0072          __end_of_vfpfcnvrt 01AC           vfpfcnvrt@convarg 0028  
               ??_vfprintf 007D                  _PORTCbits 0007                  _PORTEbits 0009  
            ___xxtofl@sign 0078                 ?_LCD_Clear 0070                ___flmul@grs 002E  
    main@StringTemperature 0047              ??_LCD_Command 0070             __end_of___bmul 09C1  
              vfpfcnvrt@ap 0023                vfpfcnvrt@cp 0027                vfpfcnvrt@fp 0020  
          ??_keypad_getkey 0070         keypad_getkey@F1398 00A0        start_initialization 07DA  
              __end_of_abs 09AE                ?_secuencia1 0070                ?_secuencia5 0070  
       keypad_getkey@valor 0030      __end_of_LCD_String_xy 0AAA          adc_read@value_adc 0076  
              vfprintf@fmt 002F                   ??___bmul 0071                 init_fetch0 09C1  
                __Umul8_16 0A5B                __pdataBANK1 00A0        __end_of_LCD_Command 0B37  
                ___flmul@a 0024                  ___flmul@b 0020            adc_read@channel 0070  
                ___latbits 0002              __pcstackBANK0 0020                ??_LCD_Clear 0073  
            ??_keypad_init 0070                  _blink_led 0CDB                   ?___awdiv 0070  
                 ?___awmod 0070                   ?___flmul 0020                   ?___fltol 003A  
               ?__Umul8_16 0070                  __pstrings 0800      blink_led@elapsed_time 0020  
    LCD_String_xy@location 0078                   ?_sprintf 0031                   ?_strncmp 0070  
                 _LCD_Char 0B37                   _LCD_Init 0AAA                  _pass_user 00E0  
      __end_of_keypad_init 0975                  clear_ram0 0975                 ?_blink_led 0074  
              _LCD_Command 0B01                  _vfpfcnvrt 00BE                 _ADCON0bits 001F  
              __stringbase 080F                 _ADCON1bits 009F          ??_LCD_Custom_Char 0074  
               vfpfcnvrt@c 002C                 vfprintf@ap 0030                 vfprintf@fp 002D  
              ??__Umul8_16 0072                 ?_vfpfcnvrt 0020         __end_of__stringtab 0810  
                 _adc_init 098D                   _adc_read 0B6D                 sprintf@fmt 0032  
                 ___xxtofl 000A                   __ptext10 01AC                   __ptext11 0DA1  
                 __ptext20 0498                   __ptext12 096D                   __ptext21 0A5B  
                 __ptext13 0F1F                   __ptext30 0B01                   __ptext22 0BDB  
                 __ptext14 0CDB                   __ptext23 09AE                   __ptext15 09D4  
                 __ptext24 0A82                   __ptext16 0B6D                   __ptext25 0A35  
                 __ptext17 098D                   __ptext26 0AD4                   __ptext18 000A  
                 __ptext27 0B37                   __ptext19 0E0F                   __ptext28 0AAA  
                 __ptext29 097D                _keypad_init 096D               ??_secuencia1 0070  
             ??_secuencia5 0070                   _intentos 00DE                   _password 0810  
        blink_led@duration 0078          blink_led@off_time 0076                ??_blink_led 007A  
             blink_led@led 0022                   _vfprintf 0A10                 _LCD_String 0A35  
          secuencia5@i_297 0022      __end_of_keypad_getkey 1000            main@temperatura 0067  
       __end_of_secuencia1 0E0F         __end_of_secuencia5 029B            secuencia5@var12 0024  
                 init_ram0 09C5         LCD_Custom_Char@loc 0075         LCD_Custom_Char@msg 0073  
                sprintf@ap 0038                  stringcode 080A           blink_led@on_time 0074  
           secuencia1@var3 0077             secuencia1@var4 0079             secuencia1@var5 0075  
           secuencia5@var1 002A             secuencia5@var2 002C             secuencia5@var6 002E  
           secuencia5@var7 0028             secuencia5@var8 0026                ??_vfpfcnvrt 0024  
   __Umul8_16@multiplicand 0070                   sprintf@f 0039                   sprintf@s 0031  
                 strncmp@l 0070                   strncmp@n 0072                   strncmp@r 0071  
                 stringdir 080A                   stringtab 0800             keypad_getkey@i 0031  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  

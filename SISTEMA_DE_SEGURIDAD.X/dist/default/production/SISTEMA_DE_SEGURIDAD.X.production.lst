

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Oct 03 15:27:21 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=2,noexec
     6                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,space=0,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    16                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34     0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0004                     fsr             equ	4
    70     0004                     fsr0            equ	4
    71     0000                     indf            equ	0
    72     0000                     indf0           equ	0
    73     0002                     pc              equ	2
    74     0002                     pcl             equ	2
    75     000A                     pclath          equ	10
    76     0003                     status          equ	3
    77     0000                     INDF            equ	0	;# 
    78     0001                     TMR0            equ	1	;# 
    79     0002                     PCL             equ	2	;# 
    80     0003                     STATUS          equ	3	;# 
    81     0004                     FSR             equ	4	;# 
    82     0005                     PORTA           equ	5	;# 
    83     0006                     PORTB           equ	6	;# 
    84     0007                     PORTC           equ	7	;# 
    85     0008                     PORTD           equ	8	;# 
    86     0009                     PORTE           equ	9	;# 
    87     000A                     PCLATH          equ	10	;# 
    88     000B                     INTCON          equ	11	;# 
    89     000C                     PIR1            equ	12	;# 
    90     000D                     PIR2            equ	13	;# 
    91     000E                     TMR1            equ	14	;# 
    92     000E                     TMR1L           equ	14	;# 
    93     000F                     TMR1H           equ	15	;# 
    94     0010                     T1CON           equ	16	;# 
    95     0011                     TMR2            equ	17	;# 
    96     0012                     T2CON           equ	18	;# 
    97     0013                     SSPBUF          equ	19	;# 
    98     0014                     SSPCON          equ	20	;# 
    99     0015                     CCPR1           equ	21	;# 
   100     0015                     CCPR1L          equ	21	;# 
   101     0016                     CCPR1H          equ	22	;# 
   102     0017                     CCP1CON         equ	23	;# 
   103     0018                     RCSTA           equ	24	;# 
   104     0019                     TXREG           equ	25	;# 
   105     001A                     RCREG           equ	26	;# 
   106     001B                     CCPR2           equ	27	;# 
   107     001B                     CCPR2L          equ	27	;# 
   108     001C                     CCPR2H          equ	28	;# 
   109     001D                     CCP2CON         equ	29	;# 
   110     001E                     ADRESH          equ	30	;# 
   111     001F                     ADCON0          equ	31	;# 
   112     0081                     OPTION_REG      equ	129	;# 
   113     0085                     TRISA           equ	133	;# 
   114     0086                     TRISB           equ	134	;# 
   115     0087                     TRISC           equ	135	;# 
   116     0088                     TRISD           equ	136	;# 
   117     0089                     TRISE           equ	137	;# 
   118     008C                     PIE1            equ	140	;# 
   119     008D                     PIE2            equ	141	;# 
   120     008E                     PCON            equ	142	;# 
   121     008F                     OSCCON          equ	143	;# 
   122     0090                     OSCTUNE         equ	144	;# 
   123     0091                     SSPCON2         equ	145	;# 
   124     0092                     PR2             equ	146	;# 
   125     0093                     SSPADD          equ	147	;# 
   126     0093                     SSPMSK          equ	147	;# 
   127     0093                     MSK             equ	147	;# 
   128     0094                     SSPSTAT         equ	148	;# 
   129     0095                     WPUB            equ	149	;# 
   130     0096                     IOCB            equ	150	;# 
   131     0097                     VRCON           equ	151	;# 
   132     0098                     TXSTA           equ	152	;# 
   133     0099                     SPBRG           equ	153	;# 
   134     009A                     SPBRGH          equ	154	;# 
   135     009B                     PWM1CON         equ	155	;# 
   136     009C                     ECCPAS          equ	156	;# 
   137     009D                     PSTRCON         equ	157	;# 
   138     009E                     ADRESL          equ	158	;# 
   139     009F                     ADCON1          equ	159	;# 
   140     0105                     WDTCON          equ	261	;# 
   141     0107                     CM1CON0         equ	263	;# 
   142     0108                     CM2CON0         equ	264	;# 
   143     0109                     CM2CON1         equ	265	;# 
   144     010C                     EEDATA          equ	268	;# 
   145     010C                     EEDAT           equ	268	;# 
   146     010D                     EEADR           equ	269	;# 
   147     010E                     EEDATH          equ	270	;# 
   148     010F                     EEADRH          equ	271	;# 
   149     0185                     SRCON           equ	389	;# 
   150     0187                     BAUDCTL         equ	391	;# 
   151     0188                     ANSEL           equ	392	;# 
   152     0189                     ANSELH          equ	393	;# 
   153     018C                     EECON1          equ	396	;# 
   154     018D                     EECON2          equ	397	;# 
   155     0000                     INDF            equ	0	;# 
   156     0001                     TMR0            equ	1	;# 
   157     0002                     PCL             equ	2	;# 
   158     0003                     STATUS          equ	3	;# 
   159     0004                     FSR             equ	4	;# 
   160     0005                     PORTA           equ	5	;# 
   161     0006                     PORTB           equ	6	;# 
   162     0007                     PORTC           equ	7	;# 
   163     0008                     PORTD           equ	8	;# 
   164     0009                     PORTE           equ	9	;# 
   165     000A                     PCLATH          equ	10	;# 
   166     000B                     INTCON          equ	11	;# 
   167     000C                     PIR1            equ	12	;# 
   168     000D                     PIR2            equ	13	;# 
   169     000E                     TMR1            equ	14	;# 
   170     000E                     TMR1L           equ	14	;# 
   171     000F                     TMR1H           equ	15	;# 
   172     0010                     T1CON           equ	16	;# 
   173     0011                     TMR2            equ	17	;# 
   174     0012                     T2CON           equ	18	;# 
   175     0013                     SSPBUF          equ	19	;# 
   176     0014                     SSPCON          equ	20	;# 
   177     0015                     CCPR1           equ	21	;# 
   178     0015                     CCPR1L          equ	21	;# 
   179     0016                     CCPR1H          equ	22	;# 
   180     0017                     CCP1CON         equ	23	;# 
   181     0018                     RCSTA           equ	24	;# 
   182     0019                     TXREG           equ	25	;# 
   183     001A                     RCREG           equ	26	;# 
   184     001B                     CCPR2           equ	27	;# 
   185     001B                     CCPR2L          equ	27	;# 
   186     001C                     CCPR2H          equ	28	;# 
   187     001D                     CCP2CON         equ	29	;# 
   188     001E                     ADRESH          equ	30	;# 
   189     001F                     ADCON0          equ	31	;# 
   190     0081                     OPTION_REG      equ	129	;# 
   191     0085                     TRISA           equ	133	;# 
   192     0086                     TRISB           equ	134	;# 
   193     0087                     TRISC           equ	135	;# 
   194     0088                     TRISD           equ	136	;# 
   195     0089                     TRISE           equ	137	;# 
   196     008C                     PIE1            equ	140	;# 
   197     008D                     PIE2            equ	141	;# 
   198     008E                     PCON            equ	142	;# 
   199     008F                     OSCCON          equ	143	;# 
   200     0090                     OSCTUNE         equ	144	;# 
   201     0091                     SSPCON2         equ	145	;# 
   202     0092                     PR2             equ	146	;# 
   203     0093                     SSPADD          equ	147	;# 
   204     0093                     SSPMSK          equ	147	;# 
   205     0093                     MSK             equ	147	;# 
   206     0094                     SSPSTAT         equ	148	;# 
   207     0095                     WPUB            equ	149	;# 
   208     0096                     IOCB            equ	150	;# 
   209     0097                     VRCON           equ	151	;# 
   210     0098                     TXSTA           equ	152	;# 
   211     0099                     SPBRG           equ	153	;# 
   212     009A                     SPBRGH          equ	154	;# 
   213     009B                     PWM1CON         equ	155	;# 
   214     009C                     ECCPAS          equ	156	;# 
   215     009D                     PSTRCON         equ	157	;# 
   216     009E                     ADRESL          equ	158	;# 
   217     009F                     ADCON1          equ	159	;# 
   218     0105                     WDTCON          equ	261	;# 
   219     0107                     CM1CON0         equ	263	;# 
   220     0108                     CM2CON0         equ	264	;# 
   221     0109                     CM2CON1         equ	265	;# 
   222     010C                     EEDATA          equ	268	;# 
   223     010C                     EEDAT           equ	268	;# 
   224     010D                     EEADR           equ	269	;# 
   225     010E                     EEDATH          equ	270	;# 
   226     010F                     EEADRH          equ	271	;# 
   227     0185                     SRCON           equ	389	;# 
   228     0187                     BAUDCTL         equ	391	;# 
   229     0188                     ANSEL           equ	392	;# 
   230     0189                     ANSELH          equ	393	;# 
   231     018C                     EECON1          equ	396	;# 
   232     018D                     EECON2          equ	397	;# 
   233     0000                     INDF            equ	0	;# 
   234     0001                     TMR0            equ	1	;# 
   235     0002                     PCL             equ	2	;# 
   236     0003                     STATUS          equ	3	;# 
   237     0004                     FSR             equ	4	;# 
   238     0005                     PORTA           equ	5	;# 
   239     0006                     PORTB           equ	6	;# 
   240     0007                     PORTC           equ	7	;# 
   241     0008                     PORTD           equ	8	;# 
   242     0009                     PORTE           equ	9	;# 
   243     000A                     PCLATH          equ	10	;# 
   244     000B                     INTCON          equ	11	;# 
   245     000C                     PIR1            equ	12	;# 
   246     000D                     PIR2            equ	13	;# 
   247     000E                     TMR1            equ	14	;# 
   248     000E                     TMR1L           equ	14	;# 
   249     000F                     TMR1H           equ	15	;# 
   250     0010                     T1CON           equ	16	;# 
   251     0011                     TMR2            equ	17	;# 
   252     0012                     T2CON           equ	18	;# 
   253     0013                     SSPBUF          equ	19	;# 
   254     0014                     SSPCON          equ	20	;# 
   255     0015                     CCPR1           equ	21	;# 
   256     0015                     CCPR1L          equ	21	;# 
   257     0016                     CCPR1H          equ	22	;# 
   258     0017                     CCP1CON         equ	23	;# 
   259     0018                     RCSTA           equ	24	;# 
   260     0019                     TXREG           equ	25	;# 
   261     001A                     RCREG           equ	26	;# 
   262     001B                     CCPR2           equ	27	;# 
   263     001B                     CCPR2L          equ	27	;# 
   264     001C                     CCPR2H          equ	28	;# 
   265     001D                     CCP2CON         equ	29	;# 
   266     001E                     ADRESH          equ	30	;# 
   267     001F                     ADCON0          equ	31	;# 
   268     0081                     OPTION_REG      equ	129	;# 
   269     0085                     TRISA           equ	133	;# 
   270     0086                     TRISB           equ	134	;# 
   271     0087                     TRISC           equ	135	;# 
   272     0088                     TRISD           equ	136	;# 
   273     0089                     TRISE           equ	137	;# 
   274     008C                     PIE1            equ	140	;# 
   275     008D                     PIE2            equ	141	;# 
   276     008E                     PCON            equ	142	;# 
   277     008F                     OSCCON          equ	143	;# 
   278     0090                     OSCTUNE         equ	144	;# 
   279     0091                     SSPCON2         equ	145	;# 
   280     0092                     PR2             equ	146	;# 
   281     0093                     SSPADD          equ	147	;# 
   282     0093                     SSPMSK          equ	147	;# 
   283     0093                     MSK             equ	147	;# 
   284     0094                     SSPSTAT         equ	148	;# 
   285     0095                     WPUB            equ	149	;# 
   286     0096                     IOCB            equ	150	;# 
   287     0097                     VRCON           equ	151	;# 
   288     0098                     TXSTA           equ	152	;# 
   289     0099                     SPBRG           equ	153	;# 
   290     009A                     SPBRGH          equ	154	;# 
   291     009B                     PWM1CON         equ	155	;# 
   292     009C                     ECCPAS          equ	156	;# 
   293     009D                     PSTRCON         equ	157	;# 
   294     009E                     ADRESL          equ	158	;# 
   295     009F                     ADCON1          equ	159	;# 
   296     0105                     WDTCON          equ	261	;# 
   297     0107                     CM1CON0         equ	263	;# 
   298     0108                     CM2CON0         equ	264	;# 
   299     0109                     CM2CON1         equ	265	;# 
   300     010C                     EEDATA          equ	268	;# 
   301     010C                     EEDAT           equ	268	;# 
   302     010D                     EEADR           equ	269	;# 
   303     010E                     EEDATH          equ	270	;# 
   304     010F                     EEADRH          equ	271	;# 
   305     0185                     SRCON           equ	389	;# 
   306     0187                     BAUDCTL         equ	391	;# 
   307     0188                     ANSEL           equ	392	;# 
   308     0189                     ANSELH          equ	393	;# 
   309     018C                     EECON1          equ	396	;# 
   310     018D                     EECON2          equ	397	;# 
   311     0000                     INDF            equ	0	;# 
   312     0001                     TMR0            equ	1	;# 
   313     0002                     PCL             equ	2	;# 
   314     0003                     STATUS          equ	3	;# 
   315     0004                     FSR             equ	4	;# 
   316     0005                     PORTA           equ	5	;# 
   317     0006                     PORTB           equ	6	;# 
   318     0007                     PORTC           equ	7	;# 
   319     0008                     PORTD           equ	8	;# 
   320     0009                     PORTE           equ	9	;# 
   321     000A                     PCLATH          equ	10	;# 
   322     000B                     INTCON          equ	11	;# 
   323     000C                     PIR1            equ	12	;# 
   324     000D                     PIR2            equ	13	;# 
   325     000E                     TMR1            equ	14	;# 
   326     000E                     TMR1L           equ	14	;# 
   327     000F                     TMR1H           equ	15	;# 
   328     0010                     T1CON           equ	16	;# 
   329     0011                     TMR2            equ	17	;# 
   330     0012                     T2CON           equ	18	;# 
   331     0013                     SSPBUF          equ	19	;# 
   332     0014                     SSPCON          equ	20	;# 
   333     0015                     CCPR1           equ	21	;# 
   334     0015                     CCPR1L          equ	21	;# 
   335     0016                     CCPR1H          equ	22	;# 
   336     0017                     CCP1CON         equ	23	;# 
   337     0018                     RCSTA           equ	24	;# 
   338     0019                     TXREG           equ	25	;# 
   339     001A                     RCREG           equ	26	;# 
   340     001B                     CCPR2           equ	27	;# 
   341     001B                     CCPR2L          equ	27	;# 
   342     001C                     CCPR2H          equ	28	;# 
   343     001D                     CCP2CON         equ	29	;# 
   344     001E                     ADRESH          equ	30	;# 
   345     001F                     ADCON0          equ	31	;# 
   346     0081                     OPTION_REG      equ	129	;# 
   347     0085                     TRISA           equ	133	;# 
   348     0086                     TRISB           equ	134	;# 
   349     0087                     TRISC           equ	135	;# 
   350     0088                     TRISD           equ	136	;# 
   351     0089                     TRISE           equ	137	;# 
   352     008C                     PIE1            equ	140	;# 
   353     008D                     PIE2            equ	141	;# 
   354     008E                     PCON            equ	142	;# 
   355     008F                     OSCCON          equ	143	;# 
   356     0090                     OSCTUNE         equ	144	;# 
   357     0091                     SSPCON2         equ	145	;# 
   358     0092                     PR2             equ	146	;# 
   359     0093                     SSPADD          equ	147	;# 
   360     0093                     SSPMSK          equ	147	;# 
   361     0093                     MSK             equ	147	;# 
   362     0094                     SSPSTAT         equ	148	;# 
   363     0095                     WPUB            equ	149	;# 
   364     0096                     IOCB            equ	150	;# 
   365     0097                     VRCON           equ	151	;# 
   366     0098                     TXSTA           equ	152	;# 
   367     0099                     SPBRG           equ	153	;# 
   368     009A                     SPBRGH          equ	154	;# 
   369     009B                     PWM1CON         equ	155	;# 
   370     009C                     ECCPAS          equ	156	;# 
   371     009D                     PSTRCON         equ	157	;# 
   372     009E                     ADRESL          equ	158	;# 
   373     009F                     ADCON1          equ	159	;# 
   374     0105                     WDTCON          equ	261	;# 
   375     0107                     CM1CON0         equ	263	;# 
   376     0108                     CM2CON0         equ	264	;# 
   377     0109                     CM2CON1         equ	265	;# 
   378     010C                     EEDATA          equ	268	;# 
   379     010C                     EEDAT           equ	268	;# 
   380     010D                     EEADR           equ	269	;# 
   381     010E                     EEDATH          equ	270	;# 
   382     010F                     EEADRH          equ	271	;# 
   383     0185                     SRCON           equ	389	;# 
   384     0187                     BAUDCTL         equ	391	;# 
   385     0188                     ANSEL           equ	392	;# 
   386     0189                     ANSELH          equ	393	;# 
   387     018C                     EECON1          equ	396	;# 
   388     018D                     EECON2          equ	397	;# 
   389                           
   390                           	psect	idataBANK0
   391     0294                     __pidataBANK0:
   392                           
   393                           ;initializer for _character5
   394     0294  3400               	retlw	0
   395     0295  340E               	retlw	14
   396     0296  3411               	retlw	17
   397     0297  3411               	retlw	17
   398     0298  3411               	retlw	17
   399     0299  340A               	retlw	10
   400     029A  341B               	retlw	27
   401     029B  3400               	retlw	0
   402                           
   403                           ;initializer for _character4
   404     029C  340A               	retlw	10
   405     029D  340A               	retlw	10
   406     029E  340A               	retlw	10
   407     029F  341B               	retlw	27
   408     02A0  340A               	retlw	10
   409     02A1  340A               	retlw	10
   410     02A2  340A               	retlw	10
   411     02A3  3400               	retlw	0
   412                           
   413                           ;initializer for _character3
   414     02A4  3412               	retlw	18
   415     02A5  3414               	retlw	20
   416     02A6  3418               	retlw	24
   417     02A7  3410               	retlw	16
   418     02A8  3418               	retlw	24
   419     02A9  3415               	retlw	21
   420     02AA  3413               	retlw	19
   421     02AB  3417               	retlw	23
   422                           
   423                           ;initializer for _character2
   424     02AC  3411               	retlw	17
   425     02AD  3419               	retlw	25
   426     02AE  341D               	retlw	29
   427     02AF  341F               	retlw	31
   428     02B0  341D               	retlw	29
   429     02B1  3419               	retlw	25
   430     02B2  3411               	retlw	17
   431     02B3  3400               	retlw	0
   432                           
   433                           ;initializer for _character1
   434     02B4  3400               	retlw	0
   435     02B5  341F               	retlw	31
   436     02B6  340A               	retlw	10
   437     02B7  340A               	retlw	10
   438     02B8  340A               	retlw	10
   439     02B9  340A               	retlw	10
   440     02BA  3409               	retlw	9
   441     02BB  3400               	retlw	0
   442                           
   443                           	psect	idataBANK1
   444     0205                     __pidataBANK1:
   445                           
   446                           ;initializer for keypad_getkey@F1398
   447     0205  3431               	retlw	49
   448     0206  3432               	retlw	50
   449     0207  3433               	retlw	51
   450     0208  3441               	retlw	65
   451     0209  3434               	retlw	52
   452     020A  3435               	retlw	53
   453     020B  3436               	retlw	54
   454     020C  3442               	retlw	66
   455     020D  3437               	retlw	55
   456     020E  3438               	retlw	56
   457     020F  3439               	retlw	57
   458     0210  3443               	retlw	67
   459     0211  342A               	retlw	42
   460     0212  3430               	retlw	48
   461     0213  3423               	retlw	35
   462     0214  3444               	retlw	68
   463                           
   464                           	psect	strings
   465     0003                     __pstrings:
   466     0003                     stringtab:
   467     0003                     __stringtab:
   468     0003                     stringcode:	
   469                           ;	String table - string pointers are 1 byte each
   470                           
   471     0003                     stringdir:
   472     0003  3000               	movlw	high stringdir
   473     0004  008A               	movwf	10
   474     0005  0804               	movf	4,w
   475     0006  0A84               	incf	4,f
   476     0007  0782               	addwf	2,f
   477     0008                     __stringbase:
   478     0008  3400               	retlw	0
   479     0009                     __end_of__stringtab:
   480     0009                     _password:
   481     0009  3430               	retlw	48
   482     000A  3439               	retlw	57
   483     000B  3432               	retlw	50
   484     000C  3436               	retlw	54
   485     000D  3400               	retlw	0
   486     000E                     __end_of_password:
   487     0005                     _PORTA          set	5
   488     0008                     _PORTD          set	8
   489     0005                     _PORTAbits      set	5
   490     0006                     _PORTB          set	6
   491     0007                     _PORTCbits      set	7
   492     0007                     _PORTC          set	7
   493     0088                     _TRISD          set	136
   494     0085                     _TRISA          set	133
   495     008F                     _OSCCON         set	143
   496     0081                     _OPTION_REGbits set	129
   497     0086                     _TRISB          set	134
   498     0087                     _TRISC          set	135
   499     0189                     _ANSELH         set	393
   500     0188                     _ANSEL          set	392
   501     000E                     STR_7:
   502     000E  3473               	retlw	115	;'s'
   503     000F  3469               	retlw	105	;'i'
   504     0010  3473               	retlw	115	;'s'
   505     0011  3474               	retlw	116	;'t'
   506     0012  3465               	retlw	101	;'e'
   507     0013  346D               	retlw	109	;'m'
   508     0014  3461               	retlw	97	;'a'
   509     0015  3420               	retlw	32	;' '
   510     0016  3462               	retlw	98	;'b'
   511     0017  346C               	retlw	108	;'l'
   512     0018  346F               	retlw	111	;'o'
   513     0019  3471               	retlw	113	;'q'
   514     001A  3475               	retlw	117	;'u'
   515     001B  3465               	retlw	101	;'e'
   516     001C  3461               	retlw	97	;'a'
   517     001D  3464               	retlw	100	;'d'
   518     001E  346F               	retlw	111	;'o'
   519     001F  3400               	retlw	0
   520     0020                     STR_3:
   521     0020  3450               	retlw	80	;'P'
   522     0021  3472               	retlw	114	;'r'
   523     0022  3465               	retlw	101	;'e'
   524     0023  3473               	retlw	115	;'s'
   525     0024  3473               	retlw	115	;'s'
   526     0025  3420               	retlw	32	;' '
   527     0026  3461               	retlw	97	;'a'
   528     0027  3420               	retlw	32	;' '
   529     0028  344B               	retlw	75	;'K'
   530     0029  3465               	retlw	101	;'e'
   531     002A  3479               	retlw	121	;'y'
   532     002B  3420               	retlw	32	;' '
   533     002C  3420               	retlw	32	;' '
   534     002D  3420               	retlw	32	;' '
   535     002E  3420               	retlw	32	;' '
   536     002F  3420               	retlw	32	;' '
   537     0030  3400               	retlw	0
   538     0031                     STR_6:
   539     0031  3443               	retlw	67	;'C'
   540     0032  346C               	retlw	108	;'l'
   541     0033  3461               	retlw	97	;'a'
   542     0034  3476               	retlw	118	;'v'
   543     0035  3465               	retlw	101	;'e'
   544     0036  3420               	retlw	32	;' '
   545     0037  3449               	retlw	73	;'I'
   546     0038  346E               	retlw	110	;'n'
   547     0039  3463               	retlw	99	;'c'
   548     003A  346F               	retlw	111	;'o'
   549     003B  3472               	retlw	114	;'r'
   550     003C  3472               	retlw	114	;'r'
   551     003D  3465               	retlw	101	;'e'
   552     003E  3463               	retlw	99	;'c'
   553     003F  3474               	retlw	116	;'t'
   554     0040  3461               	retlw	97	;'a'
   555     0041  3400               	retlw	0
   556     0042                     STR_5:
   557     0042  3443               	retlw	67	;'C'
   558     0043  346C               	retlw	108	;'l'
   559     0044  3461               	retlw	97	;'a'
   560     0045  3476               	retlw	118	;'v'
   561     0046  3465               	retlw	101	;'e'
   562     0047  3420               	retlw	32	;' '
   563     0048  3443               	retlw	67	;'C'
   564     0049  346F               	retlw	111	;'o'
   565     004A  3472               	retlw	114	;'r'
   566     004B  3472               	retlw	114	;'r'
   567     004C  3465               	retlw	101	;'e'
   568     004D  3463               	retlw	99	;'c'
   569     004E  3474               	retlw	116	;'t'
   570     004F  3461               	retlw	97	;'a'
   571     0050  3400               	retlw	0
   572     0051                     STR_1:
   573     0051  342A               	retlw	42	;'*'
   574     0052  3400               	retlw	0
   575     0051                     STR_4           equ	STR_1
   576     0030                     STR_2           equ	STR_3+16
   577                           
   578                           	psect	cinit
   579     07D9                     start_initialization:	
   580                           ; #config settings
   581                           
   582     07D9                     __initialization:
   583                           
   584                           ; Initialize objects allocated to BANK1
   585     07D9  1383               	bcf	3,7	;select IRP bank0
   586     07DA  30B0               	movlw	low (__pdataBANK1+16)
   587     07DB  00FD               	movwf	btemp+-1
   588     07DC  3002               	movlw	high __pidataBANK1
   589     07DD  00FE               	movwf	btemp
   590     07DE  3005               	movlw	low __pidataBANK1
   591     07DF  00FF               	movwf	btemp+1
   592     07E0  30A0               	movlw	low __pdataBANK1
   593     07E1  0084               	movwf	4
   594     07E2  120A  118A  222C  120A  118A  	fcall	init_ram0
   595                           
   596                           ; Initialize objects allocated to BANK0
   597     07E7  3048               	movlw	low (__pdataBANK0+40)
   598     07E8  00FD               	movwf	btemp+-1
   599     07E9  3002               	movlw	high __pidataBANK0
   600     07EA  00FE               	movwf	btemp
   601     07EB  3094               	movlw	low __pidataBANK0
   602     07EC  00FF               	movwf	btemp+1
   603     07ED  3020               	movlw	low __pdataBANK0
   604     07EE  0084               	movwf	4
   605     07EF  120A  118A  222C  120A  118A  	fcall	init_ram0
   606                           
   607                           ; Clear objects allocated to BANK0
   608     07F4  01DE               	clrf	__pbssBANK0& (0+127)
   609     07F5  01DF               	clrf	(__pbssBANK0+1)& (0+127)
   610     07F6  01E0               	clrf	(__pbssBANK0+2)& (0+127)
   611     07F7  01E1               	clrf	(__pbssBANK0+3)& (0+127)
   612     07F8  01E2               	clrf	(__pbssBANK0+4)& (0+127)
   613     07F9  01E3               	clrf	(__pbssBANK0+5)& (0+127)
   614     07FA  01E4               	clrf	(__pbssBANK0+6)& (0+127)
   615                           
   616                           ; Clear objects allocated to COMMON
   617     07FB  01FD               	clrf	__pbssCOMMON& (0+127)
   618     07FC                     end_of_initialization:	
   619                           ;End of C runtime variable initialization code
   620                           
   621     07FC                     __end_of__initialization:
   622     07FC  0183               	clrf	3
   623     07FD  120A  118A  2EC9   	ljmp	_main	;jump to C main() function
   624                           
   625                           	psect	bssCOMMON
   626     007D                     __pbssCOMMON:
   627     007D                     _idx:
   628     007D                     	ds	1
   629                           
   630                           	psect	bssBANK0
   631     005E                     __pbssBANK0:
   632     005E                     _intentos:
   633     005E                     	ds	2
   634     0060                     _pass_user:
   635     0060                     	ds	5
   636                           
   637                           	psect	dataBANK0
   638     0020                     __pdataBANK0:
   639     0020                     _character5:
   640     0020                     	ds	8
   641     0028                     _character4:
   642     0028                     	ds	8
   643     0030                     _character3:
   644     0030                     	ds	8
   645     0038                     _character2:
   646     0038                     	ds	8
   647     0040                     _character1:
   648     0040                     	ds	8
   649                           
   650                           	psect	dataBANK1
   651     00A0                     __pdataBANK1:
   652     00A0                     keypad_getkey@F1398:
   653     00A0                     	ds	16
   654                           
   655                           	psect	inittext
   656     0228                     init_fetch0:	
   657                           ;	Called with low address in FSR and high address in W
   658                           
   659     0228  087E               	movf	btemp,w
   660     0229  008A               	movwf	10
   661     022A  087F               	movf	btemp+1,w
   662     022B  0082               	movwf	2
   663     022C                     init_ram0:	
   664                           ;Called with:
   665                           ;	high address of idata address in btemp 
   666                           ;	low address of idata address in btemp+1 
   667                           ;	low address of data in FSR
   668                           ;	high address + 1 of data in btemp-1
   669                           
   670     022C  120A  118A  2228  120A  118A  	fcall	init_fetch0
   671     0231  0080               	movwf	0
   672     0232  0A84               	incf	4,f
   673     0233  0804               	movf	4,w
   674     0234  067D               	xorwf	btemp+-1,w
   675     0235  1903               	btfsc	3,2
   676     0236  3400               	retlw	0
   677     0237  0AFF               	incf	btemp+1,f
   678     0238  1903               	btfsc	3,2
   679     0239  0AFE               	incf	btemp,f
   680     023A  2A2C               	goto	init_ram0
   681                           
   682                           	psect	cstackCOMMON
   683     0070                     __pcstackCOMMON:
   684     0070                     ?_LCD_Command:
   685     0070                     ?_LCD_Init:	
   686                           ; 1 bytes @ 0x0
   687                           
   688     0070                     ?_LCD_Char:	
   689                           ; 1 bytes @ 0x0
   690                           
   691     0070                     ?_LCD_Clear:	
   692                           ; 1 bytes @ 0x0
   693                           
   694     0070                     ?_Lmain:	
   695                           ; 1 bytes @ 0x0
   696                           
   697     0070                     ?_keypad_init:	
   698                           ; 1 bytes @ 0x0
   699                           
   700     0070                     ?_keypad_getkey:	
   701                           ; 1 bytes @ 0x0
   702                           
   703     0070                     ?_delay_ms_variable:	
   704                           ; 1 bytes @ 0x0
   705                           
   706     0070                     ?_secuencia1:	
   707                           ; 1 bytes @ 0x0
   708                           
   709     0070                     ?_secuencia5:	
   710                           ; 1 bytes @ 0x0
   711                           
   712     0070                     ?_main:	
   713                           ; 1 bytes @ 0x0
   714                           
   715     0070                     ?___bmul:	
   716                           ; 1 bytes @ 0x0
   717                           
   718     0070                     ?_strncmp:	
   719                           ; 1 bytes @ 0x0
   720                           
   721     0070                     ___bmul@multiplicand:	
   722                           ; 2 bytes @ 0x0
   723                           
   724     0070                     strncmp@l:	
   725                           ; 1 bytes @ 0x0
   726                           
   727     0070                     delay_ms_variable@ms:	
   728                           ; 1 bytes @ 0x0
   729                           
   730     0070                     ??_LCD_Command:	
   731                           ; 2 bytes @ 0x0
   732                           
   733     0070                     ??_LCD_Char:	
   734                           ; 1 bytes @ 0x0
   735                           
   736     0070                     ??_keypad_init:	
   737                           ; 1 bytes @ 0x0
   738                           
   739     0070                     ??_keypad_getkey:	
   740                           ; 1 bytes @ 0x0
   741                           
   742     0070                     ??_secuencia1:	
   743                           ; 1 bytes @ 0x0
   744                           
   745     0070                     ??_secuencia5:	
   746                           ; 1 bytes @ 0x0
   747                           
   748                           
   749                           ; 1 bytes @ 0x0
   750     0070                     	ds	1
   751     0071                     ___bmul@product:
   752     0071                     strncmp@r:	
   753                           ; 1 bytes @ 0x1
   754                           
   755     0071                     ??___bmul:	
   756                           ; 1 bytes @ 0x1
   757                           
   758                           
   759                           ; 1 bytes @ 0x1
   760     0071                     	ds	1
   761     0072                     LCD_Command@cmd:
   762     0072                     LCD_Char@dat:	
   763                           ; 1 bytes @ 0x2
   764                           
   765     0072                     ___bmul@multiplier:	
   766                           ; 1 bytes @ 0x2
   767                           
   768     0072                     strncmp@n:	
   769                           ; 1 bytes @ 0x2
   770                           
   771     0072                     ??_delay_ms_variable:	
   772                           ; 2 bytes @ 0x2
   773                           
   774                           
   775                           ; 1 bytes @ 0x2
   776     0072                     	ds	1
   777     0073                     ?_LCD_String:
   778     0073                     ?_LCD_Custom_Char:	
   779                           ; 1 bytes @ 0x3
   780                           
   781     0073                     LCD_String@msg:	
   782                           ; 1 bytes @ 0x3
   783                           
   784     0073                     LCD_Custom_Char@msg:	
   785                           ; 1 bytes @ 0x3
   786                           
   787     0073                     secuencia1@i:	
   788                           ; 1 bytes @ 0x3
   789                           
   790     0073                     ??_LCD_Init:	
   791                           ; 2 bytes @ 0x3
   792                           
   793     0073                     ??_LCD_Clear:	
   794                           ; 1 bytes @ 0x3
   795                           
   796                           
   797                           ; 1 bytes @ 0x3
   798     0073                     	ds	1
   799     0074                     ?_LCD_String_xy:
   800     0074                     ?_blink_led:	
   801                           ; 1 bytes @ 0x4
   802                           
   803     0074                     LCD_String_xy@pos:	
   804                           ; 1 bytes @ 0x4
   805                           
   806     0074                     blink_led@on_time:	
   807                           ; 1 bytes @ 0x4
   808                           
   809     0074                     ??_LCD_String:	
   810                           ; 2 bytes @ 0x4
   811                           
   812     0074                     ??_strncmp:	
   813                           ; 1 bytes @ 0x4
   814                           
   815     0074                     ??_LCD_Custom_Char:	
   816                           ; 1 bytes @ 0x4
   817                           
   818                           
   819                           ; 1 bytes @ 0x4
   820     0074                     	ds	1
   821     0075                     LCD_String_xy@msg:
   822     0075                     LCD_Custom_Char@loc:	
   823                           ; 1 bytes @ 0x5
   824                           
   825     0075                     secuencia1@var5:	
   826                           ; 1 bytes @ 0x5
   827                           
   828                           
   829                           ; 2 bytes @ 0x5
   830     0075                     	ds	1
   831     0076                     LCD_String_xy@row:
   832     0076                     LCD_Custom_Char@i:	
   833                           ; 1 bytes @ 0x6
   834                           
   835     0076                     blink_led@off_time:	
   836                           ; 1 bytes @ 0x6
   837                           
   838     0076                     ??_LCD_String_xy:	
   839                           ; 2 bytes @ 0x6
   840                           
   841                           
   842                           ; 1 bytes @ 0x6
   843     0076                     	ds	1
   844     0077                     LCD_String_xy@location:
   845     0077                     secuencia1@var3:	
   846                           ; 1 bytes @ 0x7
   847                           
   848                           
   849                           ; 2 bytes @ 0x7
   850     0077                     	ds	1
   851     0078                     Lmain@i:
   852     0078                     blink_led@duration:	
   853                           ; 1 bytes @ 0x8
   854                           
   855     0078                     ??_Lmain:	
   856                           ; 2 bytes @ 0x8
   857                           
   858                           
   859                           ; 1 bytes @ 0x8
   860     0078                     	ds	1
   861     0079                     secuencia1@var4:
   862                           
   863                           ; 2 bytes @ 0x9
   864     0079                     	ds	1
   865     007A                     ??_blink_led:
   866                           
   867                           ; 1 bytes @ 0xA
   868     007A                     	ds	2
   869     007C                     main@key:
   870                           
   871                           ; 1 bytes @ 0xC
   872     007C                     	ds	1
   873                           
   874                           	psect	cstackBANK0
   875     0048                     __pcstackBANK0:
   876     0048                     blink_led@elapsed_time:
   877     0048                     secuencia5@i:	
   878                           ; 2 bytes @ 0x0
   879                           
   880     0048                     keypad_getkey@letras:	
   881                           ; 2 bytes @ 0x0
   882                           
   883                           
   884                           ; 16 bytes @ 0x0
   885     0048                     	ds	2
   886     004A                     blink_led@led:
   887     004A                     secuencia5@i_226:	
   888                           ; 1 bytes @ 0x2
   889                           
   890                           
   891                           ; 2 bytes @ 0x2
   892     004A                     	ds	2
   893     004C                     secuencia5@var12:
   894                           
   895                           ; 2 bytes @ 0x4
   896     004C                     	ds	2
   897     004E                     secuencia5@var8:
   898                           
   899                           ; 2 bytes @ 0x6
   900     004E                     	ds	2
   901     0050                     secuencia5@var7:
   902                           
   903                           ; 2 bytes @ 0x8
   904     0050                     	ds	2
   905     0052                     secuencia5@var1:
   906                           
   907                           ; 2 bytes @ 0xA
   908     0052                     	ds	2
   909     0054                     secuencia5@var2:
   910                           
   911                           ; 2 bytes @ 0xC
   912     0054                     	ds	2
   913     0056                     secuencia5@var6:
   914                           
   915                           ; 2 bytes @ 0xE
   916     0056                     	ds	2
   917     0058                     keypad_getkey@valor:
   918                           
   919                           ; 1 bytes @ 0x10
   920     0058                     	ds	1
   921     0059                     keypad_getkey@i:
   922                           
   923                           ; 2 bytes @ 0x11
   924     0059                     	ds	2
   925     005B                     ??_main:
   926                           
   927                           ; 1 bytes @ 0x13
   928     005B                     	ds	3
   929                           
   930                           	psect	maintext
   931     06C9                     __pmaintext:	
   932 ;;
   933 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   934 ;;
   935 ;; *************** function _main *****************
   936 ;; Defined at:
   937 ;;		line 110 in file "MAIN.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;		None
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  key             1   12[COMMON] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  1    wreg      void 
   944 ;; Registers used:
   945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   946 ;; Tracked objects:
   947 ;;		On entry : B00/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         0       0       0       0       0
   952 ;;      Locals:         1       0       0       0       0
   953 ;;      Temps:          0       3       0       0       0
   954 ;;      Totals:         1       3       0       0       0
   955 ;;Total ram usage:        4 bytes
   956 ;; Hardware stack levels required when called: 4
   957 ;; This function calls:
   958 ;;		_LCD_Clear
   959 ;;		_LCD_Command
   960 ;;		_LCD_Init
   961 ;;		_LCD_String_xy
   962 ;;		_Lmain
   963 ;;		_blink_led
   964 ;;		_keypad_getkey
   965 ;;		_keypad_init
   966 ;;		_secuencia1
   967 ;;		_secuencia5
   968 ;;		_strncmp
   969 ;; This function is called by:
   970 ;;		Startup code after reset
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974     06C9                     _main:	
   975                           ;psect for function _main
   976                           
   977     06C9                     l1638:	
   978                           ;incstack = 0
   979                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   980                           
   981                           
   982                           ;MAIN.c: 113:     OSCCON = 0x71;
   983     06C9  3071               	movlw	113
   984     06CA  1683               	bsf	3,5	;RP0=1, select bank1
   985     06CB  1303               	bcf	3,6	;RP1=0, select bank1
   986     06CC  008F               	movwf	15	;volatile
   987     06CD                     l1640:
   988                           
   989                           ;MAIN.c: 115:     LCD_Init();
   990     06CD  120A  118A  22BC  120A  118A  	fcall	_LCD_Init
   991                           
   992                           ;MAIN.c: 117:     keypad_init();
   993     06D2  120A  118A  21ED  120A  118A  	fcall	_keypad_init
   994     06D7                     l1642:
   995                           
   996                           ;MAIN.c: 119:     TRISA = 0b00000000;
   997     06D7  1683               	bsf	3,5	;RP0=1, select bank1
   998     06D8  1303               	bcf	3,6	;RP1=0, select bank1
   999     06D9  0185               	clrf	5	;volatile
  1000     06DA                     l1644:
  1001                           
  1002                           ;MAIN.c: 120:     ANSEL = 0x00;
  1003     06DA  1683               	bsf	3,5	;RP0=1, select bank3
  1004     06DB  1703               	bsf	3,6	;RP1=1, select bank3
  1005     06DC  0188               	clrf	8	;volatile
  1006     06DD                     l1646:
  1007                           
  1008                           ;MAIN.c: 121:     PORTA= 0x00;
  1009     06DD  1283               	bcf	3,5	;RP0=0, select bank0
  1010     06DE  1303               	bcf	3,6	;RP1=0, select bank0
  1011     06DF  0185               	clrf	5	;volatile
  1012     06E0                     l1648:
  1013                           
  1014                           ;MAIN.c: 122:     ANSELH = 0x00;
  1015     06E0  1683               	bsf	3,5	;RP0=1, select bank3
  1016     06E1  1703               	bsf	3,6	;RP1=1, select bank3
  1017     06E2  0189               	clrf	9	;volatile
  1018     06E3                     l1650:
  1019                           
  1020                           ;MAIN.c: 123:     TRISD = 0b00000000;
  1021     06E3  1683               	bsf	3,5	;RP0=1, select bank1
  1022     06E4  1303               	bcf	3,6	;RP1=0, select bank1
  1023     06E5  0188               	clrf	8	;volatile
  1024     06E6                     l1652:
  1025                           
  1026                           ;MAIN.c: 124:     secuencia1();
  1027     06E6  120A  118A  248B  120A  118A  	fcall	_secuencia1
  1028     06EB                     l1654:
  1029                           
  1030                           ;MAIN.c: 125:     secuencia5();
  1031     06EB  120A  118A  25DA  120A  118A  	fcall	_secuencia5
  1032     06F0                     l1656:
  1033                           
  1034                           ;MAIN.c: 128:         LCD_String_xy(0,0,"Press a Key     ");
  1035     06F0  01F4               	clrf	LCD_String_xy@pos
  1036     06F1  3018               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1037     06F2  00F5               	movwf	LCD_String_xy@msg
  1038     06F3  3000               	movlw	0
  1039     06F4  120A  118A  2270  120A  118A  	fcall	_LCD_String_xy
  1040     06F9                     l1658:
  1041                           
  1042                           ;MAIN.c: 129:         LCD_Command(0xc0);
  1043     06F9  30C0               	movlw	192
  1044     06FA  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  1045     06FF                     l1660:
  1046                           
  1047                           ;MAIN.c: 131:             key = keypad_getkey();
  1048     06FF  120A  118A  24F9  120A  118A  	fcall	_keypad_getkey
  1049     0704  00FC               	movwf	main@key
  1050     0705                     l1662:
  1051                           
  1052                           ;MAIN.c: 132:             if(key != 0){
  1053     0705  087C               	movf	main@key,w
  1054     0706  1903               	btfsc	3,2
  1055     0707  2F09               	goto	u1011
  1056     0708  2F0A               	goto	u1010
  1057     0709                     u1011:
  1058     0709  2F1C               	goto	l1670
  1059     070A                     u1010:
  1060     070A                     l1664:
  1061                           
  1062                           ;MAIN.c: 133:                 LCD_String_xy(2,idx,"*");
  1063     070A  087D               	movf	_idx,w
  1064     070B  00F4               	movwf	LCD_String_xy@pos
  1065     070C  3049               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1066     070D  00F5               	movwf	LCD_String_xy@msg
  1067     070E  3002               	movlw	2
  1068     070F  120A  118A  2270  120A  118A  	fcall	_LCD_String_xy
  1069     0714                     l1666:
  1070                           
  1071                           ;MAIN.c: 134:                 pass_user[idx++] = key;
  1072     0714  087D               	movf	_idx,w
  1073     0715  3E60               	addlw	(low (_pass_user| 0))& (0+255)
  1074     0716  0084               	movwf	4
  1075     0717  087C               	movf	main@key,w
  1076     0718  1383               	bcf	3,7	;select IRP bank0
  1077     0719  0080               	movwf	0
  1078     071A                     l1668:
  1079     071A  3001               	movlw	1
  1080     071B  07FD               	addwf	_idx,f
  1081     071C                     l1670:
  1082                           
  1083                           ;MAIN.c: 137:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1084     071C  3002               	movlw	2
  1085     071D  1283               	bcf	3,5	;RP0=0, select bank0
  1086     071E  1303               	bcf	3,6	;RP1=0, select bank0
  1087     071F  00DD               	movwf	??_main+2
  1088     0720  3004               	movlw	4
  1089     0721  00DC               	movwf	??_main+1
  1090     0722  30B9               	movlw	185
  1091     0723  00DB               	movwf	??_main
  1092     0724                     u1057:
  1093     0724  0BDB               	decfsz	??_main,f
  1094     0725  2F24               	goto	u1057
  1095     0726  0BDC               	decfsz	??_main+1,f
  1096     0727  2F24               	goto	u1057
  1097     0728  0BDD               	decfsz	??_main+2,f
  1098     0729  2F24               	goto	u1057
  1099     072A  2F2B               	nop2
  1100     072B                     l1672:
  1101                           
  1102                           ;MAIN.c: 138:         }while(idx < 5);
  1103     072B  3005               	movlw	5
  1104     072C  027D               	subwf	_idx,w
  1105     072D  1C03               	skipc
  1106     072E  2F30               	goto	u1021
  1107     072F  2F31               	goto	u1020
  1108     0730                     u1021:
  1109     0730  2EFF               	goto	l1660
  1110     0731                     u1020:
  1111     0731                     l1674:
  1112                           
  1113                           ;MAIN.c: 140:         if(strncmp(pass_user,password,4)==0){
  1114     0731  3060               	movlw	(low (_pass_user| 0))& (0+255)
  1115     0732  00F0               	movwf	strncmp@l
  1116     0733  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  1117     0734  00F1               	movwf	strncmp@r
  1118     0735  3004               	movlw	4
  1119     0736  00F2               	movwf	strncmp@n
  1120     0737  3000               	movlw	0
  1121     0738  00F3               	movwf	strncmp@n+1
  1122     0739  120A  118A  23D0  120A  118A  	fcall	_strncmp
  1123     073E  0870               	movf	?_strncmp,w
  1124     073F  0471               	iorwf	?_strncmp+1,w
  1125     0740  1D03               	btfss	3,2
  1126     0741  2F43               	goto	u1031
  1127     0742  2F44               	goto	u1030
  1128     0743                     u1031:
  1129     0743  2F6E               	goto	l1684
  1130     0744                     u1030:
  1131     0744                     l1676:
  1132                           
  1133                           ;MAIN.c: 141:             LCD_Clear();
  1134     0744  120A  118A  21F5  120A  118A  	fcall	_LCD_Clear
  1135     0749                     l1678:
  1136                           
  1137                           ;MAIN.c: 142:             LCD_String_xy(0,0,"Clave Correcta");
  1138     0749  01F4               	clrf	LCD_String_xy@pos
  1139     074A  303A               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1140     074B  00F5               	movwf	LCD_String_xy@msg
  1141     074C  3000               	movlw	0
  1142     074D  120A  118A  2270  120A  118A  	fcall	_LCD_String_xy
  1143     0752                     l1680:
  1144                           
  1145                           ;MAIN.c: 143:             Lmain();
  1146     0752  120A  118A  237F  120A  118A  	fcall	_Lmain
  1147                           
  1148                           ;MAIN.c: 144:             blink_led('V', 500, 500, 3000);
  1149     0757  30F4               	movlw	244
  1150     0758  00F4               	movwf	blink_led@on_time
  1151     0759  3001               	movlw	1
  1152     075A  00F5               	movwf	blink_led@on_time+1
  1153     075B  30F4               	movlw	244
  1154     075C  00F6               	movwf	blink_led@off_time
  1155     075D  3001               	movlw	1
  1156     075E  00F7               	movwf	blink_led@off_time+1
  1157     075F  30B8               	movlw	184
  1158     0760  00F8               	movwf	blink_led@duration
  1159     0761  300B               	movlw	11
  1160     0762  00F9               	movwf	blink_led@duration+1
  1161     0763  3056               	movlw	86
  1162     0764  120A  118A  2428  120A  118A  	fcall	_blink_led
  1163     0769                     l1682:
  1164                           
  1165                           ;MAIN.c: 145:             intentos = 0;
  1166     0769  1283               	bcf	3,5	;RP0=0, select bank0
  1167     076A  1303               	bcf	3,6	;RP1=0, select bank0
  1168     076B  01DE               	clrf	_intentos
  1169     076C  01DF               	clrf	_intentos+1
  1170                           
  1171                           ;MAIN.c: 146:         }
  1172     076D  2FC0               	goto	l1702
  1173     076E                     l1684:
  1174                           
  1175                           ;MAIN.c: 148:             LCD_Clear();
  1176     076E  120A  118A  21F5  120A  118A  	fcall	_LCD_Clear
  1177     0773                     l1686:
  1178                           
  1179                           ;MAIN.c: 149:             LCD_String_xy(0,0,"Clave Incorrecta");
  1180     0773  01F4               	clrf	LCD_String_xy@pos
  1181     0774  3029               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1182     0775  00F5               	movwf	LCD_String_xy@msg
  1183     0776  3000               	movlw	0
  1184     0777  120A  118A  2270  120A  118A  	fcall	_LCD_String_xy
  1185     077C                     l1688:
  1186                           
  1187                           ;MAIN.c: 150:             blink_led('A', 300, 700, 2000);
  1188     077C  302C               	movlw	44
  1189     077D  00F4               	movwf	blink_led@on_time
  1190     077E  3001               	movlw	1
  1191     077F  00F5               	movwf	blink_led@on_time+1
  1192     0780  30BC               	movlw	188
  1193     0781  00F6               	movwf	blink_led@off_time
  1194     0782  3002               	movlw	2
  1195     0783  00F7               	movwf	blink_led@off_time+1
  1196     0784  30D0               	movlw	208
  1197     0785  00F8               	movwf	blink_led@duration
  1198     0786  3007               	movlw	7
  1199     0787  00F9               	movwf	blink_led@duration+1
  1200     0788  3041               	movlw	65
  1201     0789  120A  118A  2428  120A  118A  	fcall	_blink_led
  1202     078E                     l1690:
  1203                           
  1204                           ;MAIN.c: 151:             intentos = intentos + 1;
  1205     078E  1283               	bcf	3,5	;RP0=0, select bank0
  1206     078F  1303               	bcf	3,6	;RP1=0, select bank0
  1207     0790  085E               	movf	_intentos,w
  1208     0791  3E01               	addlw	1
  1209     0792  00DE               	movwf	_intentos
  1210     0793  085F               	movf	_intentos+1,w
  1211     0794  1803               	skipnc
  1212     0795  3E01               	addlw	1
  1213     0796  3E00               	addlw	0
  1214     0797  00DF               	movwf	_intentos+1
  1215     0798                     l1692:
  1216                           
  1217                           ;MAIN.c: 152:             if(intentos ==3){
  1218     0798  3003               	movlw	3
  1219     0799  065E               	xorwf	_intentos,w
  1220     079A  045F               	iorwf	_intentos+1,w
  1221     079B  1D03               	btfss	3,2
  1222     079C  2F9E               	goto	u1041
  1223     079D  2F9F               	goto	u1040
  1224     079E                     u1041:
  1225     079E  2FC0               	goto	l1702
  1226     079F                     u1040:
  1227     079F                     l1694:
  1228                           
  1229                           ;MAIN.c: 153:                 LCD_Clear();
  1230     079F  120A  118A  21F5  120A  118A  	fcall	_LCD_Clear
  1231     07A4                     l1696:
  1232                           
  1233                           ;MAIN.c: 154:                 LCD_String_xy(0,0,"sistema bloqueado");
  1234     07A4  01F4               	clrf	LCD_String_xy@pos
  1235     07A5  3006               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1236     07A6  00F5               	movwf	LCD_String_xy@msg
  1237     07A7  3000               	movlw	0
  1238     07A8  120A  118A  2270  120A  118A  	fcall	_LCD_String_xy
  1239     07AD                     l1698:
  1240                           
  1241                           ;MAIN.c: 155:                 blink_led('R', 300, 500, 8000);
  1242     07AD  302C               	movlw	44
  1243     07AE  00F4               	movwf	blink_led@on_time
  1244     07AF  3001               	movlw	1
  1245     07B0  00F5               	movwf	blink_led@on_time+1
  1246     07B1  30F4               	movlw	244
  1247     07B2  00F6               	movwf	blink_led@off_time
  1248     07B3  3001               	movlw	1
  1249     07B4  00F7               	movwf	blink_led@off_time+1
  1250     07B5  3040               	movlw	64
  1251     07B6  00F8               	movwf	blink_led@duration
  1252     07B7  301F               	movlw	31
  1253     07B8  00F9               	movwf	blink_led@duration+1
  1254     07B9  3052               	movlw	82
  1255     07BA  120A  118A  2428  120A  118A  	fcall	_blink_led
  1256     07BF  2F69               	goto	l1682
  1257     07C0                     l1702:
  1258                           
  1259                           ;MAIN.c: 160:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1260     07C0  3015               	movlw	21
  1261     07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1262     07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1263     07C3  00DD               	movwf	??_main+2
  1264     07C4  304B               	movlw	75
  1265     07C5  00DC               	movwf	??_main+1
  1266     07C6  30BD               	movlw	189
  1267     07C7  00DB               	movwf	??_main
  1268     07C8                     u1067:
  1269     07C8  0BDB               	decfsz	??_main,f
  1270     07C9  2FC8               	goto	u1067
  1271     07CA  0BDC               	decfsz	??_main+1,f
  1272     07CB  2FC8               	goto	u1067
  1273     07CC  0BDD               	decfsz	??_main+2,f
  1274     07CD  2FC8               	goto	u1067
  1275     07CE  2FCF               	nop2
  1276     07CF                     l1704:
  1277                           
  1278                           ;MAIN.c: 161:         LCD_Clear();
  1279     07CF  120A  118A  21F5  120A  118A  	fcall	_LCD_Clear
  1280     07D4                     l1706:
  1281                           
  1282                           ;MAIN.c: 162:         idx = 0;
  1283     07D4  01FD               	clrf	_idx
  1284     07D5  2EF0               	goto	l1656
  1285     07D6  120A  118A  2800   	ljmp	start
  1286     07D9                     __end_of_main:
  1287                           
  1288                           	psect	text1
  1289     03D0                     __ptext1:	
  1290 ;; *************** function _strncmp *****************
  1291 ;; Defined at:
  1292 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  l               1    0[COMMON] PTR const unsigned char 
  1295 ;;		 -> pass_user(5), 
  1296 ;;  r               1    1[COMMON] PTR const unsigned char 
  1297 ;;		 -> password(5), 
  1298 ;;  n               2    2[COMMON] unsigned int 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;		None
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  2    0[COMMON] int 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         4       0       0       0       0
  1311 ;;      Locals:         0       0       0       0       0
  1312 ;;      Temps:          2       0       0       0       0
  1313 ;;      Totals:         6       0       0       0       0
  1314 ;;Total ram usage:        6 bytes
  1315 ;; Hardware stack levels used: 2
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323     03D0                     _strncmp:	
  1324                           ;psect for function _strncmp
  1325                           
  1326     03D0                     l1604:	
  1327                           ;incstack = 0
  1328                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  1329                           
  1330     03D0  3001               	movlw	1
  1331     03D1  02F2               	subwf	strncmp@n,f
  1332     03D2  3000               	movlw	0
  1333     03D3  1C03               	skipc
  1334     03D4  03F3               	decf	strncmp@n+1,f
  1335     03D5  02F3               	subwf	strncmp@n+1,f
  1336     03D6  0A72               	incf	strncmp@n,w
  1337     03D7  1D03               	skipz
  1338     03D8  2BDD               	goto	u961
  1339     03D9  0A73               	incf	strncmp@n+1,w
  1340     03DA  1D03               	btfss	3,2
  1341     03DB  2BDD               	goto	u961
  1342     03DC  2BDE               	goto	u960
  1343     03DD                     u961:
  1344     03DD  2BEB               	goto	l1614
  1345     03DE                     u960:
  1346     03DE                     l1606:
  1347     03DE  01F0               	clrf	?_strncmp
  1348     03DF  01F1               	clrf	?_strncmp+1
  1349     03E0  2C27               	goto	l769
  1350     03E1                     l1610:
  1351     03E1  3001               	movlw	1
  1352     03E2  07F0               	addwf	strncmp@l,f
  1353     03E3  3001               	movlw	1
  1354     03E4  07F1               	addwf	strncmp@r,f
  1355     03E5                     l1612:
  1356     03E5  3001               	movlw	1
  1357     03E6  02F2               	subwf	strncmp@n,f
  1358     03E7  3000               	movlw	0
  1359     03E8  1C03               	skipc
  1360     03E9  03F3               	decf	strncmp@n+1,f
  1361     03EA  02F3               	subwf	strncmp@n+1,f
  1362     03EB                     l1614:
  1363     03EB  0870               	movf	strncmp@l,w
  1364     03EC  0084               	movwf	4
  1365     03ED  1383               	bcf	3,7	;select IRP bank0
  1366     03EE  0800               	movf	0,w
  1367     03EF  1903               	btfsc	3,2
  1368     03F0  2BF2               	goto	u971
  1369     03F1  2BF3               	goto	u970
  1370     03F2                     u971:
  1371     03F2  2C15               	goto	l1622
  1372     03F3                     u970:
  1373     03F3                     l1616:
  1374     03F3  0871               	movf	strncmp@r,w
  1375     03F4  0084               	movwf	4
  1376     03F5  120A  118A  2003  120A  118A  	fcall	stringdir
  1377     03FA  3A00               	xorlw	0
  1378     03FB  1903               	skipnz
  1379     03FC  2BFE               	goto	u981
  1380     03FD  2BFF               	goto	u980
  1381     03FE                     u981:
  1382     03FE  2C15               	goto	l1622
  1383     03FF                     u980:
  1384     03FF                     l1618:
  1385     03FF  0872               	movf	strncmp@n,w
  1386     0400  0473               	iorwf	strncmp@n+1,w
  1387     0401  1903               	btfsc	3,2
  1388     0402  2C04               	goto	u991
  1389     0403  2C05               	goto	u990
  1390     0404                     u991:
  1391     0404  2C15               	goto	l1622
  1392     0405                     u990:
  1393     0405                     l1620:
  1394     0405  0871               	movf	strncmp@r,w
  1395     0406  0084               	movwf	4
  1396     0407  120A  118A  2003  120A  118A  	fcall	stringdir
  1397     040C  00F4               	movwf	??_strncmp
  1398     040D  0870               	movf	strncmp@l,w
  1399     040E  0084               	movwf	4
  1400     040F  0800               	movf	0,w
  1401     0410  0674               	xorwf	??_strncmp,w
  1402     0411  1903               	skipnz
  1403     0412  2C14               	goto	u1001
  1404     0413  2C15               	goto	u1000
  1405     0414                     u1001:
  1406     0414  2BE1               	goto	l1610
  1407     0415                     u1000:
  1408     0415                     l1622:
  1409     0415  0871               	movf	strncmp@r,w
  1410     0416  0084               	movwf	4
  1411     0417  120A  118A  2003  120A  118A  	fcall	stringdir
  1412     041C  00F4               	movwf	??_strncmp
  1413     041D  0870               	movf	strncmp@l,w
  1414     041E  0084               	movwf	4
  1415     041F  0800               	movf	0,w
  1416     0420  00F5               	movwf	??_strncmp+1
  1417     0421  0874               	movf	??_strncmp,w
  1418     0422  0275               	subwf	??_strncmp+1,w
  1419     0423  00F0               	movwf	?_strncmp
  1420     0424  01F1               	clrf	?_strncmp+1
  1421     0425  1C03               	skipc
  1422     0426  03F1               	decf	?_strncmp+1,f
  1423     0427                     l769:
  1424     0427  0008               	return
  1425     0428                     __end_of_strncmp:
  1426                           
  1427                           	psect	text2
  1428     05DA                     __ptext2:	
  1429 ;; *************** function _secuencia5 *****************
  1430 ;; Defined at:
  1431 ;;		line 76 in file "MAIN.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  i               2    2[BANK0 ] int 
  1436 ;;  i               2    0[BANK0 ] int 
  1437 ;;  var6            2   14[BANK0 ] volatile unsigned int 
  1438 ;;  var2            2   12[BANK0 ] volatile unsigned int 
  1439 ;;  var1            2   10[BANK0 ] volatile unsigned int 
  1440 ;;  var7            2    8[BANK0 ] volatile unsigned int 
  1441 ;;  var8            2    6[BANK0 ] volatile unsigned int 
  1442 ;;  var12           2    4[BANK0 ] volatile unsigned int 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      void 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, btemp+1
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0      16       0       0       0
  1454 ;;      Temps:          3       0       0       0       0
  1455 ;;      Totals:         3      16       0       0       0
  1456 ;;Total ram usage:       19 bytes
  1457 ;; Hardware stack levels used: 1
  1458 ;; This function calls:
  1459 ;;		Nothing
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465     05DA                     _secuencia5:	
  1466                           ;psect for function _secuencia5
  1467                           
  1468     05DA                     l1550:	
  1469                           ;incstack = 0
  1470                           ; Regs used in _secuencia5: [wreg+status,2+status,0+btemp+1]
  1471                           
  1472                           
  1473                           ;MAIN.c: 77: volatile unsigned int var1=0xA0,var2=0x01,var12 = 0;
  1474     05DA  30A0               	movlw	160
  1475     05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1476     05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1477     05DD  00D2               	movwf	secuencia5@var1	;volatile
  1478     05DE  3000               	movlw	0
  1479     05DF  00D3               	movwf	secuencia5@var1+1	;volatile
  1480     05E0  3001               	movlw	1
  1481     05E1  00D4               	movwf	secuencia5@var2	;volatile
  1482     05E2  3000               	movlw	0
  1483     05E3  00D5               	movwf	secuencia5@var2+1	;volatile
  1484     05E4                     l1552:
  1485     05E4  01CC               	clrf	secuencia5@var12	;volatile
  1486     05E5  01CD               	clrf	secuencia5@var12+1	;volatile
  1487     05E6                     l1554:
  1488                           
  1489                           ;MAIN.c: 78:     for (int i = 0; i < 2; i++) {
  1490     05E6  01C8               	clrf	secuencia5@i
  1491     05E7  01C9               	clrf	secuencia5@i+1
  1492     05E8                     l1560:
  1493                           
  1494                           ;MAIN.c: 79:         var12 = var1 | var2;
  1495     05E8  1283               	bcf	3,5	;RP0=0, select bank0
  1496     05E9  1303               	bcf	3,6	;RP1=0, select bank0
  1497     05EA  0854               	movf	secuencia5@var2,w	;volatile
  1498     05EB  0452               	iorwf	secuencia5@var1,w	;volatile
  1499     05EC  00CC               	movwf	secuencia5@var12	;volatile
  1500     05ED  0855               	movf	secuencia5@var2+1,w	;volatile
  1501     05EE  0453               	iorwf	secuencia5@var1+1,w	;volatile
  1502     05EF  00CD               	movwf	secuencia5@var12+1	;volatile
  1503                           
  1504                           ;MAIN.c: 80:         PORTD = (unsigned char)(var12);
  1505     05F0  084C               	movf	secuencia5@var12,w	;volatile
  1506     05F1  0088               	movwf	8	;volatile
  1507                           
  1508                           ;MAIN.c: 81:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1509     05F2  3006               	movlw	6
  1510     05F3  00F2               	movwf	??_secuencia5+2
  1511     05F4  3013               	movlw	19
  1512     05F5  00F1               	movwf	??_secuencia5+1
  1513     05F6  30AD               	movlw	173
  1514     05F7  00F0               	movwf	??_secuencia5
  1515     05F8                     u1077:
  1516     05F8  0BF0               	decfsz	??_secuencia5,f
  1517     05F9  2DF8               	goto	u1077
  1518     05FA  0BF1               	decfsz	??_secuencia5+1,f
  1519     05FB  2DF8               	goto	u1077
  1520     05FC  0BF2               	decfsz	??_secuencia5+2,f
  1521     05FD  2DF8               	goto	u1077
  1522     05FE  2DFF               	nop2
  1523     05FF                     l1562:
  1524                           
  1525                           ;MAIN.c: 82:         var1 = var1 >> 1;
  1526     05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1527     0600  1303               	bcf	3,6	;RP1=0, select bank0
  1528     0601  0853               	movf	secuencia5@var1+1,w	;volatile
  1529     0602  00F1               	movwf	??_secuencia5+1
  1530     0603  0852               	movf	secuencia5@var1,w	;volatile
  1531     0604  00F0               	movwf	??_secuencia5
  1532     0605  1003               	clrc
  1533     0606  0CF1               	rrf	??_secuencia5+1,f
  1534     0607  0CF0               	rrf	??_secuencia5,f
  1535     0608  0870               	movf	??_secuencia5,w
  1536     0609  00D2               	movwf	secuencia5@var1	;volatile
  1537     060A  0871               	movf	??_secuencia5+1,w
  1538     060B  00D3               	movwf	secuencia5@var1+1	;volatile
  1539     060C                     l1564:
  1540                           
  1541                           ;MAIN.c: 83:         var2 = var2 << 1;
  1542     060C  1003               	clrc
  1543     060D  0D54               	rlf	secuencia5@var2,w	;volatile
  1544     060E  00D4               	movwf	secuencia5@var2	;volatile
  1545     060F  0D55               	rlf	secuencia5@var2+1,w	;volatile
  1546     0610  00D5               	movwf	secuencia5@var2+1	;volatile
  1547     0611                     l1566:
  1548                           
  1549                           ;MAIN.c: 84:         var12 = var1 | var2;
  1550     0611  0854               	movf	secuencia5@var2,w	;volatile
  1551     0612  0452               	iorwf	secuencia5@var1,w	;volatile
  1552     0613  00CC               	movwf	secuencia5@var12	;volatile
  1553     0614  0855               	movf	secuencia5@var2+1,w	;volatile
  1554     0615  0453               	iorwf	secuencia5@var1+1,w	;volatile
  1555     0616  00CD               	movwf	secuencia5@var12+1	;volatile
  1556     0617                     l1568:
  1557                           
  1558                           ;MAIN.c: 85:         PORTD = (unsigned char)(var12);
  1559     0617  084C               	movf	secuencia5@var12,w	;volatile
  1560     0618  0088               	movwf	8	;volatile
  1561     0619                     l1570:
  1562                           
  1563                           ;MAIN.c: 86:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1564     0619  3006               	movlw	6
  1565     061A  00F2               	movwf	??_secuencia5+2
  1566     061B  3013               	movlw	19
  1567     061C  00F1               	movwf	??_secuencia5+1
  1568     061D  30AD               	movlw	173
  1569     061E  00F0               	movwf	??_secuencia5
  1570     061F                     u1087:
  1571     061F  0BF0               	decfsz	??_secuencia5,f
  1572     0620  2E1F               	goto	u1087
  1573     0621  0BF1               	decfsz	??_secuencia5+1,f
  1574     0622  2E1F               	goto	u1087
  1575     0623  0BF2               	decfsz	??_secuencia5+2,f
  1576     0624  2E1F               	goto	u1087
  1577     0625  2E26               	nop2
  1578     0626                     l1572:
  1579                           
  1580                           ;MAIN.c: 87:         var12 = var1 | var2;
  1581     0626  1283               	bcf	3,5	;RP0=0, select bank0
  1582     0627  1303               	bcf	3,6	;RP1=0, select bank0
  1583     0628  0854               	movf	secuencia5@var2,w	;volatile
  1584     0629  0452               	iorwf	secuencia5@var1,w	;volatile
  1585     062A  00CC               	movwf	secuencia5@var12	;volatile
  1586     062B  0855               	movf	secuencia5@var2+1,w	;volatile
  1587     062C  0453               	iorwf	secuencia5@var1+1,w	;volatile
  1588     062D  00CD               	movwf	secuencia5@var12+1	;volatile
  1589     062E                     l1574:
  1590                           
  1591                           ;MAIN.c: 88:         var1 = var1 << 1;
  1592     062E  1003               	clrc
  1593     062F  0D52               	rlf	secuencia5@var1,w	;volatile
  1594     0630  00D2               	movwf	secuencia5@var1	;volatile
  1595     0631  0D53               	rlf	secuencia5@var1+1,w	;volatile
  1596     0632  00D3               	movwf	secuencia5@var1+1	;volatile
  1597     0633                     l1576:
  1598                           
  1599                           ;MAIN.c: 89:         var2 = var2 << 1;
  1600     0633  1003               	clrc
  1601     0634  0D54               	rlf	secuencia5@var2,w	;volatile
  1602     0635  00D4               	movwf	secuencia5@var2	;volatile
  1603     0636  0D55               	rlf	secuencia5@var2+1,w	;volatile
  1604     0637  00D5               	movwf	secuencia5@var2+1	;volatile
  1605     0638                     l1578:
  1606                           
  1607                           ;MAIN.c: 90:     }
  1608     0638  3001               	movlw	1
  1609     0639  07C8               	addwf	secuencia5@i,f
  1610     063A  1803               	skipnc
  1611     063B  0AC9               	incf	secuencia5@i+1,f
  1612     063C  3000               	movlw	0
  1613     063D  07C9               	addwf	secuencia5@i+1,f
  1614     063E                     l1580:
  1615     063E  0849               	movf	secuencia5@i+1,w
  1616     063F  3A80               	xorlw	128
  1617     0640  00FF               	movwf	btemp+1
  1618     0641  3080               	movlw	128
  1619     0642  027F               	subwf	btemp+1,w
  1620     0643  1D03               	skipz
  1621     0644  2E47               	goto	u945
  1622     0645  3002               	movlw	2
  1623     0646  0248               	subwf	secuencia5@i,w
  1624     0647                     u945:
  1625     0647  1C03               	skipc
  1626     0648  2E4A               	goto	u941
  1627     0649  2E4B               	goto	u940
  1628     064A                     u941:
  1629     064A  2DE8               	goto	l1560
  1630     064B                     u940:
  1631     064B                     l1582:
  1632                           
  1633                           ;MAIN.c: 91:        volatile unsigned int var6=0xA0,var7=0x08,var8 = 0;
  1634     064B  30A0               	movlw	160
  1635     064C  1283               	bcf	3,5	;RP0=0, select bank0
  1636     064D  1303               	bcf	3,6	;RP1=0, select bank0
  1637     064E  00D6               	movwf	secuencia5@var6	;volatile
  1638     064F  3000               	movlw	0
  1639     0650  00D7               	movwf	secuencia5@var6+1	;volatile
  1640     0651  3008               	movlw	8
  1641     0652  00D0               	movwf	secuencia5@var7	;volatile
  1642     0653  3000               	movlw	0
  1643     0654  00D1               	movwf	secuencia5@var7+1	;volatile
  1644     0655                     l1584:
  1645     0655  01CE               	clrf	secuencia5@var8	;volatile
  1646     0656  01CF               	clrf	secuencia5@var8+1	;volatile
  1647     0657                     l1586:
  1648                           
  1649                           ;MAIN.c: 92:     for (int i = 0; i < 2; i++){
  1650     0657  01CA               	clrf	secuencia5@i_226
  1651     0658  01CB               	clrf	secuencia5@i_226+1
  1652     0659                     l1592:
  1653                           
  1654                           ;MAIN.c: 93:         var8 = var6 | var7;
  1655     0659  1283               	bcf	3,5	;RP0=0, select bank0
  1656     065A  1303               	bcf	3,6	;RP1=0, select bank0
  1657     065B  0850               	movf	secuencia5@var7,w	;volatile
  1658     065C  0456               	iorwf	secuencia5@var6,w	;volatile
  1659     065D  00CE               	movwf	secuencia5@var8	;volatile
  1660     065E  0851               	movf	secuencia5@var7+1,w	;volatile
  1661     065F  0457               	iorwf	secuencia5@var6+1,w	;volatile
  1662     0660  00CF               	movwf	secuencia5@var8+1	;volatile
  1663                           
  1664                           ;MAIN.c: 94:         PORTD = (unsigned char)(var8);
  1665     0661  084E               	movf	secuencia5@var8,w	;volatile
  1666     0662  0088               	movwf	8	;volatile
  1667                           
  1668                           ;MAIN.c: 95:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1669     0663  3006               	movlw	6
  1670     0664  00F2               	movwf	??_secuencia5+2
  1671     0665  3013               	movlw	19
  1672     0666  00F1               	movwf	??_secuencia5+1
  1673     0667  30AD               	movlw	173
  1674     0668  00F0               	movwf	??_secuencia5
  1675     0669                     u1097:
  1676     0669  0BF0               	decfsz	??_secuencia5,f
  1677     066A  2E69               	goto	u1097
  1678     066B  0BF1               	decfsz	??_secuencia5+1,f
  1679     066C  2E69               	goto	u1097
  1680     066D  0BF2               	decfsz	??_secuencia5+2,f
  1681     066E  2E69               	goto	u1097
  1682     066F  2E70               	nop2
  1683     0670                     l1594:
  1684                           
  1685                           ;MAIN.c: 96:         var6 = var6 >> 1;
  1686     0670  1283               	bcf	3,5	;RP0=0, select bank0
  1687     0671  1303               	bcf	3,6	;RP1=0, select bank0
  1688     0672  0857               	movf	secuencia5@var6+1,w	;volatile
  1689     0673  00F1               	movwf	??_secuencia5+1
  1690     0674  0856               	movf	secuencia5@var6,w	;volatile
  1691     0675  00F0               	movwf	??_secuencia5
  1692     0676  1003               	clrc
  1693     0677  0CF1               	rrf	??_secuencia5+1,f
  1694     0678  0CF0               	rrf	??_secuencia5,f
  1695     0679  0870               	movf	??_secuencia5,w
  1696     067A  00D6               	movwf	secuencia5@var6	;volatile
  1697     067B  0871               	movf	??_secuencia5+1,w
  1698     067C  00D7               	movwf	secuencia5@var6+1	;volatile
  1699     067D                     l1596:
  1700                           
  1701                           ;MAIN.c: 97:         var7 = var7 >> 1;
  1702     067D  0851               	movf	secuencia5@var7+1,w	;volatile
  1703     067E  00F1               	movwf	??_secuencia5+1
  1704     067F  0850               	movf	secuencia5@var7,w	;volatile
  1705     0680  00F0               	movwf	??_secuencia5
  1706     0681  1003               	clrc
  1707     0682  0CF1               	rrf	??_secuencia5+1,f
  1708     0683  0CF0               	rrf	??_secuencia5,f
  1709     0684  0870               	movf	??_secuencia5,w
  1710     0685  00D0               	movwf	secuencia5@var7	;volatile
  1711     0686  0871               	movf	??_secuencia5+1,w
  1712     0687  00D1               	movwf	secuencia5@var7+1	;volatile
  1713                           
  1714                           ;MAIN.c: 98:         var8 = var6 | var7;
  1715     0688  0850               	movf	secuencia5@var7,w	;volatile
  1716     0689  0456               	iorwf	secuencia5@var6,w	;volatile
  1717     068A  00CE               	movwf	secuencia5@var8	;volatile
  1718     068B  0851               	movf	secuencia5@var7+1,w	;volatile
  1719     068C  0457               	iorwf	secuencia5@var6+1,w	;volatile
  1720     068D  00CF               	movwf	secuencia5@var8+1	;volatile
  1721                           
  1722                           ;MAIN.c: 99:         PORTD = (unsigned char)(var8);
  1723     068E  084E               	movf	secuencia5@var8,w	;volatile
  1724     068F  0088               	movwf	8	;volatile
  1725                           
  1726                           ;MAIN.c: 100:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1727     0690  3006               	movlw	6
  1728     0691  00F2               	movwf	??_secuencia5+2
  1729     0692  3013               	movlw	19
  1730     0693  00F1               	movwf	??_secuencia5+1
  1731     0694  30AD               	movlw	173
  1732     0695  00F0               	movwf	??_secuencia5
  1733     0696                     u1107:
  1734     0696  0BF0               	decfsz	??_secuencia5,f
  1735     0697  2E96               	goto	u1107
  1736     0698  0BF1               	decfsz	??_secuencia5+1,f
  1737     0699  2E96               	goto	u1107
  1738     069A  0BF2               	decfsz	??_secuencia5+2,f
  1739     069B  2E96               	goto	u1107
  1740     069C  2E9D               	nop2
  1741                           
  1742                           ;MAIN.c: 101:         var8 = var6 | var6;
  1743     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1744     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1745     069F  0856               	movf	secuencia5@var6,w	;volatile
  1746     06A0  0456               	iorwf	secuencia5@var6,w	;volatile
  1747     06A1  00CE               	movwf	secuencia5@var8	;volatile
  1748     06A2  0857               	movf	secuencia5@var6+1,w	;volatile
  1749     06A3  0457               	iorwf	secuencia5@var6+1,w	;volatile
  1750     06A4  00CF               	movwf	secuencia5@var8+1	;volatile
  1751                           
  1752                           ;MAIN.c: 102:         var6 = var6 << 1;
  1753     06A5  1003               	clrc
  1754     06A6  0D56               	rlf	secuencia5@var6,w	;volatile
  1755     06A7  00D6               	movwf	secuencia5@var6	;volatile
  1756     06A8  0D57               	rlf	secuencia5@var6+1,w	;volatile
  1757     06A9  00D7               	movwf	secuencia5@var6+1	;volatile
  1758     06AA                     l1598:
  1759                           
  1760                           ;MAIN.c: 103:         var7 = var7 >> 1;
  1761     06AA  0851               	movf	secuencia5@var7+1,w	;volatile
  1762     06AB  00F1               	movwf	??_secuencia5+1
  1763     06AC  0850               	movf	secuencia5@var7,w	;volatile
  1764     06AD  00F0               	movwf	??_secuencia5
  1765     06AE  1003               	clrc
  1766     06AF  0CF1               	rrf	??_secuencia5+1,f
  1767     06B0  0CF0               	rrf	??_secuencia5,f
  1768     06B1  0870               	movf	??_secuencia5,w
  1769     06B2  00D0               	movwf	secuencia5@var7	;volatile
  1770     06B3  0871               	movf	??_secuencia5+1,w
  1771     06B4  00D1               	movwf	secuencia5@var7+1	;volatile
  1772     06B5                     l1600:
  1773                           
  1774                           ;MAIN.c: 105:     }
  1775     06B5  3001               	movlw	1
  1776     06B6  07CA               	addwf	secuencia5@i_226,f
  1777     06B7  1803               	skipnc
  1778     06B8  0ACB               	incf	secuencia5@i_226+1,f
  1779     06B9  3000               	movlw	0
  1780     06BA  07CB               	addwf	secuencia5@i_226+1,f
  1781     06BB                     l1602:
  1782     06BB  084B               	movf	secuencia5@i_226+1,w
  1783     06BC  3A80               	xorlw	128
  1784     06BD  00FF               	movwf	btemp+1
  1785     06BE  3080               	movlw	128
  1786     06BF  027F               	subwf	btemp+1,w
  1787     06C0  1D03               	skipz
  1788     06C1  2EC4               	goto	u955
  1789     06C2  3002               	movlw	2
  1790     06C3  024A               	subwf	secuencia5@i_226,w
  1791     06C4                     u955:
  1792     06C4  1C03               	skipc
  1793     06C5  2EC7               	goto	u951
  1794     06C6  2EC8               	goto	u950
  1795     06C7                     u951:
  1796     06C7  2E59               	goto	l1592
  1797     06C8                     u950:
  1798     06C8                     l209:
  1799     06C8  0008               	return
  1800     06C9                     __end_of_secuencia5:
  1801                           
  1802                           	psect	text3
  1803     048B                     __ptext3:	
  1804 ;; *************** function _secuencia1 *****************
  1805 ;; Defined at:
  1806 ;;		line 53 in file "MAIN.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  i               2    3[COMMON] int 
  1811 ;;  var4            2    9[COMMON] volatile unsigned int 
  1812 ;;  var3            2    7[COMMON] volatile unsigned int 
  1813 ;;  var5            2    5[COMMON] volatile unsigned int 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, btemp+1
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         8       0       0       0       0
  1825 ;;      Temps:          3       0       0       0       0
  1826 ;;      Totals:        11       0       0       0       0
  1827 ;;Total ram usage:       11 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836     048B                     _secuencia1:	
  1837                           ;psect for function _secuencia1
  1838                           
  1839     048B                     l1518:	
  1840                           ;incstack = 0
  1841                           ; Regs used in _secuencia1: [wreg+status,2+status,0+btemp+1]
  1842                           
  1843                           
  1844                           ;MAIN.c: 54: volatile unsigned int var3 = 0xA0,var4 = 0x01,var5 = 0;
  1845     048B  30A0               	movlw	160
  1846     048C  00F7               	movwf	secuencia1@var3	;volatile
  1847     048D  3000               	movlw	0
  1848     048E  00F8               	movwf	secuencia1@var3+1	;volatile
  1849     048F  3001               	movlw	1
  1850     0490  00F9               	movwf	secuencia1@var4	;volatile
  1851     0491  3000               	movlw	0
  1852     0492  00FA               	movwf	secuencia1@var4+1	;volatile
  1853     0493                     l1520:
  1854     0493  01F5               	clrf	secuencia1@var5	;volatile
  1855     0494  01F6               	clrf	secuencia1@var5+1	;volatile
  1856     0495                     l1522:
  1857                           
  1858                           ;MAIN.c: 55: for (int i = 0; i < 2; i++) {
  1859     0495  01F3               	clrf	secuencia1@i
  1860     0496  01F4               	clrf	secuencia1@i+1
  1861     0497                     l1528:
  1862                           
  1863                           ;MAIN.c: 56:         var5 = var3 | var4;
  1864     0497  0879               	movf	secuencia1@var4,w	;volatile
  1865     0498  0477               	iorwf	secuencia1@var3,w	;volatile
  1866     0499  00F5               	movwf	secuencia1@var5	;volatile
  1867     049A  087A               	movf	secuencia1@var4+1,w	;volatile
  1868     049B  0478               	iorwf	secuencia1@var3+1,w	;volatile
  1869     049C  00F6               	movwf	secuencia1@var5+1	;volatile
  1870                           
  1871                           ;MAIN.c: 57:         PORTD = (unsigned char)(var5);
  1872     049D  0875               	movf	secuencia1@var5,w	;volatile
  1873     049E  1283               	bcf	3,5	;RP0=0, select bank0
  1874     049F  1303               	bcf	3,6	;RP1=0, select bank0
  1875     04A0  0088               	movwf	8	;volatile
  1876                           
  1877                           ;MAIN.c: 58:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1878     04A1  3006               	movlw	6
  1879     04A2  00F2               	movwf	??_secuencia1+2
  1880     04A3  3013               	movlw	19
  1881     04A4  00F1               	movwf	??_secuencia1+1
  1882     04A5  30AD               	movlw	173
  1883     04A6  00F0               	movwf	??_secuencia1
  1884     04A7                     u1117:
  1885     04A7  0BF0               	decfsz	??_secuencia1,f
  1886     04A8  2CA7               	goto	u1117
  1887     04A9  0BF1               	decfsz	??_secuencia1+1,f
  1888     04AA  2CA7               	goto	u1117
  1889     04AB  0BF2               	decfsz	??_secuencia1+2,f
  1890     04AC  2CA7               	goto	u1117
  1891     04AD  2CAE               	nop2
  1892     04AE                     l1530:
  1893                           
  1894                           ;MAIN.c: 61:         var3 = var3 >> 1;
  1895     04AE  0878               	movf	secuencia1@var3+1,w	;volatile
  1896     04AF  00F1               	movwf	??_secuencia1+1
  1897     04B0  0877               	movf	secuencia1@var3,w	;volatile
  1898     04B1  00F0               	movwf	??_secuencia1
  1899     04B2  1003               	clrc
  1900     04B3  0CF1               	rrf	??_secuencia1+1,f
  1901     04B4  0CF0               	rrf	??_secuencia1,f
  1902     04B5  0870               	movf	??_secuencia1,w
  1903     04B6  00F7               	movwf	secuencia1@var3	;volatile
  1904     04B7  0871               	movf	??_secuencia1+1,w
  1905     04B8  00F8               	movwf	secuencia1@var3+1	;volatile
  1906     04B9                     l1532:
  1907                           
  1908                           ;MAIN.c: 62:         var4 = var4 << 1;
  1909     04B9  1003               	clrc
  1910     04BA  0D79               	rlf	secuencia1@var4,w	;volatile
  1911     04BB  00F9               	movwf	secuencia1@var4	;volatile
  1912     04BC  0D7A               	rlf	secuencia1@var4+1,w	;volatile
  1913     04BD  00FA               	movwf	secuencia1@var4+1	;volatile
  1914     04BE                     l1534:
  1915                           
  1916                           ;MAIN.c: 65:         var5 = var3 | var4;
  1917     04BE  0879               	movf	secuencia1@var4,w	;volatile
  1918     04BF  0477               	iorwf	secuencia1@var3,w	;volatile
  1919     04C0  00F5               	movwf	secuencia1@var5	;volatile
  1920     04C1  087A               	movf	secuencia1@var4+1,w	;volatile
  1921     04C2  0478               	iorwf	secuencia1@var3+1,w	;volatile
  1922     04C3  00F6               	movwf	secuencia1@var5+1	;volatile
  1923     04C4                     l1536:
  1924                           
  1925                           ;MAIN.c: 66:         PORTD = (unsigned char)(var5);
  1926     04C4  0875               	movf	secuencia1@var5,w	;volatile
  1927     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  1928     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  1929     04C7  0088               	movwf	8	;volatile
  1930     04C8                     l1538:
  1931                           
  1932                           ;MAIN.c: 67:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1933     04C8  3006               	movlw	6
  1934     04C9  00F2               	movwf	??_secuencia1+2
  1935     04CA  3013               	movlw	19
  1936     04CB  00F1               	movwf	??_secuencia1+1
  1937     04CC  30AD               	movlw	173
  1938     04CD  00F0               	movwf	??_secuencia1
  1939     04CE                     u1127:
  1940     04CE  0BF0               	decfsz	??_secuencia1,f
  1941     04CF  2CCE               	goto	u1127
  1942     04D0  0BF1               	decfsz	??_secuencia1+1,f
  1943     04D1  2CCE               	goto	u1127
  1944     04D2  0BF2               	decfsz	??_secuencia1+2,f
  1945     04D3  2CCE               	goto	u1127
  1946     04D4  2CD5               	nop2
  1947     04D5                     l1540:
  1948                           
  1949                           ;MAIN.c: 70:         var5 = var3 | var4;
  1950     04D5  0879               	movf	secuencia1@var4,w	;volatile
  1951     04D6  0477               	iorwf	secuencia1@var3,w	;volatile
  1952     04D7  00F5               	movwf	secuencia1@var5	;volatile
  1953     04D8  087A               	movf	secuencia1@var4+1,w	;volatile
  1954     04D9  0478               	iorwf	secuencia1@var3+1,w	;volatile
  1955     04DA  00F6               	movwf	secuencia1@var5+1	;volatile
  1956     04DB                     l1542:
  1957                           
  1958                           ;MAIN.c: 71:         var3 = var3 << 1;
  1959     04DB  1003               	clrc
  1960     04DC  0D77               	rlf	secuencia1@var3,w	;volatile
  1961     04DD  00F7               	movwf	secuencia1@var3	;volatile
  1962     04DE  0D78               	rlf	secuencia1@var3+1,w	;volatile
  1963     04DF  00F8               	movwf	secuencia1@var3+1	;volatile
  1964     04E0                     l1544:
  1965                           
  1966                           ;MAIN.c: 72:         var4 = var4 << 1;
  1967     04E0  1003               	clrc
  1968     04E1  0D79               	rlf	secuencia1@var4,w	;volatile
  1969     04E2  00F9               	movwf	secuencia1@var4	;volatile
  1970     04E3  0D7A               	rlf	secuencia1@var4+1,w	;volatile
  1971     04E4  00FA               	movwf	secuencia1@var4+1	;volatile
  1972     04E5                     l1546:
  1973                           
  1974                           ;MAIN.c: 73:     }
  1975     04E5  3001               	movlw	1
  1976     04E6  07F3               	addwf	secuencia1@i,f
  1977     04E7  1803               	skipnc
  1978     04E8  0AF4               	incf	secuencia1@i+1,f
  1979     04E9  3000               	movlw	0
  1980     04EA  07F4               	addwf	secuencia1@i+1,f
  1981     04EB                     l1548:
  1982     04EB  0874               	movf	secuencia1@i+1,w
  1983     04EC  3A80               	xorlw	128
  1984     04ED  00FF               	movwf	btemp+1
  1985     04EE  3080               	movlw	128
  1986     04EF  027F               	subwf	btemp+1,w
  1987     04F0  1D03               	skipz
  1988     04F1  2CF4               	goto	u935
  1989     04F2  3002               	movlw	2
  1990     04F3  0273               	subwf	secuencia1@i,w
  1991     04F4                     u935:
  1992     04F4  1C03               	skipc
  1993     04F5  2CF7               	goto	u931
  1994     04F6  2CF8               	goto	u930
  1995     04F7                     u931:
  1996     04F7  2C97               	goto	l1528
  1997     04F8                     u930:
  1998     04F8                     l202:
  1999     04F8  0008               	return
  2000     04F9                     __end_of_secuencia1:
  2001                           
  2002                           	psect	text4
  2003     01ED                     __ptext4:	
  2004 ;; *************** function _keypad_init *****************
  2005 ;; Defined at:
  2006 ;;		line 5 in file "KEYPAD.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2020 ;;      Params:         0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0
  2022 ;;      Temps:          0       0       0       0       0
  2023 ;;      Totals:         0       0       0       0       0
  2024 ;;Total ram usage:        0 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_main
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033     01ED                     _keypad_init:	
  2034                           ;psect for function _keypad_init
  2035                           
  2036     01ED                     l1372:	
  2037                           ;incstack = 0
  2038                           ; Regs used in _keypad_init: [wreg+status,2+status,0]
  2039                           
  2040                           
  2041                           ;KEYPAD.c: 7:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  2042     01ED  30F0               	movlw	240
  2043     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  2044     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  2045     01F0  0586               	andwf	6,f	;volatile
  2046                           
  2047                           ;KEYPAD.c: 8:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  2048     01F1  30F0               	movlw	240
  2049     01F2  0486               	iorwf	6,f	;volatile
  2050     01F3                     l1374:
  2051                           
  2052                           ;KEYPAD.c: 9:     OPTION_REGbits.nRBPU = 0;
  2053     01F3  1381               	bcf	1,7	;volatile
  2054     01F4                     l74:
  2055     01F4  0008               	return
  2056     01F5                     __end_of_keypad_init:
  2057                           
  2058                           	psect	text5
  2059     04F9                     __ptext5:	
  2060 ;; *************** function _keypad_getkey *****************
  2061 ;; Defined at:
  2062 ;;		line 11 in file "KEYPAD.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  2067 ;;  i               2   17[BANK0 ] int 
  2068 ;;  valor           1   16[BANK0 ] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      unsigned char 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       0       0       0
  2079 ;;      Locals:         0      19       0       0       0
  2080 ;;      Temps:          4       0       0       0       0
  2081 ;;      Totals:         4      19       0       0       0
  2082 ;;Total ram usage:       23 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091     04F9                     _keypad_getkey:	
  2092                           ;psect for function _keypad_getkey
  2093                           
  2094     04F9                     l1376:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  2097                           
  2098                           
  2099                           ;KEYPAD.c: 13: char letras[4][4]={ {'1','2','3','A'},
  2100     04F9  30A0               	movlw	keypad_getkey@F1398& (0+255)
  2101     04FA  0084               	movwf	4
  2102     04FB  3048               	movlw	low keypad_getkey@letras
  2103     04FC  00F0               	movwf	??_keypad_getkey
  2104     04FD  3010               	movlw	16
  2105     04FE  00F1               	movwf	??_keypad_getkey+1
  2106     04FF                     u640:
  2107     04FF  1383               	bcf	3,7	;select IRP bank1
  2108     0500  0800               	movf	0,w
  2109     0501  00F2               	movwf	??_keypad_getkey+2
  2110     0502  0A04               	incf	4,w
  2111     0503  00F3               	movwf	??_keypad_getkey+3
  2112     0504  0870               	movf	??_keypad_getkey,w
  2113     0505  0084               	movwf	4
  2114     0506  0872               	movf	??_keypad_getkey+2,w
  2115     0507  0080               	movwf	0
  2116     0508  0A04               	incf	4,w
  2117     0509  00F0               	movwf	??_keypad_getkey
  2118     050A  0873               	movf	??_keypad_getkey+3,w
  2119     050B  0084               	movwf	4
  2120     050C  0BF1               	decfsz	??_keypad_getkey+1,f
  2121     050D  2CFF               	goto	u640
  2122     050E                     l1378:
  2123     050E                     l1380:
  2124                           
  2125                           ;KEYPAD.c: 18: char valor=0;
  2126     050E  1283               	bcf	3,5	;RP0=0, select bank0
  2127     050F  1303               	bcf	3,6	;RP1=0, select bank0
  2128     0510  01D8               	clrf	keypad_getkey@valor
  2129     0511                     l1382:
  2130                           
  2131                           ;KEYPAD.c: 20: for(i=0;i<4;i++){
  2132     0511  01D9               	clrf	keypad_getkey@i
  2133     0512  01DA               	clrf	keypad_getkey@i+1
  2134     0513                     l1388:
  2135                           
  2136                           ;KEYPAD.c: 22:    if(i==0){
  2137     0513  1283               	bcf	3,5	;RP0=0, select bank0
  2138     0514  1303               	bcf	3,6	;RP1=0, select bank0
  2139     0515  0859               	movf	keypad_getkey@i,w
  2140     0516  045A               	iorwf	keypad_getkey@i+1,w
  2141     0517  1D03               	btfss	3,2
  2142     0518  2D1A               	goto	u651
  2143     0519  2D1B               	goto	u650
  2144     051A                     u651:
  2145     051A  2D40               	goto	l1410
  2146     051B                     u650:
  2147     051B                     l1390:
  2148                           
  2149                           ;KEYPAD.c: 24:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  2150     051B  30FE               	movlw	254
  2151     051C  0086               	movwf	6	;volatile
  2152     051D                     l1392:
  2153                           
  2154                           ;KEYPAD.c: 25:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2155     051D  3042               	movlw	66
  2156     051E  00F0               	movwf	??_keypad_getkey
  2157     051F                     u1137:
  2158     051F  0BF0               	decfsz	??_keypad_getkey,f
  2159     0520  2D1F               	goto	u1137
  2160     0521  0000               	nop
  2161                           
  2162                           ;KEYPAD.c: 26:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  2163     0522  2D25               	goto	l1396
  2164     0523                     l1394:
  2165     0523  0848               	movf	keypad_getkey@letras,w
  2166     0524  00D8               	movwf	keypad_getkey@valor
  2167     0525                     l1396:
  2168     0525  1283               	bcf	3,5	;RP0=0, select bank0
  2169     0526  1303               	bcf	3,6	;RP1=0, select bank0
  2170     0527  1E06               	btfss	6,4	;volatile
  2171     0528  2D2A               	goto	u661
  2172     0529  2D2B               	goto	u660
  2173     052A                     u661:
  2174     052A  2D23               	goto	l1394
  2175     052B                     u660:
  2176     052B  2D2E               	goto	l1400
  2177     052C                     l1398:
  2178     052C  0849               	movf	keypad_getkey@letras+1,w
  2179     052D  00D8               	movwf	keypad_getkey@valor
  2180     052E                     l1400:
  2181     052E  1E86               	btfss	6,5	;volatile
  2182     052F  2D31               	goto	u671
  2183     0530  2D32               	goto	u670
  2184     0531                     u671:
  2185     0531  2D2C               	goto	l1398
  2186     0532                     u670:
  2187     0532  2D35               	goto	l1404
  2188     0533                     l1402:
  2189     0533  084A               	movf	keypad_getkey@letras+2,w
  2190     0534  00D8               	movwf	keypad_getkey@valor
  2191     0535                     l1404:
  2192     0535  1F06               	btfss	6,6	;volatile
  2193     0536  2D38               	goto	u681
  2194     0537  2D39               	goto	u680
  2195     0538                     u681:
  2196     0538  2D33               	goto	l1402
  2197     0539                     u680:
  2198     0539  2D3C               	goto	l1408
  2199     053A                     l1406:
  2200     053A  084B               	movf	keypad_getkey@letras+3,w
  2201     053B  00D8               	movwf	keypad_getkey@valor
  2202     053C                     l1408:
  2203     053C  1F86               	btfss	6,7	;volatile
  2204     053D  2D3F               	goto	u691
  2205     053E  2D40               	goto	u690
  2206     053F                     u691:
  2207     053F  2D3A               	goto	l1406
  2208     0540                     u690:
  2209     0540                     l1410:
  2210                           
  2211                           ;KEYPAD.c: 32:    if(i==1){
  2212     0540  0359               	decf	keypad_getkey@i,w
  2213     0541  045A               	iorwf	keypad_getkey@i+1,w
  2214     0542  1D03               	btfss	3,2
  2215     0543  2D45               	goto	u701
  2216     0544  2D46               	goto	u700
  2217     0545                     u701:
  2218     0545  2D6B               	goto	l1432
  2219     0546                     u700:
  2220     0546                     l1412:
  2221                           
  2222                           ;KEYPAD.c: 33:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  2223     0546  30FD               	movlw	253
  2224     0547  0086               	movwf	6	;volatile
  2225     0548                     l1414:
  2226                           
  2227                           ;KEYPAD.c: 34:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2228     0548  3042               	movlw	66
  2229     0549  00F0               	movwf	??_keypad_getkey
  2230     054A                     u1147:
  2231     054A  0BF0               	decfsz	??_keypad_getkey,f
  2232     054B  2D4A               	goto	u1147
  2233     054C  0000               	nop
  2234                           
  2235                           ;KEYPAD.c: 35:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  2236     054D  2D50               	goto	l1418
  2237     054E                     l1416:
  2238     054E  084C               	movf	keypad_getkey@letras+4,w
  2239     054F  00D8               	movwf	keypad_getkey@valor
  2240     0550                     l1418:
  2241     0550  1283               	bcf	3,5	;RP0=0, select bank0
  2242     0551  1303               	bcf	3,6	;RP1=0, select bank0
  2243     0552  1E06               	btfss	6,4	;volatile
  2244     0553  2D55               	goto	u711
  2245     0554  2D56               	goto	u710
  2246     0555                     u711:
  2247     0555  2D4E               	goto	l1416
  2248     0556                     u710:
  2249     0556  2D59               	goto	l1422
  2250     0557                     l1420:
  2251     0557  084D               	movf	keypad_getkey@letras+5,w
  2252     0558  00D8               	movwf	keypad_getkey@valor
  2253     0559                     l1422:
  2254     0559  1E86               	btfss	6,5	;volatile
  2255     055A  2D5C               	goto	u721
  2256     055B  2D5D               	goto	u720
  2257     055C                     u721:
  2258     055C  2D57               	goto	l1420
  2259     055D                     u720:
  2260     055D  2D60               	goto	l1426
  2261     055E                     l1424:
  2262     055E  084E               	movf	keypad_getkey@letras+6,w
  2263     055F  00D8               	movwf	keypad_getkey@valor
  2264     0560                     l1426:
  2265     0560  1F06               	btfss	6,6	;volatile
  2266     0561  2D63               	goto	u731
  2267     0562  2D64               	goto	u730
  2268     0563                     u731:
  2269     0563  2D5E               	goto	l1424
  2270     0564                     u730:
  2271     0564  2D67               	goto	l1430
  2272     0565                     l1428:
  2273     0565  084F               	movf	keypad_getkey@letras+7,w
  2274     0566  00D8               	movwf	keypad_getkey@valor
  2275     0567                     l1430:
  2276     0567  1F86               	btfss	6,7	;volatile
  2277     0568  2D6A               	goto	u741
  2278     0569  2D6B               	goto	u740
  2279     056A                     u741:
  2280     056A  2D65               	goto	l1428
  2281     056B                     u740:
  2282     056B                     l1432:
  2283                           
  2284                           ;KEYPAD.c: 41:    if(i==2){
  2285     056B  3002               	movlw	2
  2286     056C  0659               	xorwf	keypad_getkey@i,w
  2287     056D  045A               	iorwf	keypad_getkey@i+1,w
  2288     056E  1D03               	btfss	3,2
  2289     056F  2D71               	goto	u751
  2290     0570  2D72               	goto	u750
  2291     0571                     u751:
  2292     0571  2D97               	goto	l1454
  2293     0572                     u750:
  2294     0572                     l1434:
  2295                           
  2296                           ;KEYPAD.c: 42:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  2297     0572  30FB               	movlw	251
  2298     0573  0086               	movwf	6	;volatile
  2299     0574                     l1436:
  2300                           
  2301                           ;KEYPAD.c: 43:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2302     0574  3042               	movlw	66
  2303     0575  00F0               	movwf	??_keypad_getkey
  2304     0576                     u1157:
  2305     0576  0BF0               	decfsz	??_keypad_getkey,f
  2306     0577  2D76               	goto	u1157
  2307     0578  0000               	nop
  2308                           
  2309                           ;KEYPAD.c: 44:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  2310     0579  2D7C               	goto	l1440
  2311     057A                     l1438:
  2312     057A  0850               	movf	keypad_getkey@letras+8,w
  2313     057B  00D8               	movwf	keypad_getkey@valor
  2314     057C                     l1440:
  2315     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2316     057D  1303               	bcf	3,6	;RP1=0, select bank0
  2317     057E  1E06               	btfss	6,4	;volatile
  2318     057F  2D81               	goto	u761
  2319     0580  2D82               	goto	u760
  2320     0581                     u761:
  2321     0581  2D7A               	goto	l1438
  2322     0582                     u760:
  2323     0582  2D85               	goto	l1444
  2324     0583                     l1442:
  2325     0583  0851               	movf	keypad_getkey@letras+9,w
  2326     0584  00D8               	movwf	keypad_getkey@valor
  2327     0585                     l1444:
  2328     0585  1E86               	btfss	6,5	;volatile
  2329     0586  2D88               	goto	u771
  2330     0587  2D89               	goto	u770
  2331     0588                     u771:
  2332     0588  2D83               	goto	l1442
  2333     0589                     u770:
  2334     0589  2D8C               	goto	l1448
  2335     058A                     l1446:
  2336     058A  0852               	movf	keypad_getkey@letras+10,w
  2337     058B  00D8               	movwf	keypad_getkey@valor
  2338     058C                     l1448:
  2339     058C  1F06               	btfss	6,6	;volatile
  2340     058D  2D8F               	goto	u781
  2341     058E  2D90               	goto	u780
  2342     058F                     u781:
  2343     058F  2D8A               	goto	l1446
  2344     0590                     u780:
  2345     0590  2D93               	goto	l1452
  2346     0591                     l1450:
  2347     0591  0853               	movf	keypad_getkey@letras+11,w
  2348     0592  00D8               	movwf	keypad_getkey@valor
  2349     0593                     l1452:
  2350     0593  1F86               	btfss	6,7	;volatile
  2351     0594  2D96               	goto	u791
  2352     0595  2D97               	goto	u790
  2353     0596                     u791:
  2354     0596  2D91               	goto	l1450
  2355     0597                     u790:
  2356     0597                     l1454:
  2357                           
  2358                           ;KEYPAD.c: 50:    if(i==3){
  2359     0597  3003               	movlw	3
  2360     0598  0659               	xorwf	keypad_getkey@i,w
  2361     0599  045A               	iorwf	keypad_getkey@i+1,w
  2362     059A  1D03               	btfss	3,2
  2363     059B  2D9D               	goto	u801
  2364     059C  2D9E               	goto	u800
  2365     059D                     u801:
  2366     059D  2DC3               	goto	l1476
  2367     059E                     u800:
  2368     059E                     l1456:
  2369                           
  2370                           ;KEYPAD.c: 51:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  2371     059E  30F7               	movlw	247
  2372     059F  0086               	movwf	6	;volatile
  2373     05A0                     l1458:
  2374                           
  2375                           ;KEYPAD.c: 52:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  2376     05A0  3042               	movlw	66
  2377     05A1  00F0               	movwf	??_keypad_getkey
  2378     05A2                     u1167:
  2379     05A2  0BF0               	decfsz	??_keypad_getkey,f
  2380     05A3  2DA2               	goto	u1167
  2381     05A4  0000               	nop
  2382                           
  2383                           ;KEYPAD.c: 53:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  2384     05A5  2DA8               	goto	l1462
  2385     05A6                     l1460:
  2386     05A6  0854               	movf	keypad_getkey@letras+12,w
  2387     05A7  00D8               	movwf	keypad_getkey@valor
  2388     05A8                     l1462:
  2389     05A8  1283               	bcf	3,5	;RP0=0, select bank0
  2390     05A9  1303               	bcf	3,6	;RP1=0, select bank0
  2391     05AA  1E06               	btfss	6,4	;volatile
  2392     05AB  2DAD               	goto	u811
  2393     05AC  2DAE               	goto	u810
  2394     05AD                     u811:
  2395     05AD  2DA6               	goto	l1460
  2396     05AE                     u810:
  2397     05AE  2DB1               	goto	l1466
  2398     05AF                     l1464:
  2399     05AF  0855               	movf	keypad_getkey@letras+13,w
  2400     05B0  00D8               	movwf	keypad_getkey@valor
  2401     05B1                     l1466:
  2402     05B1  1E86               	btfss	6,5	;volatile
  2403     05B2  2DB4               	goto	u821
  2404     05B3  2DB5               	goto	u820
  2405     05B4                     u821:
  2406     05B4  2DAF               	goto	l1464
  2407     05B5                     u820:
  2408     05B5  2DB8               	goto	l1470
  2409     05B6                     l1468:
  2410     05B6  0856               	movf	keypad_getkey@letras+14,w
  2411     05B7  00D8               	movwf	keypad_getkey@valor
  2412     05B8                     l1470:
  2413     05B8  1F06               	btfss	6,6	;volatile
  2414     05B9  2DBB               	goto	u831
  2415     05BA  2DBC               	goto	u830
  2416     05BB                     u831:
  2417     05BB  2DB6               	goto	l1468
  2418     05BC                     u830:
  2419     05BC  2DBF               	goto	l1474
  2420     05BD                     l1472:
  2421     05BD  0857               	movf	keypad_getkey@letras+15,w
  2422     05BE  00D8               	movwf	keypad_getkey@valor
  2423     05BF                     l1474:
  2424     05BF  1F86               	btfss	6,7	;volatile
  2425     05C0  2DC2               	goto	u841
  2426     05C1  2DC3               	goto	u840
  2427     05C2                     u841:
  2428     05C2  2DBD               	goto	l1472
  2429     05C3                     u840:
  2430     05C3                     l1476:
  2431                           
  2432                           ;KEYPAD.c: 58:    }
  2433     05C3  3001               	movlw	1
  2434     05C4  07D9               	addwf	keypad_getkey@i,f
  2435     05C5  1803               	skipnc
  2436     05C6  0ADA               	incf	keypad_getkey@i+1,f
  2437     05C7  3000               	movlw	0
  2438     05C8  07DA               	addwf	keypad_getkey@i+1,f
  2439     05C9                     l1478:
  2440     05C9  085A               	movf	keypad_getkey@i+1,w
  2441     05CA  3A80               	xorlw	128
  2442     05CB  00FF               	movwf	btemp+1
  2443     05CC  3080               	movlw	128
  2444     05CD  027F               	subwf	btemp+1,w
  2445     05CE  1D03               	skipz
  2446     05CF  2DD2               	goto	u855
  2447     05D0  3004               	movlw	4
  2448     05D1  0259               	subwf	keypad_getkey@i,w
  2449     05D2                     u855:
  2450     05D2  1C03               	skipc
  2451     05D3  2DD5               	goto	u851
  2452     05D4  2DD6               	goto	u850
  2453     05D5                     u851:
  2454     05D5  2D13               	goto	l1388
  2455     05D6                     u850:
  2456     05D6                     l1480:
  2457                           
  2458                           ;KEYPAD.c: 60:    return valor;
  2459     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  2460     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  2461     05D8  0858               	movf	keypad_getkey@valor,w
  2462     05D9                     l133:
  2463     05D9  0008               	return
  2464     05DA                     __end_of_keypad_getkey:
  2465                           
  2466                           	psect	text6
  2467     0428                     __ptext6:	
  2468 ;; *************** function _blink_led *****************
  2469 ;; Defined at:
  2470 ;;		line 26 in file "MAIN.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  led             1    wreg     unsigned char 
  2473 ;;  on_time         2    4[COMMON] unsigned int 
  2474 ;;  off_time        2    6[COMMON] unsigned int 
  2475 ;;  duration        2    8[COMMON] unsigned int 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  led             1    2[BANK0 ] unsigned char 
  2478 ;;  elapsed_time    2    0[BANK0 ] unsigned int 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         6       0       0       0       0
  2489 ;;      Locals:         0       3       0       0       0
  2490 ;;      Temps:          2       0       0       0       0
  2491 ;;      Totals:         8       3       0       0       0
  2492 ;;Total ram usage:       11 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 1
  2495 ;; This function calls:
  2496 ;;		_delay_ms_variable
  2497 ;; This function is called by:
  2498 ;;		_main
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502     0428                     _blink_led:	
  2503                           ;psect for function _blink_led
  2504                           
  2505                           
  2506                           ;incstack = 0
  2507                           ; Regs used in _blink_led: [wreg+status,2+status,0+pclath+cstack]
  2508                           ;blink_led@led stored from wreg
  2509     0428  1283               	bcf	3,5	;RP0=0, select bank0
  2510     0429  1303               	bcf	3,6	;RP1=0, select bank0
  2511     042A  00CA               	movwf	blink_led@led
  2512     042B                     l1484:
  2513                           
  2514                           ;MAIN.c: 27:     unsigned int elapsed_time = 0;
  2515     042B  01C8               	clrf	blink_led@elapsed_time
  2516     042C  01C9               	clrf	blink_led@elapsed_time+1
  2517                           
  2518                           ;MAIN.c: 29:     while (elapsed_time < duration) {
  2519     042D  2C80               	goto	l1516
  2520     042E                     l1486:
  2521                           
  2522                           ;MAIN.c: 30:         if (led == 'V') {
  2523     042E  3056               	movlw	86
  2524     042F  064A               	xorwf	blink_led@led,w
  2525     0430  1D03               	btfss	3,2
  2526     0431  2C33               	goto	u861
  2527     0432  2C34               	goto	u860
  2528     0433                     u861:
  2529     0433  2C36               	goto	l1490
  2530     0434                     u860:
  2531     0434                     l1488:
  2532                           
  2533                           ;MAIN.c: 31:             PORTAbits.RA0 = 1;
  2534     0434  1405               	bsf	5,0	;volatile
  2535                           
  2536                           ;MAIN.c: 32:         } else if (led == 'A') {
  2537     0435  2C45               	goto	l1498
  2538     0436                     l1490:
  2539     0436  3041               	movlw	65
  2540     0437  064A               	xorwf	blink_led@led,w
  2541     0438  1D03               	btfss	3,2
  2542     0439  2C3B               	goto	u871
  2543     043A  2C3C               	goto	u870
  2544     043B                     u871:
  2545     043B  2C3E               	goto	l1494
  2546     043C                     u870:
  2547     043C                     l1492:
  2548                           
  2549                           ;MAIN.c: 33:             PORTAbits.RA1 = 1;
  2550     043C  1485               	bsf	5,1	;volatile
  2551                           
  2552                           ;MAIN.c: 34:         } else if (led == 'R') {
  2553     043D  2C45               	goto	l1498
  2554     043E                     l1494:
  2555     043E  3052               	movlw	82
  2556     043F  064A               	xorwf	blink_led@led,w
  2557     0440  1D03               	btfss	3,2
  2558     0441  2C43               	goto	u881
  2559     0442  2C44               	goto	u880
  2560     0443                     u881:
  2561     0443  2C45               	goto	l1498
  2562     0444                     u880:
  2563     0444                     l1496:
  2564                           
  2565                           ;MAIN.c: 35:             PORTAbits.RA2 = 1;
  2566     0444  1505               	bsf	5,2	;volatile
  2567     0445                     l1498:
  2568                           
  2569                           ;MAIN.c: 37:         delay_ms_variable(on_time);
  2570     0445  0875               	movf	blink_led@on_time+1,w
  2571     0446  00F1               	movwf	delay_ms_variable@ms+1
  2572     0447  0874               	movf	blink_led@on_time,w
  2573     0448  00F0               	movwf	delay_ms_variable@ms
  2574     0449  120A  118A  223B  120A  118A  	fcall	_delay_ms_variable
  2575     044E                     l1500:
  2576                           
  2577                           ;MAIN.c: 40:         if (led == 'V') {
  2578     044E  3056               	movlw	86
  2579     044F  1283               	bcf	3,5	;RP0=0, select bank0
  2580     0450  1303               	bcf	3,6	;RP1=0, select bank0
  2581     0451  064A               	xorwf	blink_led@led,w
  2582     0452  1D03               	btfss	3,2
  2583     0453  2C55               	goto	u891
  2584     0454  2C56               	goto	u890
  2585     0455                     u891:
  2586     0455  2C58               	goto	l1504
  2587     0456                     u890:
  2588     0456                     l1502:
  2589                           
  2590                           ;MAIN.c: 41:             PORTAbits.RA0 = 0;
  2591     0456  1005               	bcf	5,0	;volatile
  2592                           
  2593                           ;MAIN.c: 42:         } else if (led == 'A') {
  2594     0457  2C67               	goto	l1512
  2595     0458                     l1504:
  2596     0458  3041               	movlw	65
  2597     0459  064A               	xorwf	blink_led@led,w
  2598     045A  1D03               	btfss	3,2
  2599     045B  2C5D               	goto	u901
  2600     045C  2C5E               	goto	u900
  2601     045D                     u901:
  2602     045D  2C60               	goto	l1508
  2603     045E                     u900:
  2604     045E                     l1506:
  2605                           
  2606                           ;MAIN.c: 43:             PORTAbits.RA1 = 0;
  2607     045E  1085               	bcf	5,1	;volatile
  2608                           
  2609                           ;MAIN.c: 44:         } else if (led == 'R') {
  2610     045F  2C67               	goto	l1512
  2611     0460                     l1508:
  2612     0460  3052               	movlw	82
  2613     0461  064A               	xorwf	blink_led@led,w
  2614     0462  1D03               	btfss	3,2
  2615     0463  2C65               	goto	u911
  2616     0464  2C66               	goto	u910
  2617     0465                     u911:
  2618     0465  2C67               	goto	l1512
  2619     0466                     u910:
  2620     0466                     l1510:
  2621                           
  2622                           ;MAIN.c: 45:             PORTAbits.RA2 = 0;
  2623     0466  1105               	bcf	5,2	;volatile
  2624     0467                     l1512:
  2625                           
  2626                           ;MAIN.c: 47:         delay_ms_variable(off_time);
  2627     0467  0877               	movf	blink_led@off_time+1,w
  2628     0468  00F1               	movwf	delay_ms_variable@ms+1
  2629     0469  0876               	movf	blink_led@off_time,w
  2630     046A  00F0               	movwf	delay_ms_variable@ms
  2631     046B  120A  118A  223B  120A  118A  	fcall	_delay_ms_variable
  2632     0470                     l1514:
  2633                           
  2634                           ;MAIN.c: 49:         elapsed_time += on_time + off_time;
  2635     0470  0876               	movf	blink_led@off_time,w
  2636     0471  0774               	addwf	blink_led@on_time,w
  2637     0472  00FA               	movwf	??_blink_led
  2638     0473  0877               	movf	blink_led@off_time+1,w
  2639     0474  1803               	skipnc
  2640     0475  0A77               	incf	blink_led@off_time+1,w
  2641     0476  0775               	addwf	blink_led@on_time+1,w
  2642     0477  00FB               	movwf	??_blink_led+1
  2643     0478  087A               	movf	??_blink_led,w
  2644     0479  1283               	bcf	3,5	;RP0=0, select bank0
  2645     047A  1303               	bcf	3,6	;RP1=0, select bank0
  2646     047B  07C8               	addwf	blink_led@elapsed_time,f
  2647     047C  1803               	skipnc
  2648     047D  0AC9               	incf	blink_led@elapsed_time+1,f
  2649     047E  087B               	movf	??_blink_led+1,w
  2650     047F  07C9               	addwf	blink_led@elapsed_time+1,f
  2651     0480                     l1516:
  2652                           
  2653                           ;MAIN.c: 29:     while (elapsed_time < duration) {
  2654     0480  0879               	movf	blink_led@duration+1,w
  2655     0481  0249               	subwf	blink_led@elapsed_time+1,w
  2656     0482  1D03               	skipz
  2657     0483  2C86               	goto	u925
  2658     0484  0878               	movf	blink_led@duration,w
  2659     0485  0248               	subwf	blink_led@elapsed_time,w
  2660     0486                     u925:
  2661     0486  1C03               	skipc
  2662     0487  2C89               	goto	u921
  2663     0488  2C8A               	goto	u920
  2664     0489                     u921:
  2665     0489  2C2E               	goto	l1486
  2666     048A                     u920:
  2667     048A                     l197:
  2668     048A  0008               	return
  2669     048B                     __end_of_blink_led:
  2670                           
  2671                           	psect	text7
  2672     023B                     __ptext7:	
  2673 ;; *************** function _delay_ms_variable *****************
  2674 ;; Defined at:
  2675 ;;		line 19 in file "MAIN.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  ms              2    0[COMMON] unsigned int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         2       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0
  2691 ;;      Temps:          2       0       0       0       0
  2692 ;;      Totals:         4       0       0       0       0
  2693 ;;Total ram usage:        4 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_blink_led
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702     023B                     _delay_ms_variable:	
  2703                           ;psect for function _delay_ms_variable
  2704                           
  2705     023B                     l1320:	
  2706                           ;incstack = 0
  2707                           ; Regs used in _delay_ms_variable: [wreg+status,2+status,0]
  2708                           
  2709                           
  2710                           ;MAIN.c: 20:     while (ms--) {
  2711     023B  2A45               	goto	l1324
  2712     023C                     l1322:
  2713                           
  2714                           ;MAIN.c: 21:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2715     023C  3003               	movlw	3
  2716     023D  00F3               	movwf	??_delay_ms_variable+1
  2717     023E  3097               	movlw	151
  2718     023F  00F2               	movwf	??_delay_ms_variable
  2719     0240                     u1177:
  2720     0240  0BF2               	decfsz	??_delay_ms_variable,f
  2721     0241  2A40               	goto	u1177
  2722     0242  0BF3               	decfsz	??_delay_ms_variable+1,f
  2723     0243  2A40               	goto	u1177
  2724     0244  2A45               	nop2
  2725     0245                     l1324:
  2726                           
  2727                           ;MAIN.c: 20:     while (ms--) {
  2728     0245  3001               	movlw	1
  2729     0246  02F0               	subwf	delay_ms_variable@ms,f
  2730     0247  3000               	movlw	0
  2731     0248  1C03               	skipc
  2732     0249  03F1               	decf	delay_ms_variable@ms+1,f
  2733     024A  02F1               	subwf	delay_ms_variable@ms+1,f
  2734     024B  0A70               	incf	delay_ms_variable@ms,w
  2735     024C  1D03               	skipz
  2736     024D  2A52               	goto	u601
  2737     024E  0A71               	incf	delay_ms_variable@ms+1,w
  2738     024F  1D03               	btfss	3,2
  2739     0250  2A52               	goto	u601
  2740     0251  2A53               	goto	u600
  2741     0252                     u601:
  2742     0252  2A3C               	goto	l1322
  2743     0253                     u600:
  2744     0253                     l181:
  2745     0253  0008               	return
  2746     0254                     __end_of_delay_ms_variable:
  2747                           
  2748                           	psect	text8
  2749     037F                     __ptext8:	
  2750 ;; *************** function _Lmain *****************
  2751 ;; Defined at:
  2752 ;;		line 116 in file "LCD.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  i               1    8[COMMON] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 3
  2773 ;; This function calls:
  2774 ;;		_LCD_Char
  2775 ;;		_LCD_Command
  2776 ;;		_LCD_Custom_Char
  2777 ;;		_LCD_String_xy
  2778 ;;		___bmul
  2779 ;; This function is called by:
  2780 ;;		_main
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784     037F                     _Lmain:	
  2785                           ;psect for function _Lmain
  2786                           
  2787     037F                     l1358:	
  2788                           ;incstack = 0
  2789                           ; Regs used in _Lmain: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2790                           
  2791                           
  2792                           ;LCD.c: 118:     char i;;LCD.c: 120:     LCD_String_xy(1,0,"");
  2793     037F  01F4               	clrf	LCD_String_xy@pos
  2794     0380  3028               	movlw	(low (((STR_3+16)-__stringbase)| (0+32768)))& (0+255)
  2795     0381  00F5               	movwf	LCD_String_xy@msg
  2796     0382  3001               	movlw	1
  2797     0383  120A  118A  2270  120A  118A  	fcall	_LCD_String_xy
  2798                           
  2799                           ;LCD.c: 121:     LCD_Custom_Char(0,character1);
  2800     0388  3040               	movlw	(low (_character1| 0))& (0+255)
  2801     0389  00F3               	movwf	LCD_Custom_Char@msg
  2802     038A  3000               	movlw	0
  2803     038B  120A  118A  22E6  120A  118A  	fcall	_LCD_Custom_Char
  2804                           
  2805                           ;LCD.c: 122:     LCD_Custom_Char(1,character2);
  2806     0390  3038               	movlw	(low (_character2| 0))& (0+255)
  2807     0391  00F3               	movwf	LCD_Custom_Char@msg
  2808     0392  3001               	movlw	1
  2809     0393  120A  118A  22E6  120A  118A  	fcall	_LCD_Custom_Char
  2810                           
  2811                           ;LCD.c: 123:     LCD_Custom_Char(2,character3);
  2812     0398  3030               	movlw	(low (_character3| 0))& (0+255)
  2813     0399  00F3               	movwf	LCD_Custom_Char@msg
  2814     039A  3002               	movlw	2
  2815     039B  120A  118A  22E6  120A  118A  	fcall	_LCD_Custom_Char
  2816                           
  2817                           ;LCD.c: 124:     LCD_Custom_Char(3,character4);
  2818     03A0  3028               	movlw	(low (_character4| 0))& (0+255)
  2819     03A1  00F3               	movwf	LCD_Custom_Char@msg
  2820     03A2  3003               	movlw	3
  2821     03A3  120A  118A  22E6  120A  118A  	fcall	_LCD_Custom_Char
  2822                           
  2823                           ;LCD.c: 125:     LCD_Custom_Char(4,character5);
  2824     03A8  3020               	movlw	(low (_character5| 0))& (0+255)
  2825     03A9  00F3               	movwf	LCD_Custom_Char@msg
  2826     03AA  3004               	movlw	4
  2827     03AB  120A  118A  22E6  120A  118A  	fcall	_LCD_Custom_Char
  2828     03B0                     l1360:
  2829                           
  2830                           ;LCD.c: 127:     for(i=0;i<5;i++)
  2831     03B0  01F8               	clrf	Lmain@i
  2832     03B1                     l1362:
  2833     03B1  3005               	movlw	5
  2834     03B2  0278               	subwf	Lmain@i,w
  2835     03B3  1C03               	skipc
  2836     03B4  2BB6               	goto	u631
  2837     03B5  2BB7               	goto	u630
  2838     03B6                     u631:
  2839     03B6  2BB8               	goto	l1366
  2840     03B7                     u630:
  2841     03B7  2BCF               	goto	l63
  2842     03B8                     l1366:
  2843                           
  2844                           ;LCD.c: 128:     {;LCD.c: 129:         LCD_Command(0xc0|(i*3));
  2845     03B8  3003               	movlw	3
  2846     03B9  00F0               	movwf	___bmul@multiplicand
  2847     03BA  0878               	movf	Lmain@i,w
  2848     03BB  120A  118A  2215  120A  118A  	fcall	___bmul
  2849     03C0  38C0               	iorlw	192
  2850     03C1  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  2851                           
  2852                           ;LCD.c: 130:         LCD_Char(i);
  2853     03C6  0878               	movf	Lmain@i,w
  2854     03C7  120A  118A  2349  120A  118A  	fcall	_LCD_Char
  2855     03CC                     l1368:
  2856                           
  2857                           ;LCD.c: 132:     }
  2858     03CC  3001               	movlw	1
  2859     03CD  07F8               	addwf	Lmain@i,f
  2860     03CE  2BB1               	goto	l1362
  2861     03CF                     l63:
  2862     03CF  0008               	return
  2863     03D0                     __end_of_Lmain:
  2864                           
  2865                           	psect	text9
  2866     0215                     __ptext9:	
  2867 ;; *************** function ___bmul *****************
  2868 ;; Defined at:
  2869 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\Umul8.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  multiplier      1    wreg     unsigned char 
  2872 ;;  multiplicand    1    0[COMMON] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  multiplier      1    2[COMMON] unsigned char 
  2875 ;;  product         1    1[COMMON] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      unsigned char 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         1       0       0       0       0
  2886 ;;      Locals:         2       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         3       0       0       0       0
  2889 ;;Total ram usage:        3 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_Lmain
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898     0215                     ___bmul:	
  2899                           ;psect for function ___bmul
  2900                           
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2904                           ;___bmul@multiplier stored from wreg
  2905     0215  00F2               	movwf	___bmul@multiplier
  2906     0216                     l1326:
  2907     0216  01F1               	clrf	___bmul@product
  2908     0217                     l1328:
  2909     0217  1C72               	btfss	___bmul@multiplier,0
  2910     0218  2A1A               	goto	u611
  2911     0219  2A1B               	goto	u610
  2912     021A                     u611:
  2913     021A  2A1D               	goto	l1332
  2914     021B                     u610:
  2915     021B                     l1330:
  2916     021B  0870               	movf	___bmul@multiplicand,w
  2917     021C  07F1               	addwf	___bmul@product,f
  2918     021D                     l1332:
  2919     021D  1003               	clrc
  2920     021E  0DF0               	rlf	___bmul@multiplicand,f
  2921     021F                     l1334:
  2922     021F  1003               	clrc
  2923     0220  0CF2               	rrf	___bmul@multiplier,f
  2924     0221  0872               	movf	___bmul@multiplier,w
  2925     0222  1D03               	btfss	3,2
  2926     0223  2A25               	goto	u621
  2927     0224  2A26               	goto	u620
  2928     0225                     u621:
  2929     0225  2A17               	goto	l1328
  2930     0226                     u620:
  2931     0226                     l1336:
  2932     0226  0871               	movf	___bmul@product,w
  2933     0227                     l335:
  2934     0227  0008               	return
  2935     0228                     __end_of___bmul:
  2936                           
  2937                           	psect	text10
  2938     0270                     __ptext10:	
  2939 ;; *************** function _LCD_String_xy *****************
  2940 ;; Defined at:
  2941 ;;		line 78 in file "LCD.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  row             1    wreg     unsigned char 
  2944 ;;  pos             1    4[COMMON] unsigned char 
  2945 ;;  msg             1    5[COMMON] PTR const unsigned char 
  2946 ;;		 -> STR_7(18), STR_6(17), STR_5(15), STR_4(2), 
  2947 ;;		 -> STR_3(17), STR_2(1), 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  row             1    6[COMMON] unsigned char 
  2950 ;;  location        1    7[COMMON] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2960 ;;      Params:         2       0       0       0       0
  2961 ;;      Locals:         2       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0
  2963 ;;      Totals:         4       0       0       0       0
  2964 ;;Total ram usage:        4 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; Hardware stack levels required when called: 2
  2967 ;; This function calls:
  2968 ;;		_LCD_Command
  2969 ;;		_LCD_String
  2970 ;; This function is called by:
  2971 ;;		_Lmain
  2972 ;;		_main
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976     0270                     _LCD_String_xy:	
  2977                           ;psect for function _LCD_String_xy
  2978                           
  2979                           
  2980                           ;incstack = 0
  2981                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2982                           ;LCD_String_xy@row stored from wreg
  2983     0270  00F6               	movwf	LCD_String_xy@row
  2984     0271                     l1290:
  2985     0271                     l1292:
  2986                           
  2987                           ;LCD.c: 81:     if(row<=1)
  2988     0271  3002               	movlw	2
  2989     0272  0276               	subwf	LCD_String_xy@row,w
  2990     0273  1803               	skipnc
  2991     0274  2A76               	goto	u561
  2992     0275  2A77               	goto	u560
  2993     0276                     u561:
  2994     0276  2A82               	goto	l1298
  2995     0277                     u560:
  2996     0277                     l1294:
  2997                           
  2998                           ;LCD.c: 82:     {;LCD.c: 83:         location=(0x80) | ((pos) & 0x0f);
  2999     0277  0874               	movf	LCD_String_xy@pos,w
  3000     0278  390F               	andlw	15
  3001     0279  3880               	iorlw	128
  3002     027A  00F7               	movwf	LCD_String_xy@location
  3003     027B                     l1296:
  3004                           
  3005                           ;LCD.c: 84:         LCD_Command(location);
  3006     027B  0877               	movf	LCD_String_xy@location,w
  3007     027C  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3008                           
  3009                           ;LCD.c: 85:     }
  3010     0281  2A8C               	goto	l1302
  3011     0282                     l1298:
  3012                           
  3013                           ;LCD.c: 87:     {;LCD.c: 88:         location=(0xC0) | ((pos) & 0x0f);
  3014     0282  0874               	movf	LCD_String_xy@pos,w
  3015     0283  390F               	andlw	15
  3016     0284  38C0               	iorlw	192
  3017     0285  00F7               	movwf	LCD_String_xy@location
  3018     0286                     l1300:
  3019                           
  3020                           ;LCD.c: 89:         LCD_Command(location);
  3021     0286  0877               	movf	LCD_String_xy@location,w
  3022     0287  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3023     028C                     l1302:
  3024                           
  3025                           ;LCD.c: 93:     LCD_String(msg);
  3026     028C  0875               	movf	LCD_String_xy@msg,w
  3027     028D  00F3               	movwf	LCD_String@msg
  3028     028E  120A  118A  2254  120A  118A  	fcall	_LCD_String
  3029     0293                     l49:
  3030     0293  0008               	return
  3031     0294                     __end_of_LCD_String_xy:
  3032                           
  3033                           	psect	text11
  3034     0254                     __ptext11:	
  3035 ;; *************** function _LCD_String *****************
  3036 ;; Defined at:
  3037 ;;		line 68 in file "LCD.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  msg             1    3[COMMON] PTR const unsigned char 
  3040 ;;		 -> STR_7(18), STR_6(17), STR_5(15), STR_4(2), 
  3041 ;;		 -> STR_3(17), STR_2(1), STR_1(2), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         1       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0
  3056 ;;      Totals:         1       0       0       0       0
  3057 ;;Total ram usage:        1 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 1
  3060 ;; This function calls:
  3061 ;;		_LCD_Char
  3062 ;; This function is called by:
  3063 ;;		_LCD_String_xy
  3064 ;;		_LCD_Character
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068     0254                     _LCD_String:	
  3069                           ;psect for function _LCD_String
  3070                           
  3071     0254                     l1282:	
  3072                           ;incstack = 0
  3073                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3074                           
  3075                           
  3076                           ;LCD.c: 68: void LCD_String(const char *msg);LCD.c: 69: {;LCD.c: 70:  while((*msg)!=0)
  3077     0254  2A63               	goto	l1288
  3078     0255                     l1284:
  3079                           
  3080                           ;LCD.c: 71:  {;LCD.c: 72:    LCD_Char(*msg);
  3081     0255  0873               	movf	LCD_String@msg,w
  3082     0256  0084               	movwf	4
  3083     0257  120A  118A  2003  120A  118A  	fcall	stringdir
  3084     025C  120A  118A  2349  120A  118A  	fcall	_LCD_Char
  3085     0261                     l1286:
  3086                           
  3087                           ;LCD.c: 73:    msg++;
  3088     0261  3001               	movlw	1
  3089     0262  07F3               	addwf	LCD_String@msg,f
  3090     0263                     l1288:
  3091                           
  3092                           ;LCD.c: 70:  while((*msg)!=0)
  3093     0263  0873               	movf	LCD_String@msg,w
  3094     0264  0084               	movwf	4
  3095     0265  120A  118A  2003  120A  118A  	fcall	stringdir
  3096     026A  3A00               	xorlw	0
  3097     026B  1D03               	skipz
  3098     026C  2A6E               	goto	u551
  3099     026D  2A6F               	goto	u550
  3100     026E                     u551:
  3101     026E  2A55               	goto	l1284
  3102     026F                     u550:
  3103     026F                     l44:
  3104     026F  0008               	return
  3105     0270                     __end_of_LCD_String:
  3106                           
  3107                           	psect	text12
  3108     02E6                     __ptext12:	
  3109 ;; *************** function _LCD_Custom_Char *****************
  3110 ;; Defined at:
  3111 ;;		line 104 in file "LCD.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  loc             1    wreg     unsigned char 
  3114 ;;  msg             1    3[COMMON] PTR unsigned char 
  3115 ;;		 -> character5(8), character4(8), character3(8), character2(8), 
  3116 ;;		 -> character1(8), 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  loc             1    5[COMMON] unsigned char 
  3119 ;;  i               1    6[COMMON] unsigned char 
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         1       0       0       0       0
  3130 ;;      Locals:         2       0       0       0       0
  3131 ;;      Temps:          1       0       0       0       0
  3132 ;;      Totals:         4       0       0       0       0
  3133 ;;Total ram usage:        4 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 1
  3136 ;; This function calls:
  3137 ;;		_LCD_Char
  3138 ;;		_LCD_Command
  3139 ;; This function is called by:
  3140 ;;		_Lmain
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144     02E6                     _LCD_Custom_Char:	
  3145                           ;psect for function _LCD_Custom_Char
  3146                           
  3147                           
  3148                           ;incstack = 0
  3149                           ; Regs used in _LCD_Custom_Char: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3150                           ;LCD_Custom_Char@loc stored from wreg
  3151     02E6  00F5               	movwf	LCD_Custom_Char@loc
  3152     02E7                     l1304:
  3153                           
  3154                           ;LCD.c: 104: void LCD_Custom_Char(unsigned char loc,unsigned char *msg);LCD.c: 105: {;LC
      +                          D.c: 106:     unsigned char i;;LCD.c: 107:     if(loc<8)
  3155     02E7  3008               	movlw	8
  3156     02E8  0275               	subwf	LCD_Custom_Char@loc,w
  3157     02E9  1803               	skipnc
  3158     02EA  2AEC               	goto	u571
  3159     02EB  2AED               	goto	u570
  3160     02EC                     u571:
  3161     02EC  2B12               	goto	l58
  3162     02ED                     u570:
  3163     02ED                     l1306:
  3164                           
  3165                           ;LCD.c: 108:     {;LCD.c: 109:      LCD_Command(0x40+(loc*8));
  3166     02ED  0875               	movf	LCD_Custom_Char@loc,w
  3167     02EE  00F4               	movwf	??_LCD_Custom_Char
  3168     02EF  3002               	movlw	2
  3169     02F0                     u585:
  3170     02F0  1003               	clrc
  3171     02F1  0DF4               	rlf	??_LCD_Custom_Char,f
  3172     02F2  3EFF               	addlw	-1
  3173     02F3  1D03               	skipz
  3174     02F4  2AF0               	goto	u585
  3175     02F5  1003               	clrc
  3176     02F6  0D74               	rlf	??_LCD_Custom_Char,w
  3177     02F7  3E40               	addlw	64
  3178     02F8  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3179     02FD                     l1308:
  3180                           
  3181                           ;LCD.c: 110:       for(i=0;i<8;i++)
  3182     02FD  01F6               	clrf	LCD_Custom_Char@i
  3183     02FE                     l1314:
  3184                           
  3185                           ;LCD.c: 111:            LCD_Char(msg[i]);
  3186     02FE  0876               	movf	LCD_Custom_Char@i,w
  3187     02FF  0773               	addwf	LCD_Custom_Char@msg,w
  3188     0300  00F4               	movwf	??_LCD_Custom_Char
  3189     0301  0874               	movf	??_LCD_Custom_Char,w
  3190     0302  0084               	movwf	4
  3191     0303  1383               	bcf	3,7	;select IRP bank0
  3192     0304  0800               	movf	0,w
  3193     0305  120A  118A  2349  120A  118A  	fcall	_LCD_Char
  3194     030A                     l1316:
  3195     030A  3001               	movlw	1
  3196     030B  07F6               	addwf	LCD_Custom_Char@i,f
  3197     030C                     l1318:
  3198     030C  3008               	movlw	8
  3199     030D  0276               	subwf	LCD_Custom_Char@i,w
  3200     030E  1C03               	skipc
  3201     030F  2B11               	goto	u591
  3202     0310  2B12               	goto	u590
  3203     0311                     u591:
  3204     0311  2AFE               	goto	l1314
  3205     0312                     u590:
  3206     0312                     l58:
  3207     0312  0008               	return
  3208     0313                     __end_of_LCD_Custom_Char:
  3209                           
  3210                           	psect	text13
  3211     0349                     __ptext13:	
  3212 ;; *************** function _LCD_Char *****************
  3213 ;; Defined at:
  3214 ;;		line 42 in file "LCD.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  dat             1    wreg     unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  dat             1    2[COMMON] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3228 ;;      Params:         0       0       0       0       0
  3229 ;;      Locals:         1       0       0       0       0
  3230 ;;      Temps:          2       0       0       0       0
  3231 ;;      Totals:         3       0       0       0       0
  3232 ;;Total ram usage:        3 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_LCD_String
  3238 ;;		_LCD_Custom_Char
  3239 ;;		_Lmain
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243     0349                     _LCD_Char:	
  3244                           ;psect for function _LCD_Char
  3245                           
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3249                           ;LCD_Char@dat stored from wreg
  3250     0349  00F2               	movwf	LCD_Char@dat
  3251     034A                     l1242:
  3252                           
  3253                           ;LCD.c: 42: void LCD_Char(unsigned char dat);LCD.c: 43: {;LCD.c: 44:  PORTC = (PORTC & 0
      +                          x0f) | (0xF0 & dat);
  3254     034A  30F0               	movlw	240
  3255     034B  0572               	andwf	LCD_Char@dat,w
  3256     034C  00F0               	movwf	??_LCD_Char
  3257     034D  1283               	bcf	3,5	;RP0=0, select bank0
  3258     034E  1303               	bcf	3,6	;RP1=0, select bank0
  3259     034F  0807               	movf	7,w	;volatile
  3260     0350  390F               	andlw	15
  3261     0351  0470               	iorwf	??_LCD_Char,w
  3262     0352  0087               	movwf	7	;volatile
  3263     0353                     l1244:
  3264                           
  3265                           ;LCD.c: 45:  PORTCbits.RC0 = 1;
  3266     0353  1407               	bsf	7,0	;volatile
  3267     0354                     l1246:
  3268                           
  3269                           ;LCD.c: 46:  PORTCbits.RC1 = 1;
  3270     0354  1487               	bsf	7,1	;volatile
  3271     0355                     l1248:
  3272                           
  3273                           ;LCD.c: 47:  __nop();
  3274     0355  0000               	nop
  3275     0356                     l1250:
  3276                           
  3277                           ;LCD.c: 48:  PORTCbits.RC1 = 0;
  3278     0356  1283               	bcf	3,5	;RP0=0, select bank0
  3279     0357  1303               	bcf	3,6	;RP1=0, select bank0
  3280     0358  1087               	bcf	7,1	;volatile
  3281     0359                     l1252:
  3282                           
  3283                           ;LCD.c: 49:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3284     0359  3003               	movlw	3
  3285     035A  00F1               	movwf	??_LCD_Char+1
  3286     035B  3097               	movlw	151
  3287     035C  00F0               	movwf	??_LCD_Char
  3288     035D                     u1187:
  3289     035D  0BF0               	decfsz	??_LCD_Char,f
  3290     035E  2B5D               	goto	u1187
  3291     035F  0BF1               	decfsz	??_LCD_Char+1,f
  3292     0360  2B5D               	goto	u1187
  3293     0361  2B62               	nop2
  3294     0362                     l1254:
  3295                           
  3296                           ;LCD.c: 50:     PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  3297     0362  0872               	movf	LCD_Char@dat,w
  3298     0363  00F0               	movwf	??_LCD_Char
  3299     0364  3004               	movlw	4
  3300     0365                     u535:
  3301     0365  1003               	clrc
  3302     0366  0DF0               	rlf	??_LCD_Char,f
  3303     0367  3EFF               	addlw	-1
  3304     0368  1D03               	skipz
  3305     0369  2B65               	goto	u535
  3306     036A  1283               	bcf	3,5	;RP0=0, select bank0
  3307     036B  1303               	bcf	3,6	;RP1=0, select bank0
  3308     036C  0807               	movf	7,w	;volatile
  3309     036D  390F               	andlw	15
  3310     036E  0470               	iorwf	??_LCD_Char,w
  3311     036F  0087               	movwf	7	;volatile
  3312     0370                     l1256:
  3313                           
  3314                           ;LCD.c: 51:  PORTCbits.RC1 = 1;
  3315     0370  1487               	bsf	7,1	;volatile
  3316     0371                     l1258:
  3317                           
  3318                           ;LCD.c: 52:  __nop();
  3319     0371  0000               	nop
  3320     0372                     l1260:
  3321                           
  3322                           ;LCD.c: 53:  PORTCbits.RC1 = 0;
  3323     0372  1283               	bcf	3,5	;RP0=0, select bank0
  3324     0373  1303               	bcf	3,6	;RP1=0, select bank0
  3325     0374  1087               	bcf	7,1	;volatile
  3326                           
  3327                           ;LCD.c: 54:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3328     0375  3008               	movlw	8
  3329     0376  00F1               	movwf	??_LCD_Char+1
  3330     0377  30C9               	movlw	201
  3331     0378  00F0               	movwf	??_LCD_Char
  3332     0379                     u1197:
  3333     0379  0BF0               	decfsz	??_LCD_Char,f
  3334     037A  2B79               	goto	u1197
  3335     037B  0BF1               	decfsz	??_LCD_Char+1,f
  3336     037C  2B79               	goto	u1197
  3337     037D  2B7E               	nop2
  3338     037E                     l33:
  3339     037E  0008               	return
  3340     037F                     __end_of_LCD_Char:
  3341                           
  3342                           	psect	text14
  3343     02BC                     __ptext14:	
  3344 ;; *************** function _LCD_Init *****************
  3345 ;; Defined at:
  3346 ;;		line 16 in file "LCD.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0
  3362 ;;      Temps:          2       0       0       0       0
  3363 ;;      Totals:         2       0       0       0       0
  3364 ;;Total ram usage:        2 bytes
  3365 ;; Hardware stack levels used: 1
  3366 ;; Hardware stack levels required when called: 1
  3367 ;; This function calls:
  3368 ;;		_LCD_Command
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     02BC                     _LCD_Init:	
  3375                           ;psect for function _LCD_Init
  3376                           
  3377     02BC                     l1340:	
  3378                           ;incstack = 0
  3379                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3380                           
  3381                           
  3382                           ;LCD.c: 18:     TRISC = 0;
  3383     02BC  1683               	bsf	3,5	;RP0=1, select bank1
  3384     02BD  1303               	bcf	3,6	;RP1=0, select bank1
  3385     02BE  0187               	clrf	7	;volatile
  3386     02BF                     l1342:
  3387                           
  3388                           ;LCD.c: 19:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3389     02BF  3027               	movlw	39
  3390     02C0  00F4               	movwf	??_LCD_Init+1
  3391     02C1  30F5               	movlw	245
  3392     02C2  00F3               	movwf	??_LCD_Init
  3393     02C3                     u1207:
  3394     02C3  0BF3               	decfsz	??_LCD_Init,f
  3395     02C4  2AC3               	goto	u1207
  3396     02C5  0BF4               	decfsz	??_LCD_Init+1,f
  3397     02C6  2AC3               	goto	u1207
  3398     02C7                     l1344:
  3399                           
  3400                           ;LCD.c: 20:     LCD_Command(0x02);
  3401     02C7  3002               	movlw	2
  3402     02C8  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3403     02CD                     l1346:
  3404                           
  3405                           ;LCD.c: 21:     LCD_Command(0x28);
  3406     02CD  3028               	movlw	40
  3407     02CE  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3408     02D3                     l1348:
  3409                           
  3410                           ;LCD.c: 22:     LCD_Command(0x01);
  3411     02D3  3001               	movlw	1
  3412     02D4  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3413     02D9                     l1350:
  3414                           
  3415                           ;LCD.c: 23:     LCD_Command(0x0c);
  3416     02D9  300C               	movlw	12
  3417     02DA  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3418     02DF                     l1352:
  3419                           
  3420                           ;LCD.c: 24:     LCD_Command(0x06);
  3421     02DF  3006               	movlw	6
  3422     02E0  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3423     02E5                     l27:
  3424     02E5  0008               	return
  3425     02E6                     __end_of_LCD_Init:
  3426                           
  3427                           	psect	text15
  3428     01F5                     __ptext15:	
  3429 ;; *************** function _LCD_Clear *****************
  3430 ;; Defined at:
  3431 ;;		line 97 in file "LCD.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;		None
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;                  1    wreg      void 
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0, pclath, cstack
  3440 ;; Tracked objects:
  3441 ;;		On entry : 0/0
  3442 ;;		On exit  : 0/0
  3443 ;;		Unchanged: 0/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         0       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          2       0       0       0       0
  3448 ;;      Totals:         2       0       0       0       0
  3449 ;;Total ram usage:        2 bytes
  3450 ;; Hardware stack levels used: 1
  3451 ;; Hardware stack levels required when called: 1
  3452 ;; This function calls:
  3453 ;;		_LCD_Command
  3454 ;; This function is called by:
  3455 ;;		_main
  3456 ;; This function uses a non-reentrant model
  3457 ;;
  3458                           
  3459     01F5                     _LCD_Clear:	
  3460                           ;psect for function _LCD_Clear
  3461                           
  3462     01F5                     l1354:	
  3463                           ;incstack = 0
  3464                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3465                           
  3466                           
  3467                           ;LCD.c: 99:     LCD_Command(0x01);
  3468     01F5  3001               	movlw	1
  3469     01F6  120A  118A  2313  120A  118A  	fcall	_LCD_Command
  3470     01FB                     l1356:
  3471                           
  3472                           ;LCD.c: 100:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3473     01FB  3008               	movlw	8
  3474     01FC  00F4               	movwf	??_LCD_Clear+1
  3475     01FD  30C9               	movlw	201
  3476     01FE  00F3               	movwf	??_LCD_Clear
  3477     01FF                     u1217:
  3478     01FF  0BF3               	decfsz	??_LCD_Clear,f
  3479     0200  29FF               	goto	u1217
  3480     0201  0BF4               	decfsz	??_LCD_Clear+1,f
  3481     0202  29FF               	goto	u1217
  3482     0203  2A04               	nop2
  3483     0204                     l52:
  3484     0204  0008               	return
  3485     0205                     __end_of_LCD_Clear:
  3486                           
  3487                           	psect	text16
  3488     0313                     __ptext16:	
  3489 ;; *************** function _LCD_Command *****************
  3490 ;; Defined at:
  3491 ;;		line 27 in file "LCD.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  cmd             1    wreg     unsigned char 
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  cmd             1    2[COMMON] unsigned char 
  3496 ;; Return value:  Size  Location     Type
  3497 ;;                  1    wreg      void 
  3498 ;; Registers used:
  3499 ;;		wreg, status,2, status,0
  3500 ;; Tracked objects:
  3501 ;;		On entry : 0/0
  3502 ;;		On exit  : 0/0
  3503 ;;		Unchanged: 0/0
  3504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3505 ;;      Params:         0       0       0       0       0
  3506 ;;      Locals:         1       0       0       0       0
  3507 ;;      Temps:          2       0       0       0       0
  3508 ;;      Totals:         3       0       0       0       0
  3509 ;;Total ram usage:        3 bytes
  3510 ;; Hardware stack levels used: 1
  3511 ;; This function calls:
  3512 ;;		Nothing
  3513 ;; This function is called by:
  3514 ;;		_LCD_Init
  3515 ;;		_LCD_String_xy
  3516 ;;		_LCD_Clear
  3517 ;;		_LCD_Custom_Char
  3518 ;;		_Lmain
  3519 ;;		_main
  3520 ;;		_LCD_Character
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524     0313                     _LCD_Command:	
  3525                           ;psect for function _LCD_Command
  3526                           
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  3530                           ;LCD_Command@cmd stored from wreg
  3531     0313  00F2               	movwf	LCD_Command@cmd
  3532     0314                     l1262:
  3533                           
  3534                           ;LCD.c: 27: void LCD_Command(unsigned char cmd );LCD.c: 28: {;LCD.c: 29:  PORTC = (PORTC
      +                           & 0x0f) |(0xF0 & cmd);
  3535     0314  30F0               	movlw	240
  3536     0315  0572               	andwf	LCD_Command@cmd,w
  3537     0316  00F0               	movwf	??_LCD_Command
  3538     0317  1283               	bcf	3,5	;RP0=0, select bank0
  3539     0318  1303               	bcf	3,6	;RP1=0, select bank0
  3540     0319  0807               	movf	7,w	;volatile
  3541     031A  390F               	andlw	15
  3542     031B  0470               	iorwf	??_LCD_Command,w
  3543     031C  0087               	movwf	7	;volatile
  3544     031D                     l1264:
  3545                           
  3546                           ;LCD.c: 30:  PORTCbits.RC0 = 0;
  3547     031D  1007               	bcf	7,0	;volatile
  3548     031E                     l1266:
  3549                           
  3550                           ;LCD.c: 31:  PORTCbits.RC1 = 1;
  3551     031E  1487               	bsf	7,1	;volatile
  3552     031F                     l1268:
  3553                           
  3554                           ;LCD.c: 32:  __nop();
  3555     031F  0000               	nop
  3556     0320                     l1270:
  3557                           
  3558                           ;LCD.c: 33:  PORTCbits.RC1 = 0;
  3559     0320  1283               	bcf	3,5	;RP0=0, select bank0
  3560     0321  1303               	bcf	3,6	;RP1=0, select bank0
  3561     0322  1087               	bcf	7,1	;volatile
  3562     0323                     l1272:
  3563                           
  3564                           ;LCD.c: 34:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3565     0323  3003               	movlw	3
  3566     0324  00F1               	movwf	??_LCD_Command+1
  3567     0325  3097               	movlw	151
  3568     0326  00F0               	movwf	??_LCD_Command
  3569     0327                     u1227:
  3570     0327  0BF0               	decfsz	??_LCD_Command,f
  3571     0328  2B27               	goto	u1227
  3572     0329  0BF1               	decfsz	??_LCD_Command+1,f
  3573     032A  2B27               	goto	u1227
  3574     032B  2B2C               	nop2
  3575     032C                     l1274:
  3576                           
  3577                           ;LCD.c: 35:     PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  3578     032C  0872               	movf	LCD_Command@cmd,w
  3579     032D  00F0               	movwf	??_LCD_Command
  3580     032E  3004               	movlw	4
  3581     032F                     u545:
  3582     032F  1003               	clrc
  3583     0330  0DF0               	rlf	??_LCD_Command,f
  3584     0331  3EFF               	addlw	-1
  3585     0332  1D03               	skipz
  3586     0333  2B2F               	goto	u545
  3587     0334  1283               	bcf	3,5	;RP0=0, select bank0
  3588     0335  1303               	bcf	3,6	;RP1=0, select bank0
  3589     0336  0807               	movf	7,w	;volatile
  3590     0337  390F               	andlw	15
  3591     0338  0470               	iorwf	??_LCD_Command,w
  3592     0339  0087               	movwf	7	;volatile
  3593     033A                     l1276:
  3594                           
  3595                           ;LCD.c: 36:  PORTCbits.RC1 = 1;
  3596     033A  1487               	bsf	7,1	;volatile
  3597     033B                     l1278:
  3598                           
  3599                           ;LCD.c: 37:  __nop();
  3600     033B  0000               	nop
  3601     033C                     l1280:
  3602                           
  3603                           ;LCD.c: 38:  PORTCbits.RC1 = 0;
  3604     033C  1283               	bcf	3,5	;RP0=0, select bank0
  3605     033D  1303               	bcf	3,6	;RP1=0, select bank0
  3606     033E  1087               	bcf	7,1	;volatile
  3607                           
  3608                           ;LCD.c: 39:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3609     033F  3008               	movlw	8
  3610     0340  00F1               	movwf	??_LCD_Command+1
  3611     0341  30C9               	movlw	201
  3612     0342  00F0               	movwf	??_LCD_Command
  3613     0343                     u1237:
  3614     0343  0BF0               	decfsz	??_LCD_Command,f
  3615     0344  2B43               	goto	u1237
  3616     0345  0BF1               	decfsz	??_LCD_Command+1,f
  3617     0346  2B43               	goto	u1237
  3618     0347  2B48               	nop2
  3619     0348                     l30:
  3620     0348  0008               	return
  3621     0349                     __end_of_LCD_Command:
  3622     0002                     ___latbits      equ	2
  3623     007E                     btemp           set	126	;btemp
  3624     007E                     wtemp0          set	126
  3625                           
  3626                           	psect	config
  3627                           
  3628                           ;Config register CONFIG1 @ 0x2007
  3629                           ;	Oscillator Selection bits
  3630                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3631                           ;	Watchdog Timer Enable bit
  3632                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3633                           ;	Power-up Timer Enable bit
  3634                           ;	PWRTE = OFF, PWRT disabled
  3635                           ;	RE3/MCLR pin function select bit
  3636                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3637                           ;	Code Protection bit
  3638                           ;	CP = OFF, Program memory code protection is disabled
  3639                           ;	Data Code Protection bit
  3640                           ;	CPD = OFF, Data memory code protection is disabled
  3641                           ;	Brown Out Reset Selection bits
  3642                           ;	BOREN = OFF, BOR disabled
  3643                           ;	Internal External Switchover bit
  3644                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3645                           ;	Fail-Safe Clock Monitor Enabled bit
  3646                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3647                           ;	Low Voltage Programming Enable bit
  3648                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3649                           ;	In-Circuit Debugger Mode bit
  3650                           ;	DEBUG = 0x1, unprogrammed default
  3651     2007                     	org	8199
  3652     2007  20D5               	dw	8405
  3653                           
  3654                           ;Config register CONFIG2 @ 0x2008
  3655                           ;	Brown-out Reset Selection bit
  3656                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3657                           ;	Flash Program Memory Self Write Enable bits
  3658                           ;	WRT = OFF, Write protection off
  3659     2008                     	org	8200
  3660     2008  3FFF               	dw	16383

Data Sizes:
    Strings     69
    Constant    5
    Data        56
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     22      69
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Custom_Char@msg	PTR unsigned char  size(1) Largest target is 8
		 -> character1(BANK0[8]), character2(BANK0[8]), character3(BANK0[8]), character4(BANK0[8]), 
		 -> character5(BANK0[8]), 

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[2]), STR_2(CODE[1]), STR_3(CODE[17]), STR_4(CODE[2]), 
		 -> STR_5(CODE[15]), STR_6(CODE[17]), STR_7(CODE[18]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[1]), STR_3(CODE[17]), STR_4(CODE[2]), STR_5(CODE[15]), 
		 -> STR_6(CODE[17]), STR_7(CODE[18]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_blink_led
    _blink_led->_delay_ms_variable
    _Lmain->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3462
                                             12 COMMON     1     1      0
                                             19 BANK0      3     3      0
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                              _Lmain
                          _blink_led
                      _keypad_getkey
                        _keypad_init
                         _secuencia1
                         _secuencia5
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     2      4     182
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _secuencia5                                          19    19      0     640
                                              0 COMMON     3     3      0
                                              0 BANK0     16    16      0
 ---------------------------------------------------------------------------------
 (1) _secuencia1                                          11    11      0     320
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _blink_led                                           11     5      6     341
                                              4 COMMON     8     2      6
                                              0 BANK0      3     3      0
                  _delay_ms_variable
 ---------------------------------------------------------------------------------
 (2) _delay_ms_variable                                    4     2      2      24
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Lmain                                                1     1      0     900
                                              8 COMMON     1     1      0
                           _LCD_Char
                        _LCD_Command
                    _LCD_Custom_Char
                      _LCD_String_xy
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     108
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        4     2      2     317
                                              4 COMMON     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           1     0      1     105
                                              3 COMMON     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     3      1     269
                                              3 COMMON     4     3      1
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      58
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      58
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _Lmain
     _LCD_Char
     _LCD_Command
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
     _LCD_String_xy
     ___bmul
   _blink_led
     _delay_ms_variable
   _keypad_getkey
   _keypad_init
   _secuencia1
   _secuencia5
   _strncmp

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0      16     20.0%
BITBANK1            80      0       0      0.0%
BANK0               80     22      69     86.2%
BITBANK0            80      0       0      0.0%
COMMON              14     13      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      99      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Oct 03 15:27:21 2024

                        pc 0002             ___bmul@product 0071               ?_LCD_Command 0070  
                       l30 0348                         l33 037E                         l27 02E5  
                       l52 0204                         l44 026F                         l63 03CF  
                       l49 0293                         l58 0312                         l74 01F4  
                       fsr 0004                ?_LCD_String 0073            _LCD_Custom_Char 02E6  
                      l202 04F8                        l133 05D9                        l209 06C8  
                      l181 0253                        l335 0227                        l197 048A  
                      l769 0427                        u600 0253                        u601 0252  
                      u610 021B                        u611 021A                        u620 0226  
                      u700 0546                        u621 0225                        u701 0545  
                      u550 026F                        u630 03B7                        u710 0556  
                      u535 0365                        u551 026E                        u631 03B6  
                      u711 0555                        u560 0277                        u800 059E  
                      u720 055D                        u640 04FF                        u545 032F  
                      u561 0276                        u801 059D                        u721 055C  
                      u570 02ED                        u810 05AE                        u730 0564  
                      u650 051B                        u571 02EC                        u811 05AD  
                      u731 0563                        u651 051A                        u900 045E  
                      u820 05B5                        u740 056B                        u660 052B  
                      u901 045D                        u821 05B4                        u741 056A  
                      u661 052A                        u590 0312                        u910 0466  
                      u830 05BC                        u750 0572                        u670 0532  
                      u591 0311                        u911 0465                        u831 05BB  
                      u751 0571                        u671 0531                        u920 048A  
                      u840 05C3                        u760 0582                        u680 0539  
                      u585 02F0                        u921 0489                        u841 05C2  
                      u761 0581                        u681 0538                        u850 05D6  
                      u770 0589                        u690 0540                        u930 04F8  
                      u851 05D5                        u771 0588                        u691 053F  
                      u931 04F7                        u860 0434                        u780 0590  
                      u940 064B                        u925 0486                        u861 0433  
                      u781 058F                        u941 064A                        u870 043C  
                      u790 0597                        u950 06C8                        u871 043B  
                      u855 05D2                        u791 0596                        u935 04F4  
                      u951 06C7                        u880 0444                        u960 03DE  
                      u881 0443                        u945 0647                        u961 03DD  
                      u890 0456                        u970 03F3                        u891 0455  
                      u955 06C4                        u971 03F2                        u980 03FF  
                      u981 03FE                        u990 0405                        u991 0404  
                      _idx 007D                        fsr0 0004                        indf 0000  
              LCD_Char@dat 0072                       l1300 0286                       l1302 028C  
                     l1304 02E7                       l1320 023B                       l1400 052E  
                     l1250 0356                       l1242 034A                       l1314 02FE  
                     l1306 02ED                       l1330 021B                       l1322 023C  
                     l1402 0533                       l1410 0540                       l1340 02BC  
                     l1260 0372                       l1252 0359                       l1244 0353  
                     l1316 030A                       l1308 02FD                       l1332 021D  
                     l1324 0245                       l1500 044E                       l1420 0557  
                     l1412 0546                       l1404 0535                       l1270 0320  
                     l1262 0314                       l1350 02D9                       l1342 02BF  
                     l1254 0362                       l1246 0354                       l1318 030C  
                     l1334 021F                       l1326 0216                       l1510 0466  
                     l1502 0456                       l1430 0567                       l1422 0559  
                     l1414 0548                       l1406 053A                       l1280 033C  
                     l1272 0323                       l1264 031D                       l1352 02DF  
                     l1344 02C7                       l1256 0370                       l1248 0355  
                     l1336 0226                       l1328 0217                       l1360 03B0  
                     l1512 0467                       l1504 0458                       l1440 057C  
                     l1424 055E                       l1416 054E                       l1432 056B  
                     l1408 053C                       l1520 0493                       l1600 06B5  
                     l1274 032C                       l1266 031E                       l1354 01F5  
                     l1346 02CD                       l1258 0371                       l1282 0254  
                     l1290 0271                       l1362 03B1                       l1514 0470  
                     l1506 045E                       l1450 0591                       l1442 0583  
                     l1434 0572                       l1426 0560                       l1418 0550  
                     l1530 04AE                       l1522 0495                       l1602 06BB  
                     l1610 03E1                       l1276 033A                       l1268 031F  
                     l1356 01FB                       l1348 02D3                       l1284 0255  
                     l1292 0271                       l1508 0460                       l1516 0480  
                     l1460 05A6                       l1452 0593                       l1444 0585  
                     l1436 0574                       l1428 0565                       l1380 050E  
                     l1372 01ED                       l1540 04D5                       l1532 04B9  
                     l1620 0405                       l1612 03E5                       l1604 03D0  
                     l1278 033B                       l1286 0261                       l1294 0277  
                     l1366 03B8                       l1358 037F                       l1470 05B8  
                     l1462 05A8                       l1446 058A                       l1438 057A  
                     l1454 0597                       l1390 051B                       l1382 0511  
                     l1374 01F3                       l1542 04DB                       l1534 04BE  
                     l1518 048B                       l1550 05DA                       l1622 0415  
                     l1606 03DE                       l1614 03EB                       l1702 07C0  
                     l1288 0263                       l1296 027B                       l1368 03CC  
                     l1480 05D6                       l1472 05BD                       l1464 05AF  
                     l1456 059E                       l1448 058C                       l1392 051D  
                     l1376 04F9                       l1544 04E0                       l1536 04C4  
                     l1528 0497                       l1560 05E8                       l1552 05E4  
                     l1616 03F3                       l1704 07CF                       l1640 06CD  
                     l1298 0282                       l1490 0436                       l1474 05BF  
                     l1466 05B1                       l1458 05A0                       l1394 0523  
                     l1378 050E                       l1546 04E5                       l1538 04C8  
                     l1570 0619                       l1562 05FF                       l1554 05E6  
                     l1618 03FF                       l1706 07D4                       l1650 06E3  
                     l1642 06D7                       l1492 043C                       l1484 042B  
                     l1468 05B6                       l1476 05C3                       l1396 0525  
                     l1388 0513                       l1548 04EB                       l1580 063E  
                     l1572 0626                       l1564 060C                       l1660 06FF  
                     l1652 06E6                       l1644 06DA                       l1494 043E  
                     l1486 042E                       l1478 05C9                       l1398 052C  
                     l1582 064B                       l1574 062E                       l1566 0611  
                     l1670 071C                       l1662 0705                       l1654 06EB  
                     l1646 06DD                       l1638 06C9                       l1496 0444  
                     l1488 0434                       l1592 0659                       l1584 0655  
                     l1576 0633                       l1568 0617                       l1680 0752  
                     l1672 072B                       l1664 070A                       l1656 06F0  
                     l1648 06E0                       l1498 0445                       l1594 0670  
                     l1586 0657                       l1578 0638                       l1690 078E  
                     l1682 0769                       l1674 0731                       l1666 0714  
                     l1658 06F9                       l1596 067D                       l1692 0798  
                     l1676 0744                       l1684 076E                       l1668 071A  
                     l1598 06AA                       l1694 079F                       l1686 0773  
                     l1678 0749                       l1696 07A4                       l1688 077C  
                     l1698 07AD                       STR_1 0051                       STR_2 0030  
                     STR_3 0020                       STR_4 0051                       STR_5 0042  
                     STR_6 0031                       STR_7 000E                       u1000 0415  
                     u1001 0414                       u1010 070A                       u1011 0709  
                     u1020 0731                       u1021 0730                       u1030 0744  
                     u1031 0743                       u1040 079F                       u1041 079E  
                     u1107 0696                       u1117 04A7                       u1207 02C3  
                     u1127 04CE                       u1217 01FF                       u1137 051F  
                     u1057 0724                       u1227 0327                       u1147 054A  
                     u1067 07C8                       u1237 0343                       u1157 0576  
                     u1077 05F8                       u1167 05A2                       u1087 061F  
                     u1177 0240                       u1097 0669                       u1187 035D  
                     u1197 0379                       _main 06C9                       btemp 007E  
                     start 0000              _LCD_String_xy 0270          ___bmul@multiplier 0072  
         __end_of_LCD_Char 037F           __end_of_LCD_Init 02E6                      ?_main 0070  
                    _ANSEL 0188                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _Lmain 037F               ?_keypad_init 0070                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_strncmp 0428  
           ?_LCD_String_xy 0074    __end_of_LCD_Custom_Char 0313            __initialization 07D9  
             __end_of_main 07D9                     ??_main 005B          __end_of_LCD_Clear 0205  
                   ?_Lmain 0070        keypad_getkey@letras 0048                     _ANSELH 0189  
         LCD_String_xy@msg 0075           LCD_String_xy@pos 0074           LCD_String_xy@row 0076  
                   _OSCCON 008F                     Lmain@i 0078                     ___bmul 0215  
         __end_of_password 000E           LCD_Custom_Char@i 0076        delay_ms_variable@ms 0070  
                ??_strncmp 0074                  ?_LCD_Char 0070    __end_of__initialization 07FC  
                ?_LCD_Init 0070            ??_LCD_String_xy 0076        ___bmul@multiplicand 0070  
            __end_of_Lmain 03D0           ?_LCD_Custom_Char 0073             __pcstackCOMMON 0070  
             __pidataBANK0 0294               __pidataBANK1 0205               ??_LCD_String 0074  
           _OPTION_REGbits 0081                    ??_Lmain 0078                 __pbssBANK0 005E  
               ??_LCD_Char 0070                 _character1 0040                 _character2 0038  
               _character3 0030                 _character4 0028                 _character5 0020  
               ??_LCD_Init 0073         __end_of_LCD_String 0270                 __pmaintext 06C9  
                  ?___bmul 0070              _keypad_getkey 04F9                secuencia1@i 0073  
              secuencia5@i 0048          _delay_ms_variable 023B         ?_delay_ms_variable 0070  
               __stringtab 0003          __end_of_blink_led 048B        ??_delay_ms_variable 0072  
            LCD_String@msg 0073                    __ptext1 03D0                    __ptext2 05DA  
                  __ptext3 048B                    __ptext4 01ED                    __ptext5 04F9  
                  __ptext6 0428                    __ptext7 023B                    __ptext8 037F  
                  __ptext9 0215             ?_keypad_getkey 0070  __end_of_delay_ms_variable 0254  
                _LCD_Clear 01F5                    main@key 007C                    _strncmp 03D0  
     end_of_initialization 07FC                 _secuencia1 048B                 _secuencia5 05DA  
           LCD_Command@cmd 0072                  _PORTAbits 0005                  _PORTCbits 0007  
               ?_LCD_Clear 0070              ??_LCD_Command 0070             __end_of___bmul 0228  
          ??_keypad_getkey 0070         keypad_getkey@F1398 00A0        start_initialization 07D9  
              ?_secuencia1 0070                ?_secuencia5 0070         keypad_getkey@valor 0058  
    __end_of_LCD_String_xy 0294                   ??___bmul 0071                 init_fetch0 0228  
              __pdataBANK0 0020                __pdataBANK1 00A0        __end_of_LCD_Command 0349  
              __pbssCOMMON 007D                  ___latbits 0002              __pcstackBANK0 0048  
              ??_LCD_Clear 0073              ??_keypad_init 0070                  _blink_led 0428  
                __pstrings 0003      blink_led@elapsed_time 0048      LCD_String_xy@location 0077  
                 ?_strncmp 0070                   _LCD_Char 0349                   _LCD_Init 02BC  
                _pass_user 0060        __end_of_keypad_init 01F5                 ?_blink_led 0074  
              _LCD_Command 0313                __stringbase 0008          ??_LCD_Custom_Char 0074  
       __end_of__stringtab 0009                   __ptext10 0270                   __ptext11 0254  
                 __ptext12 02E6                   __ptext13 0349                   __ptext14 02BC  
                 __ptext15 01F5                   __ptext16 0313                _keypad_init 01ED  
             ??_secuencia1 0070               ??_secuencia5 0070                   _intentos 005E  
                 _password 0009          blink_led@duration 0078          blink_led@off_time 0076  
              ??_blink_led 007A               blink_led@led 004A                 _LCD_String 0254  
          secuencia5@i_226 004A      __end_of_keypad_getkey 05DA         __end_of_secuencia1 04F9  
       __end_of_secuencia5 06C9            secuencia5@var12 004C                   init_ram0 022C  
       LCD_Custom_Char@loc 0075         LCD_Custom_Char@msg 0073                  stringcode 0003  
         blink_led@on_time 0074             secuencia1@var3 0077             secuencia1@var4 0079  
           secuencia1@var5 0075             secuencia5@var1 0052             secuencia5@var2 0054  
           secuencia5@var6 0056             secuencia5@var7 0050             secuencia5@var8 004E  
                 strncmp@l 0070                   strncmp@n 0072                   strncmp@r 0071  
                 stringdir 0003                   stringtab 0003             keypad_getkey@i 0059  
